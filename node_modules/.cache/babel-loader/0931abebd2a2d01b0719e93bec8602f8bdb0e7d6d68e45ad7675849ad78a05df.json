{"ast":null,"code":"import { __assign, __extends, __read } from \"tslib\";\nimport { deepMix, each, filter, get } from '@antv/util';\nimport { DIRECTION } from '../constant';\nimport { getFactTitleConfig } from '../util/facet';\nimport { Facet } from './facet';\n/**\n * @ignore\n * 矩阵分面\n */\nvar Rect = /** @class */function (_super) {\n  __extends(Rect, _super);\n  function Rect() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Rect.prototype.afterEachView = function (view, facet) {\n    this.processAxis(view, facet);\n  };\n  Rect.prototype.beforeEachView = function (view, facet) {\n    // do nothing\n  };\n  Rect.prototype.getDefaultCfg = function () {\n    return deepMix({}, _super.prototype.getDefaultCfg.call(this), {\n      type: 'rect',\n      columnTitle: __assign({}, _super.prototype.getDefaultTitleCfg.call(this)),\n      rowTitle: __assign({}, _super.prototype.getDefaultTitleCfg.call(this))\n    });\n  };\n  Rect.prototype.render = function () {\n    _super.prototype.render.call(this);\n    if (this.cfg.showTitle) {\n      this.renderTitle();\n    }\n  };\n  /**\n   * 生成矩阵分面的分面数据\n   * @param data\n   */\n  Rect.prototype.generateFacets = function (data) {\n    var _this = this;\n    var _a = __read(this.cfg.fields, 2),\n      columnField = _a[0],\n      rowField = _a[1];\n    var rst = [];\n    var columnValuesLength = 1;\n    var rowValuesLength = 1;\n    var columnValues = [''];\n    var rowValues = [''];\n    if (columnField) {\n      columnValues = this.getFieldValues(data, columnField);\n      columnValuesLength = columnValues.length;\n    }\n    if (rowField) {\n      rowValues = this.getFieldValues(data, rowField);\n      rowValuesLength = rowValues.length;\n    }\n    // 获取每个维度对应的数据配置片段\n    columnValues.forEach(function (xVal, xIndex) {\n      rowValues.forEach(function (yVal, yIndex) {\n        var conditions = [{\n          field: columnField,\n          value: xVal,\n          values: columnValues\n        }, {\n          field: rowField,\n          value: yVal,\n          values: rowValues\n        }];\n        var facetData = filter(data, _this.getFacetDataFilter(conditions));\n        var facet = {\n          type: _this.cfg.type,\n          data: facetData,\n          region: _this.getRegion(rowValuesLength, columnValuesLength, xIndex, yIndex),\n          columnValue: xVal,\n          rowValue: yVal,\n          columnField: columnField,\n          rowField: rowField,\n          columnIndex: xIndex,\n          rowIndex: yIndex,\n          columnValuesLength: columnValuesLength,\n          rowValuesLength: rowValuesLength\n        };\n        rst.push(facet);\n      });\n    });\n    return rst;\n  };\n  Rect.prototype.renderTitle = function () {\n    var _this = this;\n    each(this.facets, function (facet, facetIndex) {\n      var columnIndex = facet.columnIndex,\n        rowIndex = facet.rowIndex,\n        columnValuesLength = facet.columnValuesLength,\n        columnValue = facet.columnValue,\n        rowValue = facet.rowValue,\n        view = facet.view;\n      // top\n      if (rowIndex === 0) {\n        var formatter = get(_this.cfg.columnTitle, 'formatter');\n        var config = deepMix({\n          position: ['50%', '0%'],\n          content: formatter ? formatter(columnValue) : columnValue\n        }, getFactTitleConfig(DIRECTION.TOP), _this.cfg.columnTitle);\n        view.annotation().text(config);\n      }\n      // right\n      if (columnIndex === columnValuesLength - 1) {\n        var formatter = get(_this.cfg.rowTitle, 'formatter');\n        var config = deepMix({\n          position: ['100%', '50%'],\n          content: formatter ? formatter(rowValue) : rowValue\n        }, getFactTitleConfig(DIRECTION.RIGHT), _this.cfg.rowTitle);\n        view.annotation().text(config);\n      }\n    });\n  };\n  /**\n   * 设置 x 坐标轴的文本、title 是否显示\n   * @param x\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  Rect.prototype.getXAxisOption = function (x, axes, option, facet) {\n    // 非最后一行\n    if (facet.rowIndex !== facet.rowValuesLength - 1) {\n      return __assign(__assign({}, option), {\n        title: null,\n        label: null\n      });\n    } else if (facet.columnIndex !== Math.floor((facet.columnValuesLength - 1) / 2)) {\n      // 不是中间列\n      return __assign(__assign({}, option), {\n        title: null\n      });\n    }\n    return option;\n  };\n  /**\n   * 设置 y 坐标轴的文本、title 是否显示\n   * @param y\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  Rect.prototype.getYAxisOption = function (y, axes, option, facet) {\n    if (facet.columnIndex !== 0) {\n      return __assign(__assign({}, option), {\n        title: null,\n        label: null\n      });\n    } else if (facet.rowIndex !== Math.floor((facet.rowValuesLength - 1) / 2)) {\n      return __assign(__assign({}, option), {\n        title: null\n      });\n    }\n    return option;\n  };\n  return Rect;\n}(Facet);\nexport default Rect;","map":{"version":3,"mappings":"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","names":["deepMix","each","filter","get","DIRECTION","getFactTitleConfig","Facet","__extends","Rect","view","facet","processAxis","_super","getDefaultCfg","type","columnTitle","getDefaultTitleCfg","rowTitle","render","cfg","showTitle","renderTitle","data","fields","columnField","rowField","rst","columnValuesLength","rowValuesLength","columnValues","rowValues","getFieldValues","length","forEach","xVal","xIndex","yVal","yIndex","conditions","field","value","values","facetData","_this","getFacetDataFilter","region","getRegion","columnValue","rowValue","columnIndex","rowIndex","push","facets","facetIndex","formatter","config","position","content","TOP","annotation","text","RIGHT","x","axes","option","title","label","Math","floor","y"],"sources":["/home/iam/Documents/network/node_modules/@antv/g2/src/facet/rect.ts"],"sourcesContent":["import { deepMix, each, filter, get } from '@antv/util';\nimport { DIRECTION } from '../constant';\nimport { AxisCfg, Datum, RectCfg, RectData } from '../interface';\n\nimport View from '../chart/view';\nimport { getFactTitleConfig } from '../util/facet';\nimport { Facet } from './facet';\n\n/**\n * @ignore\n * 矩阵分面\n */\nexport default class Rect extends Facet<RectCfg, RectData> {\n  protected afterEachView(view: View, facet: RectData) {\n    this.processAxis(view, facet);\n  }\n\n  protected beforeEachView(view: View, facet: RectData) {\n    // do nothing\n  }\n\n  protected getDefaultCfg() {\n    return deepMix({}, super.getDefaultCfg(), {\n      type: 'rect',\n      columnTitle: {\n        ...super.getDefaultTitleCfg(),\n      },\n      rowTitle: {\n        ...super.getDefaultTitleCfg(),\n      },\n    });\n  }\n\n  public render() {\n    super.render();\n\n    if (this.cfg.showTitle) {\n      this.renderTitle();\n    }\n  }\n\n  /**\n   * 生成矩阵分面的分面数据\n   * @param data\n   */\n  protected generateFacets(data: Datum[]): RectData[] {\n    const [columnField, rowField] = this.cfg.fields;\n\n    const rst = [];\n    let columnValuesLength = 1;\n    let rowValuesLength = 1;\n\n    let columnValues: string[] = [''];\n    let rowValues: string[] = [''];\n\n    if (columnField) {\n      columnValues = this.getFieldValues(data, columnField);\n      columnValuesLength = columnValues.length;\n    }\n    if (rowField) {\n      rowValues = this.getFieldValues(data, rowField);\n      rowValuesLength = rowValues.length;\n    }\n\n    // 获取每个维度对应的数据配置片段\n    columnValues.forEach((xVal, xIndex) => {\n      rowValues.forEach((yVal, yIndex) => {\n        const conditions = [\n          { field: columnField, value: xVal, values: columnValues },\n          { field: rowField, value: yVal, values: rowValues },\n        ];\n        const facetData = filter(data, this.getFacetDataFilter(conditions));\n\n        const facet: RectData = {\n          type: this.cfg.type,\n          data: facetData,\n          region: this.getRegion(rowValuesLength, columnValuesLength, xIndex, yIndex),\n\n          columnValue: xVal,\n          rowValue: yVal,\n          columnField,\n          rowField,\n          columnIndex: xIndex,\n          rowIndex: yIndex,\n          columnValuesLength,\n          rowValuesLength,\n        };\n        rst.push(facet);\n      });\n    });\n\n    return rst;\n  }\n\n  private renderTitle(): void {\n    each(this.facets, (facet: RectData, facetIndex: number) => {\n      const { columnIndex, rowIndex, columnValuesLength, columnValue, rowValue, view } = facet;\n\n      // top\n      if (rowIndex === 0) {\n        const formatter = get(this.cfg.columnTitle, 'formatter');\n        const config = deepMix(\n          {\n            position: ['50%', '0%'] as [string, string],\n            content: formatter ? formatter(columnValue) : columnValue,\n          },\n          getFactTitleConfig(DIRECTION.TOP),\n          this.cfg.columnTitle\n        );\n\n        view.annotation().text(config);\n      }\n      // right\n      if (columnIndex === columnValuesLength - 1) {\n        const formatter = get(this.cfg.rowTitle, 'formatter');\n        const config = deepMix(\n          {\n            position: ['100%', '50%'] as [string, string],\n            content: formatter ? formatter(rowValue) : rowValue,\n          },\n          getFactTitleConfig(DIRECTION.RIGHT),\n          this.cfg.rowTitle\n        );\n\n        view.annotation().text(config);\n      }\n    });\n  }\n\n  /**\n   * 设置 x 坐标轴的文本、title 是否显示\n   * @param x\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  protected getXAxisOption(x: string, axes: any, option: AxisCfg, facet: RectData): object {\n    // 非最后一行\n    if (facet.rowIndex !== facet.rowValuesLength - 1) {\n      return {\n        ...option,\n        title: null,\n        label: null,\n      };\n    } else if (facet.columnIndex !== Math.floor((facet.columnValuesLength - 1) / 2)) {\n      // 不是中间列\n      return {\n        ...option,\n        title: null,\n      };\n    }\n    return option;\n  }\n\n  /**\n   * 设置 y 坐标轴的文本、title 是否显示\n   * @param y\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  protected getYAxisOption(y: string, axes: any, option: AxisCfg, facet: RectData): object {\n    if (facet.columnIndex !== 0) {\n      return {\n        ...option,\n        title: null,\n        label: null,\n      };\n    } else if (facet.rowIndex !== Math.floor((facet.rowValuesLength - 1) / 2)) {\n      return {\n        ...option,\n        title: null,\n      };\n    }\n    return option;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}