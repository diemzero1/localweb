{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { getCoordinateClipCfg } from '../../util/coordinate';\n/**\n * @ignore\n * 整体动画\n * 划入入场动画效果\n * @todo 放两张直角坐标系和极坐标系的图\n * @param element 参与动画的图形元素\n * @param animateCfg 动画配置\n * @param cfg 额外信息\n */\nexport function waveIn(element, animateCfg, cfg) {\n  var _a = getCoordinateClipCfg(cfg.coordinate, 20),\n    type = _a.type,\n    startState = _a.startState,\n    endState = _a.endState; // 根据坐标系类型获取整体的剪切区域配置信息\n  var clipShape = element.setClip({\n    type: type,\n    attrs: startState\n  }); // 为 shape 设置剪切区域\n  // 更新 动画 获取了 toAttrs 需要重新更新上去\n  if (cfg.toAttrs) {\n    element.attr(cfg.toAttrs);\n  }\n  // 对剪切图形做动画\n  clipShape.animate(endState, __assign(__assign({}, animateCfg), {\n    callback: function callback() {\n      if (element && !element.get('destroyed')) {\n        element.set('clipShape', null);\n      }\n      clipShape.remove(true); // 动画结束需要将剪切图形销毁\n    }\n  }));\n}","map":{"version":3,"mappings":";AAEA,SAASA,oBAAoB,QAAQ,uBAAuB;AAG5D;;;;;;;;;AASA,OAAM,SAAUC,MAAM,CAACC,OAAwB,EAAEC,UAAuB,EAAEC,GAAoB;EACtF,SAAiCJ,oBAAoB,CAACI,GAAG,CAACC,UAAU,EAAE,EAAE,CAAC;IAAvEC,IAAI;IAAEC,UAAU;IAAEC,QAAQ,cAA6C,CAAC,CAAC;EACjF,IAAMC,SAAS,GAAGP,OAAO,CAACQ,OAAO,CAAC;IAChCJ,IAAI;IACJK,KAAK,EAAEJ;GACR,CAAW,CAAC,CAAC;EAEd;EACA,IAAIH,GAAG,CAACQ,OAAO,EAAE;IACfV,OAAO,CAACW,IAAI,CAACT,GAAG,CAACQ,OAAO,CAAC;;EAG3B;EACAH,SAAS,CAACK,OAAO,CAACN,QAAQ,wBACrBL,UAAU;IACbY,QAAQ,EAAE;MACR,IAAIb,OAAO,IAAI,CAACA,OAAO,CAACc,GAAG,CAAC,WAAW,CAAC,EAAE;QACxCd,OAAO,CAACe,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC;;MAEhCR,SAAS,CAACS,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;IAC1B;EAAC,GACD;AACJ","names":["getCoordinateClipCfg","waveIn","element","animateCfg","cfg","coordinate","type","startState","endState","clipShape","setClip","attrs","toAttrs","attr","animate","callback","get","set","remove"],"sources":["/home/iam/Documents/network/node_modules/@antv/g2/src/animate/animation/wave-in.ts"],"sourcesContent":["import { IGroup, IShape } from '../../dependents';\nimport { GAnimateCfg } from '../../interface';\nimport { getCoordinateClipCfg } from '../../util/coordinate';\nimport { AnimateExtraCfg } from '../interface';\n\n/**\n * @ignore\n * 整体动画\n * 划入入场动画效果\n * @todo 放两张直角坐标系和极坐标系的图\n * @param element 参与动画的图形元素\n * @param animateCfg 动画配置\n * @param cfg 额外信息\n */\nexport function waveIn(element: IShape | IGroup, animateCfg: GAnimateCfg, cfg: AnimateExtraCfg) {\n  const { type, startState, endState } = getCoordinateClipCfg(cfg.coordinate, 20); // 根据坐标系类型获取整体的剪切区域配置信息\n  const clipShape = element.setClip({\n    type,\n    attrs: startState,\n  }) as IShape; // 为 shape 设置剪切区域\n\n  // 更新 动画 获取了 toAttrs 需要重新更新上去\n  if (cfg.toAttrs) {\n    element.attr(cfg.toAttrs);\n  }\n\n  // 对剪切图形做动画\n  clipShape.animate(endState, {\n    ...animateCfg,\n    callback: () => {\n      if (element && !element.get('destroyed')) {\n        element.set('clipShape', null);\n      }\n      clipShape.remove(true); // 动画结束需要将剪切图形销毁\n    },\n  });\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}