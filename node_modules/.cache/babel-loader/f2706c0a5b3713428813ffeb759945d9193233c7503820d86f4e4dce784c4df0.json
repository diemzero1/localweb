{"ast":null,"code":"import { __read } from \"tslib\";\nimport { each } from '@antv/util';\nimport { DIRECTION } from '../constant';\n/**\n * 用于包围盒计算。\n */\nvar BBox = /** @class */function () {\n  function BBox(x, y, width, height) {\n    if (x === void 0) {\n      x = 0;\n    }\n    if (y === void 0) {\n      y = 0;\n    }\n    if (width === void 0) {\n      width = 0;\n    }\n    if (height === void 0) {\n      height = 0;\n    }\n    this.x = x;\n    this.y = y;\n    this.height = height;\n    this.width = width;\n  }\n  BBox.fromRange = function (minX, minY, maxX, maxY) {\n    return new BBox(minX, minY, maxX - minX, maxY - minY);\n  };\n  BBox.fromObject = function (bbox) {\n    return new BBox(bbox.minX, bbox.minY, bbox.width, bbox.height);\n  };\n  Object.defineProperty(BBox.prototype, \"minX\", {\n    get: function get() {\n      return this.x;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BBox.prototype, \"maxX\", {\n    get: function get() {\n      return this.x + this.width;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BBox.prototype, \"minY\", {\n    get: function get() {\n      return this.y;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BBox.prototype, \"maxY\", {\n    get: function get() {\n      return this.y + this.height;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BBox.prototype, \"tl\", {\n    get: function get() {\n      return {\n        x: this.x,\n        y: this.y\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BBox.prototype, \"tr\", {\n    get: function get() {\n      return {\n        x: this.maxX,\n        y: this.y\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BBox.prototype, \"bl\", {\n    get: function get() {\n      return {\n        x: this.x,\n        y: this.maxY\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BBox.prototype, \"br\", {\n    get: function get() {\n      return {\n        x: this.maxX,\n        y: this.maxY\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BBox.prototype, \"top\", {\n    get: function get() {\n      return {\n        x: this.x + this.width / 2,\n        y: this.minY\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BBox.prototype, \"right\", {\n    get: function get() {\n      return {\n        x: this.maxX,\n        y: this.y + this.height / 2\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BBox.prototype, \"bottom\", {\n    get: function get() {\n      return {\n        x: this.x + this.width / 2,\n        y: this.maxY\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BBox.prototype, \"left\", {\n    get: function get() {\n      return {\n        x: this.minX,\n        y: this.y + this.height / 2\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n  // end 计算属性\n  /**\n   * 包围盒是否相等\n   * @param {BBox} bbox 包围盒\n   * @returns      包围盒是否相等\n   */\n  BBox.prototype.isEqual = function (bbox) {\n    return this.x === bbox.x && this.y === bbox.y && this.width === bbox.width && this.height === bbox.height;\n  };\n  /**\n   * 是否包含了另一个包围盒\n   * @param child\n   */\n  BBox.prototype.contains = function (child) {\n    return child.minX >= this.minX && child.maxX <= this.maxX && child.minY >= this.minY && child.maxY <= this.maxY;\n  };\n  /**\n   * 克隆包围盒\n   * @returns 包围盒\n   */\n  BBox.prototype.clone = function () {\n    return new BBox(this.x, this.y, this.width, this.height);\n  };\n  /**\n   * 取并集\n   * @param subBBox\n   */\n  BBox.prototype.add = function () {\n    var subBBox = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      subBBox[_i] = arguments[_i];\n    }\n    var bbox = this.clone();\n    each(subBBox, function (b) {\n      bbox.x = Math.min(b.x, bbox.x);\n      bbox.y = Math.min(b.y, bbox.y);\n      bbox.width = Math.max(b.maxX, bbox.maxX) - bbox.x;\n      bbox.height = Math.max(b.maxY, bbox.maxY) - bbox.y;\n    });\n    return bbox;\n  };\n  /**\n   * 取交集\n   * @param subBBox\n   */\n  BBox.prototype.merge = function () {\n    var subBBox = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      subBBox[_i] = arguments[_i];\n    }\n    var bbox = this.clone();\n    each(subBBox, function (b) {\n      bbox.x = Math.max(b.x, bbox.x);\n      bbox.y = Math.max(b.y, bbox.y);\n      bbox.width = Math.min(b.maxX, bbox.maxX) - bbox.x;\n      bbox.height = Math.min(b.maxY, bbox.maxY) - bbox.y;\n    });\n    return bbox;\n  };\n  /**\n   * bbox 剪裁\n   * @param subBBox\n   * @param direction\n   */\n  BBox.prototype.cut = function (subBBox, direction) {\n    var width = subBBox.width;\n    var height = subBBox.height;\n    switch (direction) {\n      case DIRECTION.TOP:\n      case DIRECTION.TOP_LEFT:\n      case DIRECTION.TOP_RIGHT:\n        return BBox.fromRange(this.minX, this.minY + height, this.maxX, this.maxY);\n      case DIRECTION.RIGHT:\n      case DIRECTION.RIGHT_TOP:\n      case DIRECTION.RIGHT_BOTTOM:\n        return BBox.fromRange(this.minX, this.minY, this.maxX - width, this.maxY);\n      case DIRECTION.BOTTOM:\n      case DIRECTION.BOTTOM_LEFT:\n      case DIRECTION.BOTTOM_RIGHT:\n        return BBox.fromRange(this.minX, this.minY, this.maxX, this.maxY - height);\n      case DIRECTION.LEFT:\n      case DIRECTION.LEFT_TOP:\n      case DIRECTION.LEFT_BOTTOM:\n        return BBox.fromRange(this.minX + width, this.minY, this.maxX, this.maxY);\n      default:\n        // 其他情况不裁剪，原样返回\n        return this;\n    }\n  };\n  /**\n   * 收缩形成新的\n   * @param gap\n   */\n  BBox.prototype.shrink = function (gap) {\n    var _a = __read(gap, 4),\n      top = _a[0],\n      right = _a[1],\n      bottom = _a[2],\n      left = _a[3];\n    return new BBox(this.x + left, this.y + top, this.width - left - right, this.height - top - bottom);\n  };\n  /**\n   * 扩张形成新的\n   * @param gap\n   */\n  BBox.prototype.expand = function (gap) {\n    var _a = __read(gap, 4),\n      top = _a[0],\n      right = _a[1],\n      bottom = _a[2],\n      left = _a[3];\n    return new BBox(this.x - left, this.y - top, this.width + left + right, this.height + top + bottom);\n  };\n  /**\n   * get the gap of two bbox, if not exceed, then 0\n   * @param bbox\n   * @returns [top, right, bottom, left]\n   */\n  BBox.prototype.exceed = function (bbox) {\n    return [Math.max(-this.minY + bbox.minY, 0), Math.max(this.maxX - bbox.maxX, 0), Math.max(this.maxY - bbox.maxY, 0), Math.max(-this.minX + bbox.minX, 0)];\n  };\n  /**\n   * 是否碰撞\n   * @param bbox\n   */\n  BBox.prototype.collide = function (bbox) {\n    return this.minX < bbox.maxX && this.maxX > bbox.minX && this.minY < bbox.maxY && this.maxY > bbox.minY;\n  };\n  /**\n   * 获取包围盒大小\n   * @returns 包围盒大小\n   */\n  BBox.prototype.size = function () {\n    return this.width * this.height;\n  };\n  /**\n   * 点是否在 bbox 中\n   * @param p\n   */\n  BBox.prototype.isPointIn = function (p) {\n    return p.x >= this.minX && p.x <= this.maxX && p.y >= this.minY && p.y <= this.maxY;\n  };\n  return BBox;\n}();\nexport { BBox };\n/**\n * 从一个 bbox 的 region 获取 bbox\n * @param bbox\n * @param region\n */\nexport var getRegionBBox = function getRegionBBox(bbox, region) {\n  var start = region.start,\n    end = region.end;\n  return new BBox(bbox.x + bbox.width * start.x, bbox.y + bbox.height * start.y, bbox.width * Math.abs(end.x - start.x), bbox.height * Math.abs(end.y - start.y));\n};\n/**\n * 将 bbox 转换成 points\n * @param bbox\n */\nexport function toPoints(bbox) {\n  return [[bbox.minX, bbox.minY], [bbox.maxX, bbox.minY], [bbox.maxX, bbox.maxY], [bbox.minX, bbox.maxY]];\n}","map":{"version":3,"mappings":"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","names":["each","DIRECTION","x","y","width","height","BBox","minX","minY","maxX","maxY","bbox","Object","child","_i","subBBox","clone","b","Math","min","max","direction","TOP","TOP_LEFT","TOP_RIGHT","fromRange","RIGHT","RIGHT_TOP","RIGHT_BOTTOM","BOTTOM","BOTTOM_LEFT","BOTTOM_RIGHT","LEFT","LEFT_TOP","LEFT_BOTTOM","gap","top","right","bottom","left","p","getRegionBBox","region","end","start","abs","toPoints"],"sources":["/home/iam/Documents/network/node_modules/@antv/g2/src/util/bbox.ts"],"sourcesContent":["import { each } from '@antv/util';\nimport { DIRECTION } from '../constant';\nimport { Padding, Point, Region } from '../interface';\nimport { BBox as BBoxObject } from '../dependents';\n\n/**\n * 用于包围盒计算。\n */\nexport class BBox {\n  /** x 轴坐标系 */\n  public x: number;\n  /** y 轴坐标系 */\n  public y: number;\n  /** 包围盒高度 */\n  public height: number;\n  /** 包围盒宽度 */\n  public width: number;\n\n  public static fromRange(minX: number, minY: number, maxX: number, maxY: number) {\n    return new BBox(minX, minY, maxX - minX, maxY - minY);\n  }\n\n  public static fromObject(bbox: BBoxObject) {\n    return new BBox(bbox.minX, bbox.minY, bbox.width, bbox.height);\n  }\n\n  constructor(x: number = 0, y: number = 0, width: number = 0, height: number = 0) {\n    this.x = x;\n    this.y = y;\n    this.height = height;\n    this.width = width;\n  }\n\n  public get minX(): number {\n    return this.x;\n  }\n\n  public get maxX(): number {\n    return this.x + this.width;\n  }\n\n  public get minY(): number {\n    return this.y;\n  }\n\n  public get maxY(): number {\n    return this.y + this.height;\n  }\n\n  public get tl(): Point {\n    return { x: this.x, y: this.y };\n  }\n\n  public get tr(): Point {\n    return { x: this.maxX, y: this.y };\n  }\n\n  public get bl(): Point {\n    return { x: this.x, y: this.maxY };\n  }\n\n  public get br(): Point {\n    return { x: this.maxX, y: this.maxY };\n  }\n\n  public get top(): Point {\n    return {\n      x: this.x + this.width / 2,\n      y: this.minY,\n    };\n  }\n\n  public get right(): Point {\n    return {\n      x: this.maxX,\n      y: this.y + this.height / 2,\n    };\n  }\n  public get bottom(): Point {\n    return {\n      x: this.x + this.width / 2,\n      y: this.maxY,\n    };\n  }\n  public get left(): Point {\n    return {\n      x: this.minX,\n      y: this.y + this.height / 2,\n    };\n  }\n  // end 计算属性\n\n  /**\n   * 包围盒是否相等\n   * @param {BBox} bbox 包围盒\n   * @returns      包围盒是否相等\n   */\n  public isEqual(bbox: BBox): boolean {\n    return this.x === bbox.x && this.y === bbox.y && this.width === bbox.width && this.height === bbox.height;\n  }\n\n  /**\n   * 是否包含了另一个包围盒\n   * @param child\n   */\n  public contains(child: BBox): boolean {\n    return child.minX >= this.minX && child.maxX <= this.maxX && child.minY >= this.minY && child.maxY <= this.maxY;\n  }\n\n  /**\n   * 克隆包围盒\n   * @returns 包围盒\n   */\n  public clone(): BBox {\n    return new BBox(this.x, this.y, this.width, this.height);\n  }\n\n  /**\n   * 取并集\n   * @param subBBox\n   */\n  public add(...subBBox: BBox[]): BBox {\n    const bbox = this.clone();\n    each(subBBox, (b: BBox) => {\n      bbox.x = Math.min(b.x, bbox.x);\n      bbox.y = Math.min(b.y, bbox.y);\n      bbox.width = Math.max(b.maxX, bbox.maxX) - bbox.x;\n      bbox.height = Math.max(b.maxY, bbox.maxY) - bbox.y;\n    });\n\n    return bbox;\n  }\n\n  /**\n   * 取交集\n   * @param subBBox\n   */\n  public merge(...subBBox: BBox[]): BBox {\n    const bbox = this.clone();\n    each(subBBox, (b: BBox) => {\n      bbox.x = Math.max(b.x, bbox.x);\n      bbox.y = Math.max(b.y, bbox.y);\n      bbox.width = Math.min(b.maxX, bbox.maxX) - bbox.x;\n      bbox.height = Math.min(b.maxY, bbox.maxY) - bbox.y;\n    });\n\n    return bbox;\n  }\n\n  /**\n   * bbox 剪裁\n   * @param subBBox\n   * @param direction\n   */\n  public cut(subBBox: BBox, direction: DIRECTION): BBox {\n    const width = subBBox.width;\n    const height = subBBox.height;\n\n    switch (direction) {\n      case DIRECTION.TOP:\n      case DIRECTION.TOP_LEFT:\n      case DIRECTION.TOP_RIGHT:\n        return BBox.fromRange(this.minX, this.minY + height, this.maxX, this.maxY);\n\n      case DIRECTION.RIGHT:\n      case DIRECTION.RIGHT_TOP:\n      case DIRECTION.RIGHT_BOTTOM:\n        return BBox.fromRange(this.minX, this.minY, this.maxX - width, this.maxY);\n\n      case DIRECTION.BOTTOM:\n      case DIRECTION.BOTTOM_LEFT:\n      case DIRECTION.BOTTOM_RIGHT:\n        return BBox.fromRange(this.minX, this.minY, this.maxX, this.maxY - height);\n\n      case DIRECTION.LEFT:\n      case DIRECTION.LEFT_TOP:\n      case DIRECTION.LEFT_BOTTOM:\n        return BBox.fromRange(this.minX + width, this.minY, this.maxX, this.maxY);\n      default:\n        // 其他情况不裁剪，原样返回\n        return this;\n    }\n  }\n\n  /**\n   * 收缩形成新的\n   * @param gap\n   */\n  public shrink(gap: Padding): BBox {\n    const [top, right, bottom, left] = gap;\n\n    return new BBox(this.x + left, this.y + top, this.width - left - right, this.height - top - bottom);\n  }\n\n  /**\n   * 扩张形成新的\n   * @param gap\n   */\n  public expand(gap: Padding): BBox {\n    const [top, right, bottom, left] = gap;\n\n    return new BBox(this.x - left, this.y - top, this.width + left + right, this.height + top + bottom);\n  }\n\n  /**\n   * get the gap of two bbox, if not exceed, then 0\n   * @param bbox\n   * @returns [top, right, bottom, left]\n   */\n  public exceed(bbox: BBox): Padding {\n    return [\n      Math.max(-this.minY + bbox.minY, 0),\n      Math.max(this.maxX - bbox.maxX, 0),\n      Math.max(this.maxY - bbox.maxY, 0),\n      Math.max(-this.minX + bbox.minX, 0),\n    ];\n  }\n\n  /**\n   * 是否碰撞\n   * @param bbox\n   */\n  public collide(bbox: BBox): boolean {\n    return this.minX < bbox.maxX && this.maxX > bbox.minX && this.minY < bbox.maxY && this.maxY > bbox.minY;\n  }\n\n  /**\n   * 获取包围盒大小\n   * @returns 包围盒大小\n   */\n  public size(): number {\n    return this.width * this.height;\n  }\n\n  /**\n   * 点是否在 bbox 中\n   * @param p\n   */\n  public isPointIn(p: Point) {\n    return p.x >= this.minX && p.x <= this.maxX && p.y >= this.minY && p.y <= this.maxY;\n  }\n}\n\n/**\n * 从一个 bbox 的 region 获取 bbox\n * @param bbox\n * @param region\n */\nexport const getRegionBBox = (bbox: BBox, region: Region): BBox => {\n  const { start, end } = region;\n\n  return new BBox(\n    bbox.x + bbox.width * start.x,\n    bbox.y + bbox.height * start.y,\n    bbox.width * Math.abs(end.x - start.x),\n    bbox.height * Math.abs(end.y - start.y)\n  );\n};\n\n/**\n * 将 bbox 转换成 points\n * @param bbox\n */\nexport function toPoints(bbox: Partial<BBox>): any[] {\n  return [\n    [bbox.minX, bbox.minY],\n    [bbox.maxX, bbox.minY],\n    [bbox.maxX, bbox.maxY],\n    [bbox.minX, bbox.maxY],\n  ];\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}