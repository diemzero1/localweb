{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Event } from '../../../chart';\nimport { clearHighlight, setHighlightBy } from './highlight-util';\nimport ElementRangeState from './range-state';\nvar EVENTS;\n(function (EVENTS) {\n  EVENTS[\"BEFORE_HIGHLIGHT\"] = \"element-range-highlight:beforehighlight\";\n  EVENTS[\"AFTER_HIGHLIGHT\"] = \"element-range-highlight:afterhighlight\";\n  EVENTS[\"BEFORE_CLEAR\"] = \"element-range-highlight:beforeclear\";\n  EVENTS[\"AFTER_CLEAR\"] = \"element-range-highlight:afterclear\";\n})(EVENTS || (EVENTS = {}));\nexport { EVENTS as ELEMENT_RANGE_HIGHLIGHT_EVENTS };\n/**\n * @ignore\n * 区域 highlight 的 Action\n */\nvar ElementRangeHighlight = /** @class */function (_super) {\n  __extends(ElementRangeHighlight, _super);\n  function ElementRangeHighlight() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.stateName = 'active';\n    return _this;\n  }\n  // 清理掉所有的 active， unactive 状态\n  ElementRangeHighlight.prototype.clearViewState = function (view) {\n    clearHighlight(view);\n  };\n  /**\n   * 设置 highlight\n   */\n  ElementRangeHighlight.prototype.highlight = function () {\n    var _a = this.context,\n      view = _a.view,\n      event = _a.event;\n    var elements = this.getIntersectElements();\n    var payload = {\n      view: view,\n      event: event,\n      highlightElements: elements\n    };\n    view.emit(EVENTS.BEFORE_HIGHLIGHT, Event.fromData(view, EVENTS.BEFORE_HIGHLIGHT, payload));\n    this.setState();\n    view.emit(EVENTS.AFTER_HIGHLIGHT, Event.fromData(view, EVENTS.AFTER_HIGHLIGHT, payload));\n  };\n  /**\n   * @overrider 添加事件\n   */\n  ElementRangeHighlight.prototype.clear = function () {\n    var view = this.context.view;\n    view.emit(EVENTS.BEFORE_CLEAR, Event.fromData(view, EVENTS.BEFORE_CLEAR, {}));\n    _super.prototype.clear.call(this);\n    view.emit(EVENTS.AFTER_CLEAR, Event.fromData(view, EVENTS.AFTER_CLEAR, {}));\n  };\n  ElementRangeHighlight.prototype.setElementsState = function (elements, enable, allElements) {\n    setHighlightBy(allElements, function (el) {\n      return elements.indexOf(el) >= 0;\n    }, enable);\n  };\n  return ElementRangeHighlight;\n}(ElementRangeState);\nexport default ElementRangeHighlight;","map":{"version":3,"mappings":";AACA,SAASA,KAAK,QAAQ,gBAAgB;AACtC,SAASC,cAAc,EAAEC,cAAc,QAAQ,kBAAkB;AACjE,OAAOC,iBAAiB,MAAM,eAAe;AAE7C,IAAKC,MAKJ;AALD,WAAKA,MAAM;EACTA,sEAA4D;EAC5DA,oEAA0D;EAC1DA,8DAAoD;EACpDA,4DAAkD;AACpD,CAAC,EALIA,MAAM,KAANA,MAAM;AAOX,SAASA,MAAM,IAAIC,8BAA8B;AAEjD;;;;AAIA;EAAoCC;EAApC;IAAA;IACYC,eAAS,GAAW,QAAQ;;EAgCxC;EA9BE;EACUC,8CAAc,GAAxB,UAAyBC,IAAI;IAC3BR,cAAc,CAACQ,IAAI,CAAC;EACtB,CAAC;EAED;;;EAGOD,yCAAS,GAAhB;IACQ,SAAkB,IAAI,CAACE,OAAO;MAA5BD,IAAI;MAAEE,KAAK,WAAiB;IACpC,IAAMC,QAAQ,GAAG,IAAI,CAACC,oBAAoB,EAAE;IAC5C,IAAMC,OAAO,GAAG;MAAEL,IAAI;MAAEE,KAAK;MAAEI,iBAAiB,EAAEH;IAAQ,CAAE;IAC5DH,IAAI,CAACO,IAAI,CAACZ,MAAM,CAACa,gBAAgB,EAAEjB,KAAK,CAACkB,QAAQ,CAACT,IAAI,EAAEL,MAAM,CAACa,gBAAgB,EAAEH,OAAO,CAAC,CAAC;IAC1F,IAAI,CAACK,QAAQ,EAAE;IACfV,IAAI,CAACO,IAAI,CAACZ,MAAM,CAACgB,eAAe,EAAEpB,KAAK,CAACkB,QAAQ,CAACT,IAAI,EAAEL,MAAM,CAACgB,eAAe,EAAEN,OAAO,CAAC,CAAC;EAC1F,CAAC;EAED;;;EAGON,qCAAK,GAAZ;IACE,IAAMC,IAAI,GAAG,IAAI,CAACC,OAAO,CAACD,IAAI;IAC9BA,IAAI,CAACO,IAAI,CAACZ,MAAM,CAACiB,YAAY,EAAErB,KAAK,CAACkB,QAAQ,CAACT,IAAI,EAAEL,MAAM,CAACiB,YAAY,EAAE,EAAE,CAAC,CAAC;IAC7EC,iBAAMC,KAAK,WAAE;IACbd,IAAI,CAACO,IAAI,CAACZ,MAAM,CAACoB,WAAW,EAAExB,KAAK,CAACkB,QAAQ,CAACT,IAAI,EAAEL,MAAM,CAACoB,WAAW,EAAE,EAAE,CAAC,CAAC;EAC7E,CAAC;EAEShB,gDAAgB,GAA1B,UAA2BI,QAAmB,EAAEa,MAAe,EAAEC,WAAsB;IACrFxB,cAAc,CAACwB,WAAW,EAAE,UAACC,EAAE;MAAK,eAAQ,CAACC,OAAO,CAACD,EAAE,CAAC,IAAI,CAAC;IAAzB,CAAyB,EAAEF,MAAM,CAAC;EACxE,CAAC;EACH,4BAAC;AAAD,CAAC,CAjCmCtB,iBAAiB;AAmCrD,eAAeK,qBAAqB","names":["Event","clearHighlight","setHighlightBy","ElementRangeState","EVENTS","ELEMENT_RANGE_HIGHLIGHT_EVENTS","__extends","_this","ElementRangeHighlight","view","context","event","elements","getIntersectElements","payload","highlightElements","emit","BEFORE_HIGHLIGHT","fromData","setState","AFTER_HIGHLIGHT","BEFORE_CLEAR","_super","clear","AFTER_CLEAR","enable","allElements","el","indexOf"],"sources":["/home/iam/Documents/LocalWeb-master/node_modules/@antv/g2/src/interaction/action/element/range-highlight.ts"],"sourcesContent":["import Element from '../../../geometry/element';\nimport { Event } from '../../../chart';\nimport { clearHighlight, setHighlightBy } from './highlight-util';\nimport ElementRangeState from './range-state';\n\nenum EVENTS {\n  BEFORE_HIGHLIGHT = 'element-range-highlight:beforehighlight',\n  AFTER_HIGHLIGHT = 'element-range-highlight:afterhighlight',\n  BEFORE_CLEAR = 'element-range-highlight:beforeclear',\n  AFTER_CLEAR = 'element-range-highlight:afterclear',\n}\n\nexport { EVENTS as ELEMENT_RANGE_HIGHLIGHT_EVENTS };\n\n/**\n * @ignore\n * 区域 highlight 的 Action\n */\nclass ElementRangeHighlight extends ElementRangeState {\n  protected stateName: string = 'active';\n\n  // 清理掉所有的 active， unactive 状态\n  protected clearViewState(view) {\n    clearHighlight(view);\n  }\n\n  /**\n   * 设置 highlight\n   */\n  public highlight() {\n    const { view, event } = this.context;\n    const elements = this.getIntersectElements();\n    const payload = { view, event, highlightElements: elements };\n    view.emit(EVENTS.BEFORE_HIGHLIGHT, Event.fromData(view, EVENTS.BEFORE_HIGHLIGHT, payload));\n    this.setState();\n    view.emit(EVENTS.AFTER_HIGHLIGHT, Event.fromData(view, EVENTS.AFTER_HIGHLIGHT, payload));\n  }\n\n  /**\n   * @overrider 添加事件\n   */\n  public clear() {\n    const view = this.context.view;\n    view.emit(EVENTS.BEFORE_CLEAR, Event.fromData(view, EVENTS.BEFORE_CLEAR, {}));\n    super.clear();\n    view.emit(EVENTS.AFTER_CLEAR, Event.fromData(view, EVENTS.AFTER_CLEAR, {}));\n  }\n\n  protected setElementsState(elements: Element[], enable: boolean, allElements: Element[]) {\n    setHighlightBy(allElements, (el) => elements.indexOf(el) >= 0, enable);\n  }\n}\n\nexport default ElementRangeHighlight;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}