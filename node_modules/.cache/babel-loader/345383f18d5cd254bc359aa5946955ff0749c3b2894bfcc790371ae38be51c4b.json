{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { each } from '@antv/util';\nimport { getSiblingPoint, getSilbings } from '../../util';\nimport TooltipAction from './geometry';\n/**\n * 存在多个 view 时，控制其他 view 上的 tooltip 显示\n * @ignore\n */\nvar SiblingTooltip = /** @class */function (_super) {\n  __extends(SiblingTooltip, _super);\n  function SiblingTooltip() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * 所有同一层级的 tooltip 显示\n   * @param view\n   * @param point\n   */\n  SiblingTooltip.prototype.showTooltip = function (view, point) {\n    var siblings = getSilbings(view);\n    each(siblings, function (sibling) {\n      var siblingPoint = getSiblingPoint(view, sibling, point);\n      sibling.showTooltip(siblingPoint);\n    });\n  };\n  /**\n   * 隐藏同一层级的 tooltip\n   * @param view\n   */\n  SiblingTooltip.prototype.hideTooltip = function (view) {\n    var siblings = getSilbings(view);\n    each(siblings, function (sibling) {\n      sibling.hideTooltip();\n    });\n  };\n  return SiblingTooltip;\n}(TooltipAction);\nexport default SiblingTooltip;","map":{"version":3,"mappings":";AAAA,SAASA,IAAI,QAAQ,YAAY;AAGjC,SAASC,eAAe,EAAEC,WAAW,QAAQ,YAAY;AACzD,OAAOC,aAAa,MAAM,YAAY;AAEtC;;;;AAIA;EAA6BC;EAA7B;;EAuBA;EAtBE;;;;;EAKUC,oCAAW,GAArB,UAAsBC,IAAU,EAAEC,KAAY;IAC5C,IAAMC,QAAQ,GAAGN,WAAW,CAACI,IAAI,CAAC;IAClCN,IAAI,CAACQ,QAAQ,EAAE,UAACC,OAAO;MACrB,IAAMC,YAAY,GAAGT,eAAe,CAACK,IAAI,EAAEG,OAAO,EAAEF,KAAK,CAAC;MAC1DE,OAAO,CAACE,WAAW,CAACD,YAAY,CAAC;IACnC,CAAC,CAAC;EACJ,CAAC;EACD;;;;EAIUL,oCAAW,GAArB,UAAsBC,IAAI;IACxB,IAAME,QAAQ,GAAGN,WAAW,CAACI,IAAI,CAAC;IAClCN,IAAI,CAACQ,QAAQ,EAAE,UAACC,OAAO;MACrBA,OAAO,CAACG,WAAW,EAAE;IACvB,CAAC,CAAC;EACJ,CAAC;EACH,qBAAC;AAAD,CAAC,CAvB4BT,aAAa;AAyB1C,eAAeE,cAAc","names":["each","getSiblingPoint","getSilbings","TooltipAction","__extends","SiblingTooltip","view","point","siblings","sibling","siblingPoint","showTooltip","hideTooltip"],"sources":["/home/iam/Documents/LocalWeb-master/node_modules/@antv/g2/src/interaction/action/component/tooltip/sibling.ts"],"sourcesContent":["import { each } from '@antv/util';\nimport { View } from '../../../../chart';\nimport { Point } from '../../../../interface';\nimport { getSiblingPoint, getSilbings } from '../../util';\nimport TooltipAction from './geometry';\n\n/**\n * 存在多个 view 时，控制其他 view 上的 tooltip 显示\n * @ignore\n */\nclass SiblingTooltip extends TooltipAction {\n  /**\n   * 所有同一层级的 tooltip 显示\n   * @param view\n   * @param point\n   */\n  protected showTooltip(view: View, point: Point) {\n    const siblings = getSilbings(view);\n    each(siblings, (sibling) => {\n      const siblingPoint = getSiblingPoint(view, sibling, point);\n      sibling.showTooltip(siblingPoint);\n    });\n  }\n  /**\n   * 隐藏同一层级的 tooltip\n   * @param view\n   */\n  protected hideTooltip(view) {\n    const siblings = getSilbings(view);\n    each(siblings, (sibling) => {\n      sibling.hideTooltip();\n    });\n  }\n}\n\nexport default SiblingTooltip;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}