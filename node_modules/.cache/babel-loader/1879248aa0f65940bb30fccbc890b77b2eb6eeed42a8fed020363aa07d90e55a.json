{"ast":null,"code":"var indent = ' '.repeat(2);\nvar indentData = ' '.repeat(4);\nexport function inspectMatrix() {\n  return inspectMatrixWithOptions(this);\n}\nexport function inspectMatrixWithOptions(matrix) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$maxRows = options.maxRows,\n    maxRows = _options$maxRows === void 0 ? 15 : _options$maxRows,\n    _options$maxColumns = options.maxColumns,\n    maxColumns = _options$maxColumns === void 0 ? 10 : _options$maxColumns,\n    _options$maxNumSize = options.maxNumSize,\n    maxNumSize = _options$maxNumSize === void 0 ? 8 : _options$maxNumSize,\n    _options$padMinus = options.padMinus,\n    padMinus = _options$padMinus === void 0 ? 'auto' : _options$padMinus;\n  return \"\".concat(matrix.constructor.name, \" {\\n\").concat(indent, \"[\\n\").concat(indentData).concat(inspectData(matrix, maxRows, maxColumns, maxNumSize, padMinus), \"\\n\").concat(indent, \"]\\n\").concat(indent, \"rows: \").concat(matrix.rows, \"\\n\").concat(indent, \"columns: \").concat(matrix.columns, \"\\n}\");\n}\nfunction inspectData(matrix, maxRows, maxColumns, maxNumSize, padMinus) {\n  var rows = matrix.rows,\n    columns = matrix.columns;\n  var maxI = Math.min(rows, maxRows);\n  var maxJ = Math.min(columns, maxColumns);\n  var result = [];\n  if (padMinus === 'auto') {\n    padMinus = false;\n    loop: for (var i = 0; i < maxI; i++) {\n      for (var j = 0; j < maxJ; j++) {\n        if (matrix.get(i, j) < 0) {\n          padMinus = true;\n          break loop;\n        }\n      }\n    }\n  }\n  for (var _i = 0; _i < maxI; _i++) {\n    var line = [];\n    for (var _j = 0; _j < maxJ; _j++) {\n      line.push(formatNumber(matrix.get(_i, _j), maxNumSize, padMinus));\n    }\n    result.push(\"\".concat(line.join(' ')));\n  }\n  if (maxJ !== columns) {\n    result[result.length - 1] += \" ... \".concat(columns - maxColumns, \" more columns\");\n  }\n  if (maxI !== rows) {\n    result.push(\"... \".concat(rows - maxRows, \" more rows\"));\n  }\n  return result.join(\"\\n\".concat(indentData));\n}\nfunction formatNumber(num, maxNumSize, padMinus) {\n  return (num >= 0 && padMinus ? \" \".concat(formatNumber2(num, maxNumSize - 1)) : formatNumber2(num, maxNumSize)).padEnd(maxNumSize);\n}\nfunction formatNumber2(num, len) {\n  // small.length numbers should be as is\n  var str = num.toString();\n  if (str.length <= len) return str;\n\n  // (7)'0.00123' is better then (7)'1.23e-2'\n  // (8)'0.000123' is worse then (7)'1.23e-3',\n  var fix = num.toFixed(len);\n  if (fix.length > len) {\n    fix = num.toFixed(Math.max(0, len - (fix.length - len)));\n  }\n  if (fix.length <= len && !fix.startsWith('0.000') && !fix.startsWith('-0.000')) {\n    return fix;\n  }\n\n  // well, if it's still too long the user should've used longer numbers\n  var exp = num.toExponential(len);\n  if (exp.length > len) {\n    exp = num.toExponential(Math.max(0, len - (exp.length - len)));\n  }\n  return exp.slice(0);\n}","map":{"version":3,"names":["indent","repeat","indentData","inspectMatrix","inspectMatrixWithOptions","matrix","options","maxRows","maxColumns","maxNumSize","padMinus","constructor","name","inspectData","rows","columns","maxI","Math","min","maxJ","result","loop","i","j","get","line","push","formatNumber","join","length","num","formatNumber2","padEnd","len","str","toString","fix","toFixed","max","startsWith","exp","toExponential","slice"],"sources":["/home/iam/Documents/LocalWeb-master/node_modules/ml-matrix/src/inspect.js"],"sourcesContent":["const indent = ' '.repeat(2);\nconst indentData = ' '.repeat(4);\n\nexport function inspectMatrix() {\n  return inspectMatrixWithOptions(this);\n}\n\nexport function inspectMatrixWithOptions(matrix, options = {}) {\n  const {\n    maxRows = 15,\n    maxColumns = 10,\n    maxNumSize = 8,\n    padMinus = 'auto',\n  } = options;\n  return `${matrix.constructor.name} {\n${indent}[\n${indentData}${inspectData(matrix, maxRows, maxColumns, maxNumSize, padMinus)}\n${indent}]\n${indent}rows: ${matrix.rows}\n${indent}columns: ${matrix.columns}\n}`;\n}\n\nfunction inspectData(matrix, maxRows, maxColumns, maxNumSize, padMinus) {\n  const { rows, columns } = matrix;\n  const maxI = Math.min(rows, maxRows);\n  const maxJ = Math.min(columns, maxColumns);\n  const result = [];\n\n  if (padMinus === 'auto') {\n    padMinus = false;\n    loop: for (let i = 0; i < maxI; i++) {\n      for (let j = 0; j < maxJ; j++) {\n        if (matrix.get(i, j) < 0) {\n          padMinus = true;\n          break loop;\n        }\n      }\n    }\n  }\n\n  for (let i = 0; i < maxI; i++) {\n    let line = [];\n    for (let j = 0; j < maxJ; j++) {\n      line.push(formatNumber(matrix.get(i, j), maxNumSize, padMinus));\n    }\n    result.push(`${line.join(' ')}`);\n  }\n  if (maxJ !== columns) {\n    result[result.length - 1] += ` ... ${columns - maxColumns} more columns`;\n  }\n  if (maxI !== rows) {\n    result.push(`... ${rows - maxRows} more rows`);\n  }\n  return result.join(`\\n${indentData}`);\n}\n\nfunction formatNumber(num, maxNumSize, padMinus) {\n  return (\n    num >= 0 && padMinus\n      ? ` ${formatNumber2(num, maxNumSize - 1)}`\n      : formatNumber2(num, maxNumSize)\n  ).padEnd(maxNumSize);\n}\n\nfunction formatNumber2(num, len) {\n  // small.length numbers should be as is\n  let str = num.toString();\n  if (str.length <= len) return str;\n\n  // (7)'0.00123' is better then (7)'1.23e-2'\n  // (8)'0.000123' is worse then (7)'1.23e-3',\n  let fix = num.toFixed(len);\n  if (fix.length > len) {\n    fix = num.toFixed(Math.max(0, len - (fix.length - len)));\n  }\n  if (\n    fix.length <= len &&\n    !fix.startsWith('0.000') &&\n    !fix.startsWith('-0.000')\n  ) {\n    return fix;\n  }\n\n  // well, if it's still too long the user should've used longer numbers\n  let exp = num.toExponential(len);\n  if (exp.length > len) {\n    exp = num.toExponential(Math.max(0, len - (exp.length - len)));\n  }\n  return exp.slice(0);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}