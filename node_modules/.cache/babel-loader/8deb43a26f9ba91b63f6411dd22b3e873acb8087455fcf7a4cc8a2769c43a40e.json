{"ast":null,"code":"import { __assign, __awaiter, __generator, __rest, __values } from \"tslib\";\nimport { deepMix, each, get, isArray, isNull } from '@antv/util';\nimport { doAnimate } from '../animate';\nimport { getGeometryLabelLayout } from '../geometry/label';\nimport { getLabelBackgroundInfo } from '../geometry/label/util';\nimport { polarToCartesian } from '../util/graphics';\nimport { rotate, translate } from '../util/transform';\nimport { FIELD_ORIGIN } from '../constant';\nimport { updateLabel } from './update-label';\n/**\n * Geometry labels 渲染组件\n */\nvar Labels = /** @class */function () {\n  function Labels(cfg) {\n    /** 存储当前 shape 的映射表，键值为 shape id */\n    this.shapesMap = {};\n    var layout = cfg.layout,\n      container = cfg.container;\n    this.layout = layout;\n    this.container = container;\n  }\n  /**\n   * 渲染文本\n   */\n  Labels.prototype.render = function (items, shapes, isUpdate) {\n    if (isUpdate === void 0) {\n      isUpdate = false;\n    }\n    return __awaiter(this, void 0, void 0, function () {\n      var shapesMap, offscreenGroup, items_1, items_1_1, item, lastShapesMap;\n      var e_1, _a;\n      var _this = this;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            shapesMap = {};\n            offscreenGroup = this.createOffscreenGroup();\n            if (!items.length) return [3 /*break*/, 2];\n            try {\n              // 如果 items 空的话就不进行绘制调整操作\n              // step 1: 在虚拟 group 中创建 shapes\n              for (items_1 = __values(items), items_1_1 = items_1.next(); !items_1_1.done; items_1_1 = items_1.next()) {\n                item = items_1_1.value;\n                if (item) {\n                  shapesMap[item.id] = this.renderLabel(item, offscreenGroup);\n                }\n              }\n            } catch (e_1_1) {\n              e_1 = {\n                error: e_1_1\n              };\n            } finally {\n              try {\n                if (items_1_1 && !items_1_1.done && (_a = items_1.return)) _a.call(items_1);\n              } finally {\n                if (e_1) throw e_1.error;\n              }\n            }\n            // [todo] Move layout into Worker.\n            // step 2: 根据布局，调整 labels\n            return [4 /*yield*/, this.doLayout(items, shapes, shapesMap)];\n          case 1:\n            // [todo] Move layout into Worker.\n            // step 2: 根据布局，调整 labels\n            _b.sent();\n            // step 3.1: 绘制 labelLine\n            this.renderLabelLine(items, shapesMap);\n            // step 3.2: 绘制 labelBackground\n            this.renderLabelBackground(items, shapesMap);\n            // step 4: 根据用户设置的偏移量调整 label\n            this.adjustLabel(items, shapesMap);\n            _b.label = 2;\n          case 2:\n            lastShapesMap = this.shapesMap;\n            each(shapesMap, function (shape, id) {\n              if (shape.destroyed) {\n                // label 在布局调整环节被删除了（doLayout）\n                delete shapesMap[id];\n              } else {\n                if (lastShapesMap[id]) {\n                  // 图形发生更新\n                  var data = shape.get('data');\n                  var origin_1 = shape.get('origin');\n                  var coordinate = shape.get('coordinate');\n                  var currentAnimateCfg = shape.get('animateCfg');\n                  var currentShape = lastShapesMap[id]; // 已经在渲染树上的 shape\n                  updateLabel(currentShape, shapesMap[id], {\n                    data: data,\n                    origin: origin_1,\n                    animateCfg: currentAnimateCfg,\n                    coordinate: coordinate\n                  });\n                  shapesMap[id] = currentShape; // 保存引用\n                } else {\n                  // 新生成的 shape\n                  // If container has been destroyed, no need to render labels.\n                  if (_this.container.destroyed) return;\n                  _this.container.add(shape);\n                  var animateCfg = get(shape.get('animateCfg'), isUpdate ? 'enter' : 'appear');\n                  if (animateCfg) {\n                    doAnimate(shape, animateCfg, {\n                      toAttrs: __assign({}, shape.attr()),\n                      coordinate: shape.get('coordinate')\n                    });\n                  }\n                }\n                delete lastShapesMap[id];\n              }\n            });\n            // 移除\n            each(lastShapesMap, function (deleteShape) {\n              var animateCfg = get(deleteShape.get('animateCfg'), 'leave');\n              if (animateCfg) {\n                doAnimate(deleteShape, animateCfg, {\n                  toAttrs: null,\n                  coordinate: deleteShape.get('coordinate')\n                });\n              } else {\n                deleteShape.remove(true); // 移除\n              }\n            });\n\n            this.shapesMap = shapesMap;\n            offscreenGroup.destroy();\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /** 清除当前 labels */\n  Labels.prototype.clear = function () {\n    this.container.clear();\n    this.shapesMap = {};\n  };\n  /** 销毁 */\n  Labels.prototype.destroy = function () {\n    this.container.destroy();\n    this.shapesMap = null;\n  };\n  Labels.prototype.renderLabel = function (cfg, container) {\n    var id = cfg.id,\n      elementId = cfg.elementId,\n      data = cfg.data,\n      mappingData = cfg.mappingData,\n      coordinate = cfg.coordinate,\n      animate = cfg.animate,\n      content = cfg.content,\n      capture = cfg.capture;\n    var shapeAppendCfg = {\n      id: id,\n      elementId: elementId,\n      capture: capture,\n      data: data,\n      origin: __assign(__assign({}, mappingData), {\n        data: mappingData[FIELD_ORIGIN]\n      }),\n      coordinate: coordinate\n    };\n    var labelGroup = container.addGroup(__assign({\n      name: 'label',\n      // 如果 this.animate === false 或者 cfg.animate === false/null 则不进行动画，否则进行动画配置的合并\n      animateCfg: this.animate === false || animate === null || animate === false ? false : deepMix({}, this.animate, animate)\n    }, shapeAppendCfg));\n    var labelShape;\n    if (content.isGroup && content.isGroup() || content.isShape && content.isShape()) {\n      // 如果 content 是 Group 或者 Shape，根据 textAlign 调整位置后，直接将其加入 labelGroup\n      var _a = content.getCanvasBBox(),\n        width = _a.width,\n        height = _a.height;\n      var textAlign = get(cfg, 'textAlign', 'left');\n      var x = cfg.x;\n      var y = cfg.y - height / 2;\n      if (textAlign === 'center') {\n        x = x - width / 2;\n      } else if (textAlign === 'right' || textAlign === 'end') {\n        x = x - width;\n      }\n      translate(content, x, y); // 将 label 平移至 x, y 指定的位置\n      labelShape = content;\n      labelGroup.add(content);\n    } else {\n      var fill = get(cfg, ['style', 'fill']);\n      labelShape = labelGroup.addShape('text', __assign({\n        attrs: __assign(__assign({\n          x: cfg.x,\n          y: cfg.y,\n          textAlign: cfg.textAlign,\n          textBaseline: get(cfg, 'textBaseline', 'middle'),\n          text: cfg.content\n        }, cfg.style), {\n          fill: isNull(fill) ? cfg.color : fill\n        })\n      }, shapeAppendCfg));\n    }\n    if (cfg.rotate) {\n      rotate(labelShape, cfg.rotate);\n    }\n    return labelGroup;\n  };\n  // 根据type对label布局\n  Labels.prototype.doLayout = function (items, shapes, shapesMap) {\n    return __awaiter(this, void 0, void 0, function () {\n      var layouts;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this.layout) return [3 /*break*/, 2];\n            layouts = isArray(this.layout) ? this.layout : [this.layout];\n            return [4 /*yield*/, Promise.all(layouts.map(function (layout) {\n              var layoutFn = getGeometryLabelLayout(get(layout, 'type', ''));\n              if (!layoutFn) return;\n              var labelShapes = [];\n              var geometryShapes = [];\n              each(shapesMap, function (labelShape, id) {\n                labelShapes.push(labelShape);\n                geometryShapes.push(shapes[labelShape.get('elementId')]);\n              });\n              // [todo] Refactor more layout into Worker.\n              return layoutFn(items, labelShapes, geometryShapes, _this.region, layout.cfg);\n            }))];\n          case 1:\n            _a.sent();\n            _a.label = 2;\n          case 2:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  Labels.prototype.renderLabelLine = function (labelItems, shapesMap) {\n    each(labelItems, function (labelItem) {\n      var coordinate = get(labelItem, 'coordinate');\n      if (!labelItem || !coordinate) {\n        return;\n      }\n      var center = coordinate.getCenter();\n      var radius = coordinate.getRadius();\n      if (!labelItem.labelLine) {\n        // labelLine: null | false，关闭 label 对应的 labelLine\n        return;\n      }\n      var labelLineCfg = get(labelItem, 'labelLine', {});\n      var id = labelItem.id;\n      var path = labelLineCfg.path;\n      if (!path) {\n        var start = polarToCartesian(center.x, center.y, radius, labelItem.angle);\n        path = [['M', start.x, start.y], ['L', labelItem.x, labelItem.y]];\n      }\n      var labelGroup = shapesMap[id];\n      if (!labelGroup.destroyed) {\n        labelGroup.addShape('path', {\n          capture: false,\n          attrs: __assign({\n            path: path,\n            stroke: labelItem.color ? labelItem.color : get(labelItem, ['style', 'fill'], '#000'),\n            fill: null\n          }, labelLineCfg.style),\n          id: id,\n          origin: labelItem.mappingData,\n          data: labelItem.data,\n          coordinate: labelItem.coordinate\n        });\n      }\n    });\n  };\n  /**\n   * 绘制标签背景\n   * @param labelItems\n   */\n  Labels.prototype.renderLabelBackground = function (labelItems, shapesMap) {\n    each(labelItems, function (labelItem) {\n      var coordinate = get(labelItem, 'coordinate');\n      var background = get(labelItem, 'background');\n      if (!background || !coordinate) {\n        return;\n      }\n      var id = labelItem.id;\n      var labelGroup = shapesMap[id];\n      if (!labelGroup.destroyed) {\n        var labelContentShape = labelGroup.getChildren()[0];\n        if (labelContentShape) {\n          var _a = getLabelBackgroundInfo(labelGroup, labelItem, background.padding),\n            rotation = _a.rotation,\n            box = __rest(_a, [\"rotation\"]);\n          var backgroundShape = labelGroup.addShape('rect', {\n            attrs: __assign(__assign({}, box), background.style || {}),\n            id: id,\n            origin: labelItem.mappingData,\n            data: labelItem.data,\n            coordinate: labelItem.coordinate\n          });\n          backgroundShape.setZIndex(-1);\n          if (rotation) {\n            var matrix = labelContentShape.getMatrix();\n            backgroundShape.setMatrix(matrix);\n          }\n        }\n      }\n    });\n  };\n  Labels.prototype.createOffscreenGroup = function () {\n    var container = this.container;\n    var GroupClass = container.getGroupBase(); // 获取分组的构造函数\n    var newGroup = new GroupClass({});\n    return newGroup;\n  };\n  Labels.prototype.adjustLabel = function (items, shapesMap) {\n    each(items, function (item) {\n      if (item) {\n        var id = item.id;\n        var labelGroup = shapesMap[id];\n        if (!labelGroup.destroyed) {\n          // fix: 如果说开发者的 label content 是一个 group，此处的偏移无法对 整个 content group 生效；场景类似 饼图 spider label 是一个含 2 个 textShape 的 gorup\n          var labelShapes = labelGroup.findAll(function (ele) {\n            return ele.get('type') !== 'path';\n          });\n          each(labelShapes, function (labelShape) {\n            if (labelShape) {\n              if (item.offsetX) {\n                labelShape.attr('x', labelShape.attr('x') + item.offsetX);\n              }\n              if (item.offsetY) {\n                labelShape.attr('y', labelShape.attr('y') + item.offsetY);\n              }\n            }\n          });\n        }\n      }\n    });\n  };\n  return Labels;\n}();\nexport default Labels;","map":{"version":3,"mappings":"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","names":["deepMix","each","get","isArray","isNull","doAnimate","getGeometryLabelLayout","getLabelBackgroundInfo","polarToCartesian","rotate","translate","FIELD_ORIGIN","updateLabel","cfg","container","layout","Labels","items","shapes","isUpdate","shapesMap","offscreenGroup","createOffscreenGroup","length","items_1","item","id","renderLabel","doLayout","_b","renderLabelLine","renderLabelBackground","adjustLabel","lastShapesMap","shape","destroyed","data","origin_1","coordinate","currentAnimateCfg","currentShape","origin","animateCfg","_this","add","toAttrs","attr","deleteShape","remove","destroy","clear","elementId","mappingData","animate","content","capture","shapeAppendCfg","labelGroup","addGroup","name","labelShape","isGroup","isShape","getCanvasBBox","width","height","textAlign","x","y","fill","addShape","attrs","textBaseline","text","style","color","layouts","Promise","all","map","layoutFn","labelShapes","geometryShapes","push","region","_a","labelItems","labelItem","center","getCenter","radius","getRadius","labelLine","labelLineCfg","path","start","angle","stroke","background","labelContentShape","getChildren","padding","rotation","box","backgroundShape","setZIndex","matrix","getMatrix","setMatrix","GroupClass","getGroupBase","newGroup","findAll","ele","offsetX","offsetY"],"sources":["/home/iam/Documents/network/node_modules/@antv/g2/src/component/labels.ts"],"sourcesContent":["import { deepMix, each, get, isArray, isNull } from '@antv/util';\nimport { BBox, Coordinate, IGroup, IShape } from '../dependents';\nimport { LabelItem } from '../geometry/label/interface';\nimport { AnimateOption, GeometryLabelLayoutCfg } from '../interface';\nimport { doAnimate } from '../animate';\nimport { getGeometryLabelLayout } from '../geometry/label';\nimport { getLabelBackgroundInfo } from '../geometry/label/util';\nimport { polarToCartesian } from '../util/graphics';\nimport { rotate, translate } from '../util/transform';\nimport { FIELD_ORIGIN } from '../constant';\nimport { updateLabel } from './update-label';\n\n/**\n * Labels 实例创建时，传入构造函数的参数定义\n */\nexport interface LabelsGroupCfg {\n  /** label 容器 */\n  container: IGroup;\n  /** label 布局配置 */\n  layout?: GeometryLabelLayoutCfg | GeometryLabelLayoutCfg[];\n}\n\n/**\n * Geometry labels 渲染组件\n */\nexport default class Labels {\n  /** 用于指定 labels 布局的类型 */\n  public layout: GeometryLabelLayoutCfg | GeometryLabelLayoutCfg[];\n  /** 图形容器 */\n  public container: IGroup;\n  /** 动画配置 */\n  public animate: AnimateOption | false;\n  /** label 绘制的区域 */\n  public region: BBox;\n\n  /** 存储当前 shape 的映射表，键值为 shape id */\n  public shapesMap: Record<string, IGroup> = {};\n\n  constructor(cfg: LabelsGroupCfg) {\n    const { layout, container } = cfg;\n\n    this.layout = layout;\n    this.container = container;\n  }\n  /**\n   * 渲染文本\n   */\n  public async render(items: LabelItem[], shapes: Record<string, IShape | IGroup>, isUpdate: boolean = false) {\n    const shapesMap = {};\n    const offscreenGroup = this.createOffscreenGroup(); // 创建虚拟分组\n    if (items.length) {\n      // 如果 items 空的话就不进行绘制调整操作\n      // step 1: 在虚拟 group 中创建 shapes\n      for (const item of items) {\n        if (item) {\n          shapesMap[item.id] = this.renderLabel(item, offscreenGroup);\n        }\n      }\n      // [todo] Move layout into Worker.\n      // step 2: 根据布局，调整 labels\n      await this.doLayout(items, shapes, shapesMap);\n\n      // step 3.1: 绘制 labelLine\n      this.renderLabelLine(items, shapesMap);\n      // step 3.2: 绘制 labelBackground\n      this.renderLabelBackground(items, shapesMap);\n      // step 4: 根据用户设置的偏移量调整 label\n      this.adjustLabel(items, shapesMap);\n    }\n\n    // 进行添加、更新、销毁操作\n    const lastShapesMap = this.shapesMap;\n    each(shapesMap, (shape, id) => {\n      if (shape.destroyed) {\n        // label 在布局调整环节被删除了（doLayout）\n        delete shapesMap[id];\n      } else {\n        if (lastShapesMap[id]) {\n          // 图形发生更新\n          const data = shape.get('data');\n          const origin = shape.get('origin');\n          const coordinate = shape.get('coordinate');\n          const currentAnimateCfg = shape.get('animateCfg');\n\n          const currentShape = lastShapesMap[id]; // 已经在渲染树上的 shape\n          updateLabel(currentShape, shapesMap[id], {\n            data,\n            origin,\n            animateCfg: currentAnimateCfg,\n            coordinate,\n          });\n\n          shapesMap[id] = currentShape; // 保存引用\n        } else {\n          // 新生成的 shape\n          // If container has been destroyed, no need to render labels.\n          if (this.container.destroyed) return;\n          this.container.add(shape);\n          const animateCfg = get(shape.get('animateCfg'), isUpdate ? 'enter' : 'appear');\n          if (animateCfg) {\n            doAnimate(shape, animateCfg, {\n              toAttrs: {\n                ...shape.attr(),\n              },\n              coordinate: shape.get('coordinate'),\n            });\n          }\n        }\n        delete lastShapesMap[id];\n      }\n    });\n\n    // 移除\n    each(lastShapesMap, (deleteShape) => {\n      const animateCfg = get(deleteShape.get('animateCfg'), 'leave');\n      if (animateCfg) {\n        doAnimate(deleteShape, animateCfg, {\n          toAttrs: null,\n          coordinate: deleteShape.get('coordinate'),\n        });\n      } else {\n        deleteShape.remove(true); // 移除\n      }\n    });\n\n    this.shapesMap = shapesMap;\n    offscreenGroup.destroy();\n  }\n\n  /** 清除当前 labels */\n  public clear() {\n    this.container.clear();\n    this.shapesMap = {};\n  }\n\n  /** 销毁 */\n  public destroy() {\n    this.container.destroy();\n    this.shapesMap = null;\n  }\n\n  private renderLabel(cfg: LabelItem, container: IGroup): IGroup {\n    const { id, elementId, data, mappingData, coordinate, animate, content, capture } = cfg;\n    const shapeAppendCfg = {\n      id,\n      elementId,\n      capture,\n      data,\n      origin: {\n        ...mappingData,\n        data: mappingData[FIELD_ORIGIN],\n      },\n      coordinate,\n    };\n    const labelGroup = container.addGroup({\n      name: 'label',\n      // 如果 this.animate === false 或者 cfg.animate === false/null 则不进行动画，否则进行动画配置的合并\n      animateCfg:\n        this.animate === false || animate === null || animate === false ? false : deepMix({}, this.animate, animate),\n      ...shapeAppendCfg,\n    });\n    let labelShape;\n    if ((content.isGroup && content.isGroup()) || (content.isShape && content.isShape())) {\n      // 如果 content 是 Group 或者 Shape，根据 textAlign 调整位置后，直接将其加入 labelGroup\n      const { width, height } = content.getCanvasBBox();\n      const textAlign = get(cfg, 'textAlign', 'left');\n\n      let x = cfg.x;\n      const y = cfg.y - height / 2;\n\n      if (textAlign === 'center') {\n        x = x - width / 2;\n      } else if (textAlign === 'right' || textAlign === 'end') {\n        x = x - width;\n      }\n\n      translate(content, x, y); // 将 label 平移至 x, y 指定的位置\n      labelShape = content;\n      labelGroup.add(content);\n    } else {\n      const fill = get(cfg, ['style', 'fill']);\n      labelShape = labelGroup.addShape('text', {\n        attrs: {\n          x: cfg.x,\n          y: cfg.y,\n          textAlign: cfg.textAlign,\n          textBaseline: get(cfg, 'textBaseline', 'middle'),\n          text: cfg.content,\n          ...cfg.style,\n          fill: isNull(fill) ? cfg.color : fill,\n        },\n        ...shapeAppendCfg,\n      });\n    }\n\n    if (cfg.rotate) {\n      rotate(labelShape, cfg.rotate);\n    }\n    return labelGroup;\n  }\n\n  // 根据type对label布局\n  private async doLayout(items: LabelItem[], shapes: Record<string, IShape | IGroup>, shapesMap: Record<string, IGroup>) {\n    if (this.layout) {\n      const layouts = isArray(this.layout) ? this.layout : [this.layout];\n      await Promise.all(layouts.map((layout: GeometryLabelLayoutCfg) => {\n        const layoutFn = getGeometryLabelLayout(get(layout, 'type', ''));\n        if (!layoutFn) return;\n\n        const labelShapes = [];\n        const geometryShapes = [];\n        each(shapesMap, (labelShape, id) => {\n          labelShapes.push(labelShape);\n          geometryShapes.push(shapes[labelShape.get('elementId')]);\n        });\n        // [todo] Refactor more layout into Worker.\n        return layoutFn(items, labelShapes, geometryShapes, this.region, layout.cfg);\n      }));\n    }\n  }\n\n  private renderLabelLine(labelItems: LabelItem[], shapesMap) {\n    each(labelItems, (labelItem) => {\n      const coordinate: Coordinate = get(labelItem, 'coordinate');\n      if (!labelItem || !coordinate) {\n        return;\n      }\n      const center = coordinate.getCenter();\n      const radius = coordinate.getRadius();\n      if (!labelItem.labelLine) {\n        // labelLine: null | false，关闭 label 对应的 labelLine\n        return;\n      }\n      const labelLineCfg = get(labelItem, 'labelLine', {});\n      const id = labelItem.id;\n      let path = labelLineCfg.path;\n      if (!path) {\n        const start = polarToCartesian(center.x, center.y, radius, labelItem.angle);\n        path = [\n          ['M', start.x, start.y],\n          ['L', labelItem.x, labelItem.y],\n        ];\n      }\n      const labelGroup = shapesMap[id];\n      if (!labelGroup.destroyed) {\n        labelGroup.addShape('path', {\n          capture: false, // labelLine 默认不参与事件捕获\n          attrs: {\n            path,\n            stroke: labelItem.color ? labelItem.color : get(labelItem, ['style', 'fill'], '#000'),\n            fill: null,\n            ...labelLineCfg.style,\n          },\n          id,\n          origin: labelItem.mappingData,\n          data: labelItem.data,\n          coordinate: labelItem.coordinate,\n        });\n      }\n    });\n  }\n\n  /**\n   * 绘制标签背景\n   * @param labelItems\n   */\n  private renderLabelBackground(labelItems: LabelItem[], shapesMap) {\n    each(labelItems, (labelItem) => {\n      const coordinate: Coordinate = get(labelItem, 'coordinate');\n      const background: LabelItem['background'] = get(labelItem, 'background');\n      if (!background || !coordinate) {\n        return;\n      }\n\n      const id = labelItem.id;\n      const labelGroup = shapesMap[id];\n      if (!labelGroup.destroyed) {\n        const labelContentShape = labelGroup.getChildren()[0];\n        if (labelContentShape) {\n          const { rotation, ...box } = getLabelBackgroundInfo(labelGroup, labelItem, background.padding);\n          const backgroundShape = labelGroup.addShape('rect', {\n            attrs: {\n              ...box,\n              ...(background.style || {}),\n            },\n            id,\n            origin: labelItem.mappingData,\n            data: labelItem.data,\n            coordinate: labelItem.coordinate,\n          });\n          backgroundShape.setZIndex(-1);\n\n          if (rotation) {\n            const matrix = labelContentShape.getMatrix();\n            backgroundShape.setMatrix(matrix);\n          }\n        }\n      }\n    });\n  }\n\n  private createOffscreenGroup() {\n    const container = this.container;\n    const GroupClass = container.getGroupBase(); // 获取分组的构造函数\n    const newGroup = new GroupClass({});\n    return newGroup;\n  }\n\n  private adjustLabel(items: LabelItem[], shapesMap) {\n    each(items, (item) => {\n      if (item) {\n        const id = item.id;\n        const labelGroup = shapesMap[id];\n        if (!labelGroup.destroyed) {\n          // fix: 如果说开发者的 label content 是一个 group，此处的偏移无法对 整个 content group 生效；场景类似 饼图 spider label 是一个含 2 个 textShape 的 gorup\n          const labelShapes = labelGroup.findAll((ele) => ele.get('type') !== 'path');\n          each(labelShapes, (labelShape) => {\n            if (labelShape) {\n              if (item.offsetX) {\n                labelShape.attr('x', labelShape.attr('x') + item.offsetX);\n              }\n              if (item.offsetY) {\n                labelShape.attr('y', labelShape.attr('y') + item.offsetY);\n              }\n            }\n          });\n        }\n      }\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}