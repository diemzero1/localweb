{"ast":null,"code":"var _jsxFileName = \"/home/iam/Documents/network/src/components/antd/system/upfirmware/upload.tsx\",\n  _s = $RefreshSig$();\nimport { message as antdMessage, Form, Button, message, Upload, Card } from 'antd';\nimport axios from \"axios\";\nimport ubusApi from 'service/api/ubus-api';\nimport { UploadOutlined } from '@ant-design/icons';\nimport React from 'react';\nimport { useTranslation } from \"react-i18next\";\nimport \"../../../../translations/i18n\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UploadFirmware = props => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const [form] = Form.useForm();\n  const [do_upgrade, setDoUpgrade] = React.useState(false);\n  let tokenString = sessionStorage.getItem('token');\n  const URL = \"/cgi-bin/luci-upload\";\n  const uploadFile = async values => {\n    const data = new FormData();\n    values.token = tokenString;\n    data.append(\"sessionid\", values.token);\n    data.append(\"filename\", \"/tmp/firmware.bin\");\n    data.append(\"filedata\", values.imageFile.file.originFileObj);\n    axios.post(URL, data, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }).then(response => {\n      message.success(t(\"upload_success\"));\n      doUpgrade();\n    }).catch(error => {\n      message.error(t(\"fail\"));\n    });\n  };\n  const doUpgrade = async () => {\n    let result = await ubusApi.config_system_update();\n    const {\n      code\n    } = result;\n    console.log('upgrade', code);\n    const key = 'updatable';\n    antdMessage.loading({\n      content: t(\"loading\"),\n      key\n    });\n    setTimeout(() => {\n      if (code == 1 || code == 2) antdMessage.error({\n        content: t(\"invalid_firmware\"),\n        key,\n        duration: 2\n      });else antdMessage.success({\n        content: t(\"upgrade_success\"),\n        key,\n        duration: 2\n      });\n    }, 5000);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    title: t(\"update_firmware\"),\n    type: \"inner\",\n    headStyle: {\n      background: \"linear-gradient(109.6deg, rgb(44, 83, 131), rgb(44, 83, 131) 18.9%, rgb(68, 124, 143), rgb(44, 83, 131) 91.1%, rgb(44, 83, 131))\",\n      color: 'white'\n    },\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      form: form,\n      labelCol: {\n        span: 10\n      },\n      wrapperCol: {\n        span: 24\n      },\n      onFinish: uploadFile,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        label: t(\"choose_firmware\"),\n        name: \"imageFile\",\n        children: /*#__PURE__*/_jsxDEV(Upload, {\n          maxCount: 1,\n          ...props,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 35\n            }, this),\n            onClick: uploadFile,\n            children: t(\"upload\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        wrapperCol: {\n          offset: 10,\n          span: 24\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: t(\"update\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(UploadFirmware, \"TslwTHu89Q9CB8Q7eR7rqQgKVkk=\", false, function () {\n  return [useTranslation, Form.useForm];\n});\n_c = UploadFirmware;\nvar _c;\n$RefreshReg$(_c, \"UploadFirmware\");","map":{"version":3,"names":["message","antdMessage","Form","Button","Upload","Card","axios","ubusApi","UploadOutlined","React","useTranslation","UploadFirmware","props","t","form","useForm","do_upgrade","setDoUpgrade","useState","tokenString","sessionStorage","getItem","URL","uploadFile","values","data","FormData","token","append","imageFile","file","originFileObj","post","headers","then","response","success","doUpgrade","catch","error","result","config_system_update","code","console","log","key","loading","content","setTimeout","duration","background","color","span","offset"],"sources":["/home/iam/Documents/network/src/components/antd/system/upfirmware/upload.tsx"],"sourcesContent":["\nimport { message as antdMessage, Form, Button, message, Upload, Card } from 'antd'\n\nimport axios from \"axios\"\nimport ubusApi from 'service/api/ubus-api'\nimport { UploadOutlined } from '@ant-design/icons';\nimport React from 'react';\n\nimport { useTranslation } from \"react-i18next\";\nimport \"../../../../translations/i18n\";\n  \nexport const UploadFirmware = (props: any) => {\n    const { t } = useTranslation();\n    const [form] = Form.useForm()\n    const [do_upgrade, setDoUpgrade] = React.useState(false)\n\n    let tokenString = sessionStorage.getItem('token');\n\n    const URL = \"/cgi-bin/luci-upload\"\n\n    const uploadFile = async (values: any) => {\n    \n        const data = new FormData();\n        values.token = tokenString;\n        data.append(\"sessionid\", values.token)\n        data.append(\"filename\", \"/tmp/firmware.bin\")\n        data.append(\"filedata\", values.imageFile.file.originFileObj)\n        axios.post(URL, data, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\"\n            }\n        }).then(response => {\n            message.success(t(\"upload_success\"));\n            doUpgrade()\n        }).catch(error => {            \n            message.error(t(\"fail\"));\n        })\n    }\n\n    const doUpgrade = async () => {\n        let result = await ubusApi.config_system_update()\n\n        const { code } = result\n        console.log('upgrade', code)\n\n        const key = 'updatable';\n        antdMessage.loading({ content: t(\"loading\"), key });\n        setTimeout(() => {\n            if (code == 1 || code == 2) \n            antdMessage.error({ content: t(\"invalid_firmware\"), key, duration: 2 });\n            else \n                antdMessage.success({ content: t(\"upgrade_success\"), key, duration: 2 });\n        }, 5000);\n    }\n\n    return (\n        <Card title={t(\"update_firmware\")} type=\"inner\" headStyle={{ background: \"linear-gradient(109.6deg, rgb(44, 83, 131), rgb(44, 83, 131) 18.9%, rgb(68, 124, 143), rgb(44, 83, 131) 91.1%, rgb(44, 83, 131))\",color: 'white'}}>\n        <Form\n            form={form}\n            labelCol={{ span: 10 }}\n            wrapperCol={{ span: 24 }}\n            onFinish={uploadFile}\n        >\n\n            <Form.Item label={t(\"choose_firmware\")} name=\"imageFile\">\n                <Upload maxCount={1} {...props}>\n                    <Button icon={<UploadOutlined />} onClick={uploadFile}>{t(\"upload\")}</Button>\n                </Upload>\n\n            </Form.Item>\n            <Form.Item wrapperCol={{ offset: 10, span: 24 }}>\n                <Button type='primary' htmlType=\"submit\">\n                    {t(\"update\")}\n                </Button>\n            </Form.Item>\n        </Form>\n        </Card>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}