{"ast":null,"code":"import { reduce } from '@antv/util';\n/**\n * From lodash\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the number of times the key was returned by `iteratee`. The\n * iteratee is invoked with one argument: (value).\n *\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * const users = [\n *   { 'user': 'barney', 'active': true },\n *   { 'user': 'betty', 'active': true },\n *   { 'user': 'fred', 'active': false }\n * ]\n *\n * countBy(users, value => value.active);\n * // => { 'true': 2, 'false': 1 }\n */\nexport var countBy = function countBy(collection, iteratee) {\n  return reduce(collection, function (result, value, key) {\n    key = iteratee ? iteratee(value) : value;\n    if (result.hasOwnProperty(key)) {\n      ++result[key];\n    } else {\n      result[key] = 1;\n    }\n    return result;\n  }, {});\n};","map":{"version":3,"names":["reduce","countBy","collection","iteratee","result","value","key","hasOwnProperty"],"sources":["/home/iam/Documents/network/node_modules/@ant-design/graphs/es/utils/count-by.js"],"sourcesContent":["import { reduce } from '@antv/util';\n/**\n * From lodash\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the number of times the key was returned by `iteratee`. The\n * iteratee is invoked with one argument: (value).\n *\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * const users = [\n *   { 'user': 'barney', 'active': true },\n *   { 'user': 'betty', 'active': true },\n *   { 'user': 'fred', 'active': false }\n * ]\n *\n * countBy(users, value => value.active);\n * // => { 'true': 2, 'false': 1 }\n */\nexport var countBy = function (collection, iteratee) {\n    return reduce(collection, function (result, value, key) {\n        key = iteratee ? iteratee(value) : value;\n        if (result.hasOwnProperty(key)) {\n            ++result[key];\n        }\n        else {\n            result[key] = 1;\n        }\n        return result;\n    }, {});\n};\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIC,OAAO,GAAG,SAAVA,OAAO,CAAaC,UAAU,EAAEC,QAAQ,EAAE;EACjD,OAAOH,MAAM,CAACE,UAAU,EAAE,UAAUE,MAAM,EAAEC,KAAK,EAAEC,GAAG,EAAE;IACpDA,GAAG,GAAGH,QAAQ,GAAGA,QAAQ,CAACE,KAAK,CAAC,GAAGA,KAAK;IACxC,IAAID,MAAM,CAACG,cAAc,CAACD,GAAG,CAAC,EAAE;MAC5B,EAAEF,MAAM,CAACE,GAAG,CAAC;IACjB,CAAC,MACI;MACDF,MAAM,CAACE,GAAG,CAAC,GAAG,CAAC;IACnB;IACA,OAAOF,MAAM;EACjB,CAAC,EAAE,CAAC,CAAC,CAAC;AACV,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}