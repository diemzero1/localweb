{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Action } from '..';\nvar DIM_X = 'x';\nvar DIM_Y = 'y';\n/**\n * Scale translate\n * @ignore\n */\nvar ScaleTranslate = /** @class */function (_super) {\n  __extends(ScaleTranslate, _super);\n  function ScaleTranslate() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.dims = [DIM_X, DIM_Y];\n    _this.cfgFields = ['dims'];\n    _this.cacheScaleDefs = {};\n    return _this;\n  }\n  // 是否支持对应字段的平移\n  ScaleTranslate.prototype.hasDim = function (dim) {\n    return this.dims.includes(dim);\n  };\n  ScaleTranslate.prototype.getScale = function (dim) {\n    var view = this.context.view;\n    if (dim === 'x') {\n      return view.getXScale();\n    } else {\n      return view.getYScales()[0];\n    }\n  };\n  ScaleTranslate.prototype.resetDim = function (dim) {\n    var view = this.context.view;\n    if (this.hasDim(dim) && this.cacheScaleDefs[dim]) {\n      var scale = this.getScale(dim);\n      view.scale(scale.field, this.cacheScaleDefs[dim]);\n      this.cacheScaleDefs[dim] = null;\n    }\n  };\n  /**\n   * 回滚\n   */\n  ScaleTranslate.prototype.reset = function () {\n    this.resetDim(DIM_X);\n    this.resetDim(DIM_Y);\n    var view = this.context.view;\n    view.render(true);\n  };\n  return ScaleTranslate;\n}(Action);\nexport default ScaleTranslate;","map":{"version":3,"mappings":";AAAA,SAASA,MAAM,QAAQ,IAAI;AAE3B,IAAMC,KAAK,GAAG,GAAG;AACjB,IAAMC,KAAK,GAAG,GAAG;AAEjB;;;;AAIA;EAA6BC;EAA7B;IAAA;IACYC,UAAI,GAAG,CAACH,KAAK,EAAEC,KAAK,CAAC;IACrBE,eAAS,GAAG,CAAC,MAAM,CAAC;IACpBA,oBAAc,GAAG,EAAE;;EAkC/B;EAhCE;EACUC,+BAAM,GAAhB,UAAiBC,GAAG;IAClB,OAAO,IAAI,CAACC,IAAI,CAACC,QAAQ,CAACF,GAAG,CAAC;EAChC,CAAC;EAESD,iCAAQ,GAAlB,UAAmBC,GAAG;IACpB,IAAMG,IAAI,GAAG,IAAI,CAACC,OAAO,CAACD,IAAI;IAC9B,IAAIH,GAAG,KAAK,GAAG,EAAE;MACf,OAAOG,IAAI,CAACE,SAAS,EAAE;KACxB,MAAM;MACL,OAAOF,IAAI,CAACG,UAAU,EAAE,CAAC,CAAC,CAAC;;EAE/B,CAAC;EAEOP,iCAAQ,GAAhB,UAAiBC,GAAG;IAClB,IAAMG,IAAI,GAAG,IAAI,CAACC,OAAO,CAACD,IAAI;IAC9B,IAAI,IAAI,CAACI,MAAM,CAACP,GAAG,CAAC,IAAI,IAAI,CAACQ,cAAc,CAACR,GAAG,CAAC,EAAE;MAChD,IAAMS,KAAK,GAAG,IAAI,CAACC,QAAQ,CAACV,GAAG,CAAC;MAChCG,IAAI,CAACM,KAAK,CAACA,KAAK,CAACE,KAAK,EAAE,IAAI,CAACH,cAAc,CAACR,GAAG,CAAC,CAAC;MACjD,IAAI,CAACQ,cAAc,CAACR,GAAG,CAAC,GAAG,IAAI;;EAEnC,CAAC;EAED;;;EAGOD,8BAAK,GAAZ;IACE,IAAI,CAACa,QAAQ,CAACjB,KAAK,CAAC;IACpB,IAAI,CAACiB,QAAQ,CAAChB,KAAK,CAAC;IACpB,IAAMO,IAAI,GAAG,IAAI,CAACC,OAAO,CAACD,IAAI;IAC9BA,IAAI,CAACU,MAAM,CAAC,IAAI,CAAC;EACnB,CAAC;EACH,qBAAC;AAAD,CAAC,CArC4BnB,MAAM;AAuCnC,eAAeK,cAAc","names":["Action","DIM_X","DIM_Y","__extends","_this","ScaleTranslate","dim","dims","includes","view","context","getXScale","getYScales","hasDim","cacheScaleDefs","scale","getScale","field","resetDim","render"],"sources":["/home/iam/Documents/network/node_modules/@antv/g2/src/interaction/action/view/scale-transform.ts"],"sourcesContent":["import { Action } from '..';\n\nconst DIM_X = 'x';\nconst DIM_Y = 'y';\n\n/**\n * Scale translate\n * @ignore\n */\nclass ScaleTranslate extends Action {\n  protected dims = [DIM_X, DIM_Y];\n  protected cfgFields = ['dims'];\n  protected cacheScaleDefs = {};\n\n  // 是否支持对应字段的平移\n  protected hasDim(dim) {\n    return this.dims.includes(dim);\n  }\n\n  protected getScale(dim) {\n    const view = this.context.view;\n    if (dim === 'x') {\n      return view.getXScale();\n    } else {\n      return view.getYScales()[0];\n    }\n  }\n\n  private resetDim(dim) {\n    const view = this.context.view;\n    if (this.hasDim(dim) && this.cacheScaleDefs[dim]) {\n      const scale = this.getScale(dim);\n      view.scale(scale.field, this.cacheScaleDefs[dim]);\n      this.cacheScaleDefs[dim] = null;\n    }\n  }\n\n  /**\n   * 回滚\n   */\n  public reset() {\n    this.resetDim(DIM_X);\n    this.resetDim(DIM_Y);\n    const view = this.context.view;\n    view.render(true);\n  }\n}\n\nexport default ScaleTranslate;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}