{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { isEqual, get } from '@antv/util';\nimport Action from '../../base';\n/**\n * Tooltip 展示隐藏的 Action\n * @ignore\n */\nvar TooltipAction = /** @class */function (_super) {\n  __extends(TooltipAction, _super);\n  function TooltipAction() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.timeStamp = 0;\n    return _this;\n  }\n  /**\n   * 显示 Tooltip\n   * @returns\n   */\n  TooltipAction.prototype.show = function () {\n    var context = this.context;\n    var ev = context.event;\n    var view = context.view;\n    var isTooltipLocked = view.isTooltipLocked();\n    if (isTooltipLocked) {\n      // 锁定时不移动 tooltip\n      return;\n    }\n    var lastTimeStamp = this.timeStamp;\n    var timeStamp = +new Date();\n    // 在 showDelay 毫秒（默认 16ms）内到 tooltip 上可以实现 enterable（调参工程师）\n    var showDelay = get(context.view.getOptions(), 'tooltip.showDelay', 16);\n    if (timeStamp - lastTimeStamp > showDelay) {\n      var preLoc = this.location;\n      var curLoc = {\n        x: ev.x,\n        y: ev.y\n      };\n      if (!preLoc || !isEqual(preLoc, curLoc)) {\n        this.showTooltip(view, curLoc);\n      }\n      this.timeStamp = timeStamp;\n      this.location = curLoc;\n    }\n  };\n  /**\n   * 隐藏 Tooltip。\n   * @returns\n   */\n  TooltipAction.prototype.hide = function () {\n    var view = this.context.view;\n    var tooltip = view.getController('tooltip');\n    var _a = this.context.event,\n      clientX = _a.clientX,\n      clientY = _a.clientY;\n    // 如果已经 enterable + 已经在 tooltip 上，那么不隐藏\n    if (tooltip.isCursorEntered({\n      x: clientX,\n      y: clientY\n    })) {\n      return;\n    }\n    // 锁定 tooltip 时不隐藏\n    if (view.isTooltipLocked()) {\n      return;\n    }\n    this.hideTooltip(view);\n    this.location = null;\n  };\n  TooltipAction.prototype.showTooltip = function (view, point) {\n    // 相同位置不重复展示\n    view.showTooltip(point);\n  };\n  TooltipAction.prototype.hideTooltip = function (view) {\n    view.hideTooltip();\n  };\n  return TooltipAction;\n}(Action);\nexport default TooltipAction;","map":{"version":3,"mappings":";AAAA,SAASA,OAAO,EAAEC,GAAG,QAAQ,YAAY;AAGzC,OAAOC,MAAM,MAAM,YAAY;AAG/B;;;;AAIA;EAA4BC;EAA5B;IAAA;IACUC,eAAS,GAAW,CAAC;;EA+D/B;EA5DE;;;;EAIOC,4BAAI,GAAX;IACE,IAAMC,OAAO,GAAG,IAAI,CAACA,OAAO;IAC5B,IAAMC,EAAE,GAAGD,OAAO,CAACE,KAAK;IACxB,IAAMC,IAAI,GAAGH,OAAO,CAACG,IAAI;IACzB,IAAMC,eAAe,GAAGD,IAAI,CAACC,eAAe,EAAE;IAC9C,IAAIA,eAAe,EAAE;MACnB;MACA;;IAEF,IAAMC,aAAa,GAAG,IAAI,CAACC,SAAS;IACpC,IAAMA,SAAS,GAAG,CAAC,IAAIC,IAAI,EAAE;IAE7B;IACA,IAAMC,SAAS,GAAGb,GAAG,CAACK,OAAO,CAACG,IAAI,CAACM,UAAU,EAAE,EAAE,mBAAmB,EAAE,EAAE,CAAC;IACzE,IAAIH,SAAS,GAAGD,aAAa,GAAGG,SAAS,EAAE;MACzC,IAAME,MAAM,GAAG,IAAI,CAACC,QAAQ;MAC5B,IAAMC,MAAM,GAAG;QAAEC,CAAC,EAAEZ,EAAE,CAACY,CAAC;QAAEC,CAAC,EAAEb,EAAE,CAACa;MAAC,CAAE;MACnC,IAAI,CAACJ,MAAM,IAAI,CAAChB,OAAO,CAACgB,MAAM,EAAEE,MAAM,CAAC,EAAE;QACvC,IAAI,CAACG,WAAW,CAACZ,IAAI,EAAES,MAAM,CAAC;;MAEhC,IAAI,CAACN,SAAS,GAAGA,SAAS;MAC1B,IAAI,CAACK,QAAQ,GAAGC,MAAM;;EAE1B,CAAC;EAED;;;;EAIOb,4BAAI,GAAX;IACE,IAAMI,IAAI,GAAG,IAAI,CAACH,OAAO,CAACG,IAAI;IAE9B,IAAMa,OAAO,GAAGb,IAAI,CAACc,aAAa,CAAC,SAAS,CAAC;IACvC,SAAuB,IAAI,CAACjB,OAAO,CAACE,KAAK;MAAvCgB,OAAO;MAAEC,OAAO,aAAuB;IAE/C;IACA,IAAIH,OAAO,CAACI,eAAe,CAAC;MAAEP,CAAC,EAAEK,OAAO;MAAEJ,CAAC,EAAEK;IAAO,CAAE,CAAC,EAAE;MACvD;;IAGF;IACA,IAAIhB,IAAI,CAACC,eAAe,EAAE,EAAE;MAC1B;;IAEF,IAAI,CAACiB,WAAW,CAAClB,IAAI,CAAC;IACtB,IAAI,CAACQ,QAAQ,GAAG,IAAI;EACtB,CAAC;EAESZ,mCAAW,GAArB,UAAsBI,IAAU,EAAEmB,KAAY;IAC5C;IACAnB,IAAI,CAACY,WAAW,CAACO,KAAK,CAAC;EACzB,CAAC;EAESvB,mCAAW,GAArB,UAAsBI,IAAI;IACxBA,IAAI,CAACkB,WAAW,EAAE;EACpB,CAAC;EACH,oBAAC;AAAD,CAAC,CAhE2BzB,MAAM;AAkElC,eAAeG,aAAa","names":["isEqual","get","Action","__extends","_this","TooltipAction","context","ev","event","view","isTooltipLocked","lastTimeStamp","timeStamp","Date","showDelay","getOptions","preLoc","location","curLoc","x","y","showTooltip","tooltip","getController","clientX","clientY","isCursorEntered","hideTooltip","point"],"sources":["/home/iam/Documents/network/node_modules/@antv/g2/src/interaction/action/component/tooltip/geometry.ts"],"sourcesContent":["import { isEqual, get } from '@antv/util';\nimport { View } from '../../../../chart';\nimport { Point } from '../../../../interface';\nimport Action from '../../base';\nimport Tooltip from '../../../../chart/controller/tooltip';\n\n/**\n * Tooltip 展示隐藏的 Action\n * @ignore\n */\nclass TooltipAction extends Action {\n  private timeStamp: number = 0;\n  private location: Point;\n\n  /**\n   * 显示 Tooltip\n   * @returns\n   */\n  public show() {\n    const context = this.context;\n    const ev = context.event;\n    const view = context.view;\n    const isTooltipLocked = view.isTooltipLocked();\n    if (isTooltipLocked) {\n      // 锁定时不移动 tooltip\n      return;\n    }\n    const lastTimeStamp = this.timeStamp;\n    const timeStamp = +new Date();\n\n    // 在 showDelay 毫秒（默认 16ms）内到 tooltip 上可以实现 enterable（调参工程师）\n    const showDelay = get(context.view.getOptions(), 'tooltip.showDelay', 16);\n    if (timeStamp - lastTimeStamp > showDelay) {\n      const preLoc = this.location;\n      const curLoc = { x: ev.x, y: ev.y };\n      if (!preLoc || !isEqual(preLoc, curLoc)) {\n        this.showTooltip(view, curLoc);\n      }\n      this.timeStamp = timeStamp;\n      this.location = curLoc;\n    }\n  }\n\n  /**\n   * 隐藏 Tooltip。\n   * @returns\n   */\n  public hide() {\n    const view = this.context.view;\n\n    const tooltip = view.getController('tooltip');\n    const { clientX, clientY } = this.context.event;\n\n    // 如果已经 enterable + 已经在 tooltip 上，那么不隐藏\n    if (tooltip.isCursorEntered({ x: clientX, y: clientY })) {\n      return;\n    }\n\n    // 锁定 tooltip 时不隐藏\n    if (view.isTooltipLocked()) {\n      return;\n    }\n    this.hideTooltip(view);\n    this.location = null;\n  }\n\n  protected showTooltip(view: View, point: Point) {\n    // 相同位置不重复展示\n    view.showTooltip(point);\n  }\n\n  protected hideTooltip(view) {\n    view.hideTooltip();\n  }\n}\n\nexport default TooltipAction;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}