{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { createDom, modifyCSS } from '@antv/dom-util';\nimport { substitute, hasKey } from '@antv/util';\nimport { toPx, getTextPoint } from '../util/util';\nimport HtmlComponent from '../abstract/html-component';\nimport * as CssConst from './css-const';\nimport HtmlTheme from './html-theme';\nvar HtmlCrosshair = /** @class */function (_super) {\n  __extends(HtmlCrosshair, _super);\n  function HtmlCrosshair() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  HtmlCrosshair.prototype.getDefaultCfg = function () {\n    var cfg = _super.prototype.getDefaultCfg.call(this);\n    return __assign(__assign({}, cfg), {\n      name: 'crosshair',\n      type: 'html',\n      locationType: 'region',\n      start: {\n        x: 0,\n        y: 0\n      },\n      end: {\n        x: 0,\n        y: 0\n      },\n      capture: false,\n      text: null,\n      containerTpl: \"<div class=\\\"\" + CssConst.CONTAINER_CLASS + \"\\\"></div>\",\n      crosshairTpl: \"<div class=\\\"\" + CssConst.CROSSHAIR_LINE + \"\\\"></div>\",\n      textTpl: \"<span class=\\\"\" + CssConst.CROSSHAIR_TEXT + \"\\\">{content}</span>\",\n      domStyles: null,\n      containerClassName: CssConst.CONTAINER_CLASS,\n      defaultStyles: HtmlTheme,\n      defaultCfg: {\n        text: {\n          position: 'start',\n          content: null,\n          align: 'center',\n          offset: 10\n        }\n      }\n    });\n  };\n  HtmlCrosshair.prototype.render = function () {\n    this.resetText();\n    this.resetPosition();\n  };\n  // 绘制 crosshair\n  HtmlCrosshair.prototype.initCrossHair = function () {\n    var container = this.getContainer();\n    var crosshairTpl = this.get('crosshairTpl');\n    var crosshairEl = createDom(crosshairTpl);\n    container.appendChild(crosshairEl);\n    this.applyStyle(CssConst.CROSSHAIR_LINE, crosshairEl);\n    this.set('crosshairEl', crosshairEl);\n  };\n  // 获取文本的位置\n  HtmlCrosshair.prototype.getTextPoint = function () {\n    var _a = this.getLocation(),\n      start = _a.start,\n      end = _a.end;\n    var _b = this.get('text'),\n      position = _b.position,\n      offset = _b.offset;\n    return getTextPoint(start, end, position, offset);\n  };\n  // 设置 text\n  HtmlCrosshair.prototype.resetText = function () {\n    var text = this.get('text');\n    var textEl = this.get('textEl');\n    if (text) {\n      var content = text.content;\n      if (!textEl) {\n        var container = this.getContainer();\n        var textTpl = substitute(this.get('textTpl'), text);\n        textEl = createDom(textTpl);\n        container.appendChild(textEl);\n        this.applyStyle(CssConst.CROSSHAIR_TEXT, textEl);\n        this.set('textEl', textEl);\n      }\n      textEl.innerHTML = content;\n    } else if (textEl) {\n      textEl.remove();\n    }\n  };\n  // 是否垂直\n  HtmlCrosshair.prototype.isVertical = function (start, end) {\n    return start.x === end.x;\n  };\n  // 重新调整位置\n  HtmlCrosshair.prototype.resetPosition = function () {\n    var crosshairEl = this.get('crosshairEl');\n    if (!crosshairEl) {\n      this.initCrossHair();\n      crosshairEl = this.get('crosshairEl');\n    }\n    var start = this.get('start');\n    var end = this.get('end');\n    var minX = Math.min(start.x, end.x);\n    var minY = Math.min(start.y, end.y);\n    if (this.isVertical(start, end)) {\n      modifyCSS(crosshairEl, {\n        width: '1px',\n        height: toPx(Math.abs(end.y - start.y))\n      });\n    } else {\n      modifyCSS(crosshairEl, {\n        height: '1px',\n        width: toPx(Math.abs(end.x - start.x))\n      });\n    }\n    modifyCSS(crosshairEl, {\n      top: toPx(minY),\n      left: toPx(minX)\n    });\n    this.alignText();\n  };\n  HtmlCrosshair.prototype.alignText = function () {\n    // 重新设置 text 位置\n    var textEl = this.get('textEl');\n    if (textEl) {\n      var align = this.get('text').align;\n      var clientWidth = textEl.clientWidth;\n      var point = this.getTextPoint();\n      switch (align) {\n        case 'center':\n          point.x = point.x - clientWidth / 2;\n          break;\n        case 'right':\n          point.x = point.x - clientWidth;\n        case 'left':\n          break;\n      }\n      modifyCSS(textEl, {\n        top: toPx(point.y),\n        left: toPx(point.x)\n      });\n    }\n  };\n  HtmlCrosshair.prototype.updateInner = function (cfg) {\n    if (hasKey(cfg, 'text')) {\n      this.resetText();\n    }\n    _super.prototype.updateInner.call(this, cfg);\n  };\n  return HtmlCrosshair;\n}(HtmlComponent);\nexport default HtmlCrosshair;","map":{"version":3,"mappings":"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","names":["createDom","modifyCSS","substitute","hasKey","toPx","getTextPoint","HtmlComponent","CssConst","HtmlTheme","__extends","HtmlCrosshair","cfg","_super","getDefaultCfg","name","type","locationType","start","x","y","end","capture","text","containerTpl","CONTAINER_CLASS","crosshairTpl","CROSSHAIR_LINE","textTpl","CROSSHAIR_TEXT","domStyles","containerClassName","defaultStyles","defaultCfg","position","content","align","offset","resetText","resetPosition","container","getContainer","get","crosshairEl","appendChild","applyStyle","set","getLocation","textEl","innerHTML","remove","initCrossHair","minX","Math","min","minY","isVertical","width","height","abs","top","left","alignText","clientWidth","point","updateInner"],"sources":["/home/iam/Documents/LocalWeb-master/node_modules/@antv/component/src/crosshair/html.ts"],"sourcesContent":["import { createDom, modifyCSS } from '@antv/dom-util';\nimport { substitute, hasKey } from '@antv/util';\nimport { toPx, getTextPoint } from '../util/util';\nimport HtmlComponent from '../abstract/html-component';\nimport * as CssConst from './css-const';\nimport HtmlTheme from './html-theme';\nimport {HtmlCrossHairCfg} from '../types';\nclass HtmlCrosshair<T extends HtmlCrossHairCfg = HtmlCrossHairCfg> extends HtmlComponent {\n  public getDefaultCfg() {\n    const cfg = super.getDefaultCfg();\n    return {\n      ...cfg,\n      name: 'crosshair',\n      type: 'html',\n      locationType: 'region',\n      start: {x: 0, y: 0}, // 防止初始化报错\n      end: {x: 0, y: 0}, // 防止初始化报错\n      capture: false,\n      text: null,\n      containerTpl: `<div class=\"${CssConst.CONTAINER_CLASS}\"></div>`,\n      crosshairTpl: `<div class=\"${CssConst.CROSSHAIR_LINE}\"></div>`,\n      textTpl: `<span class=\"${CssConst.CROSSHAIR_TEXT}\">{content}</span>`,\n      domStyles: null,\n      containerClassName: CssConst.CONTAINER_CLASS,\n      defaultStyles: HtmlTheme,\n      defaultCfg: {\n        text: {\n          position: 'start',\n          content: null,\n          align: 'center',\n          offset: 10\n        }\n      },\n    };\n  }\n\n  render() {\n    this.resetText();\n    this.resetPosition();\n  }\n\n  // 绘制 crosshair\n  private initCrossHair() {\n    const container = this.getContainer();\n    const crosshairTpl = this.get('crosshairTpl');\n    const crosshairEl = createDom(crosshairTpl);\n    container.appendChild(crosshairEl);\n    this.applyStyle(CssConst.CROSSHAIR_LINE, crosshairEl);\n    this.set('crosshairEl', crosshairEl);\n  }\n\n  // 获取文本的位置\n  private getTextPoint() {\n    const { start, end } = this.getLocation();\n    const { position, offset } = this.get('text');\n    return getTextPoint(start, end, position, offset);\n  }\n\n  // 设置 text\n  private resetText() {\n    const text = this.get('text');\n    let textEl = this.get('textEl') as HTMLElement;\n    if (text) {\n      const {content} = text;\n      if (!textEl) {\n        const container = this.getContainer();\n        const textTpl = substitute(this.get('textTpl'), text);\n        textEl = createDom(textTpl);\n        container.appendChild(textEl);\n        this.applyStyle(CssConst.CROSSHAIR_TEXT, textEl);\n        this.set('textEl', textEl);\n      }\n      textEl.innerHTML = content;\n    } else if (textEl) {\n      textEl.remove();\n    }\n  }\n  // 是否垂直\n  private isVertical(start, end) {\n    return start.x === end.x;\n  }\n  // 重新调整位置\n  protected resetPosition() {\n    let crosshairEl = this.get('crosshairEl');\n    if (!crosshairEl) {\n      this.initCrossHair();\n      crosshairEl = this.get('crosshairEl');\n    }\n    const start = this.get('start');\n    const end = this.get('end');\n    const minX = Math.min(start.x, end.x);\n    const minY = Math.min(start.y, end.y);\n    if (this.isVertical(start, end)) {\n      modifyCSS(crosshairEl, {\n        width: '1px',\n        height: toPx(Math.abs(end.y - start.y))\n      });\n    } else {\n      modifyCSS(crosshairEl, {\n        height: '1px',\n        width: toPx(Math.abs(end.x - start.x))\n      });\n    }\n    modifyCSS(crosshairEl, {\n      top: toPx(minY),\n      left: toPx(minX)\n    });\n    this.alignText();\n  }\n\n  private alignText() {\n    // 重新设置 text 位置\n    const textEl = this.get('textEl');\n    if (textEl) {\n      const { align } = this.get('text');\n      const clientWidth = textEl.clientWidth;\n      const point = this.getTextPoint();\n      switch(align) {\n        case 'center': \n          point.x = point.x - clientWidth / 2;\n          break;\n        case 'right':\n          point.x = point.x - clientWidth;\n        case 'left':\n          break;\n      }\n      modifyCSS(textEl, {\n        top: toPx(point.y),\n        left: toPx(point.x)\n      });\n    }\n  }\n\n  protected updateInner(cfg: Partial<T>) {\n    if (hasKey(cfg, 'text')) {\n      this.resetText();\n    }\n    super.updateInner(cfg);\n  }\n}\n\nexport default HtmlCrosshair;"]},"metadata":{},"sourceType":"module","externalDependencies":[]}