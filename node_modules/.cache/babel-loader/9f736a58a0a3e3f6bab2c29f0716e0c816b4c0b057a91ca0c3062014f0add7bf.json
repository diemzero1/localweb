{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { get } from '@antv/util';\nimport { FIELD_ORIGIN } from '../constant';\nimport { getXDimensionLength } from '../util/coordinate';\nimport { getDefaultSize } from './util/shape-size';\nimport Geometry from './base';\n/** 引入 Path 对应的 ShapeFactory */\nimport './shape/violin';\n/**\n * Violin 几何标记。\n * 用于绘制小提琴图。\n */\nvar Violin = /** @class */function (_super) {\n  __extends(Violin, _super);\n  function Violin() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = 'violin';\n    _this.shapeType = 'violin';\n    _this.generatePoints = true;\n    return _this;\n  }\n  /**\n   * 获取 Shape 的关键点数据。\n   * @param record\n   * @returns\n   */\n  Violin.prototype.createShapePointsCfg = function (record) {\n    var cfg = _super.prototype.createShapePointsCfg.call(this, record);\n    // 计算每个 shape 的 size\n    var size;\n    var sizeAttr = this.getAttribute('size');\n    if (sizeAttr) {\n      size = this.getAttributeValues(sizeAttr, record)[0];\n      // 归一化\n      var coordinate = this.coordinate;\n      var coordinateWidth = getXDimensionLength(coordinate);\n      size = size / coordinateWidth;\n    } else {\n      if (!this.defaultSize) {\n        this.defaultSize = getDefaultSize(this);\n      }\n      size = this.defaultSize;\n    }\n    cfg.size = size;\n    cfg._size = get(record[FIELD_ORIGIN], [this._sizeField]);\n    return cfg;\n  };\n  /**\n   * @override\n   */\n  Violin.prototype.initAttributes = function () {\n    var attributeOption = this.attributeOption;\n    var sizeField = attributeOption.size ? attributeOption.size.fields[0] : this._sizeField ? this._sizeField : 'size';\n    this._sizeField = sizeField;\n    // fixme 干啥要删掉\n    delete attributeOption.size;\n    _super.prototype.initAttributes.call(this);\n  };\n  return Violin;\n}(Geometry);\nexport default Violin;","map":{"version":3,"mappings":";AAAA,SAASA,GAAG,QAAQ,YAAY;AAChC,SAASC,YAAY,QAAQ,aAAa;AAE1C,SAASC,mBAAmB,QAAQ,oBAAoB;AACxD,SAASC,cAAc,QAAQ,mBAAmB;AAClD,OAAOC,QAAQ,MAAM,QAAQ;AAC7B;AACA,OAAO,gBAAgB;AAEvB;;;;AAIA;EAAoCC;EAApC;IAAA;IACkBC,UAAI,GAAW,QAAQ;IACvBA,eAAS,GAAW,QAAQ;IAClCA,oBAAc,GAAY,IAAI;;EA+C1C;EA3CE;;;;;EAKUC,qCAAoB,GAA9B,UAA+BC,MAAa;IAC1C,IAAMC,GAAG,GAAGC,iBAAMC,oBAAoB,YAACH,MAAM,CAAC;IAE9C;IACA,IAAII,IAAI;IACR,IAAMC,QAAQ,GAAG,IAAI,CAACC,YAAY,CAAC,MAAM,CAAC;IAC1C,IAAID,QAAQ,EAAE;MACZD,IAAI,GAAG,IAAI,CAACG,kBAAkB,CAACF,QAAQ,EAAEL,MAAM,CAAC,CAAC,CAAC,CAAC;MACnD;MACA,IAAMQ,UAAU,GAAG,IAAI,CAACA,UAAU;MAClC,IAAMC,eAAe,GAAGf,mBAAmB,CAACc,UAAU,CAAC;MACvDJ,IAAI,GAAGA,IAAI,GAAGK,eAAe;KAC9B,MAAM;MACL,IAAI,CAAC,IAAI,CAACC,WAAW,EAAE;QACrB,IAAI,CAACA,WAAW,GAAGf,cAAc,CAAC,IAAI,CAAC;;MAEzCS,IAAI,GAAG,IAAI,CAACM,WAAW;;IAEzBT,GAAG,CAACG,IAAI,GAAGA,IAAI;IACfH,GAAG,CAACU,KAAK,GAAGnB,GAAG,CAACQ,MAAM,CAACP,YAAY,CAAC,EAAE,CAAC,IAAI,CAACmB,UAAU,CAAC,CAAC;IACxD,OAAOX,GAAG;EACZ,CAAC;EAED;;;EAGUF,+BAAc,GAAxB;IACU,mBAAe,GAAK,IAAI,gBAAT;IACvB,IAAMc,SAAS,GAAGC,eAAe,CAACV,IAAI,GAClCU,eAAe,CAACV,IAAI,CAACW,MAAM,CAAC,CAAC,CAAC,GAC9B,IAAI,CAACH,UAAU,GACf,IAAI,CAACA,UAAU,GACf,MAAM;IACV,IAAI,CAACA,UAAU,GAAGC,SAAS;IAC3B;IACA,OAAOC,eAAe,CAACV,IAAI;IAC3BF,iBAAMc,cAAc,WAAE;EACxB,CAAC;EACH,aAAC;AAAD,CAAC,CAlDmCpB,QAAQ","names":["get","FIELD_ORIGIN","getXDimensionLength","getDefaultSize","Geometry","__extends","_this","Violin","record","cfg","_super","createShapePointsCfg","size","sizeAttr","getAttribute","getAttributeValues","coordinate","coordinateWidth","defaultSize","_size","_sizeField","sizeField","attributeOption","fields","initAttributes"],"sources":["/home/iam/Documents/LocalWeb-master/node_modules/@antv/g2/src/geometry/violin.ts"],"sourcesContent":["import { get } from '@antv/util';\nimport { FIELD_ORIGIN } from '../constant';\nimport { Datum, ViolinShapePoint } from '../interface';\nimport { getXDimensionLength } from '../util/coordinate';\nimport { getDefaultSize } from './util/shape-size';\nimport Geometry from './base';\n/** 引入 Path 对应的 ShapeFactory */\nimport './shape/violin';\n\n/**\n * Violin 几何标记。\n * 用于绘制小提琴图。\n */\nexport default class Violin extends Geometry<ViolinShapePoint> {\n  public readonly type: string = 'violin';\n  public readonly shapeType: string = 'violin';\n  protected generatePoints: boolean = true;\n  /** size 私有映射字段 */\n  private _sizeField: string;\n\n  /**\n   * 获取 Shape 的关键点数据。\n   * @param record\n   * @returns\n   */\n  protected createShapePointsCfg(record: Datum) {\n    const cfg = super.createShapePointsCfg(record);\n\n    // 计算每个 shape 的 size\n    let size;\n    const sizeAttr = this.getAttribute('size');\n    if (sizeAttr) {\n      size = this.getAttributeValues(sizeAttr, record)[0];\n      // 归一化\n      const coordinate = this.coordinate;\n      const coordinateWidth = getXDimensionLength(coordinate);\n      size = size / coordinateWidth;\n    } else {\n      if (!this.defaultSize) {\n        this.defaultSize = getDefaultSize(this);\n      }\n      size = this.defaultSize;\n    }\n    cfg.size = size;\n    cfg._size = get(record[FIELD_ORIGIN], [this._sizeField]);\n    return cfg;\n  }\n\n  /**\n   * @override\n   */\n  protected initAttributes() {\n    const { attributeOption } = this;\n    const sizeField = attributeOption.size\n      ? attributeOption.size.fields[0]\n      : this._sizeField\n      ? this._sizeField\n      : 'size';\n    this._sizeField = sizeField;\n    // fixme 干啥要删掉\n    delete attributeOption.size;\n    super.initAttributes();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}