{"ast":null,"code":"import { __rest } from \"tslib\";\nimport { filter, isArray, isObject } from '@antv/util';\nimport { animation, annotation, interaction, pattern, scale, state, theme, tooltip } from '../../adaptor/common';\nimport { interval } from '../../adaptor/geometries';\nimport { deepAssign, findGeometry, flow, LEVEL, log, transformLabel } from '../../utils';\n/**\n * geometry 配置处理\n * @param params\n */\nfunction geometry(params) {\n  var chart = params.chart,\n    options = params.options;\n  var data = options.data,\n    sectorStyle = options.sectorStyle,\n    color = options.color;\n  // 装载数据\n  chart.data(data);\n  flow(interval)(deepAssign({}, params, {\n    options: {\n      marginRatio: 1,\n      interval: {\n        style: sectorStyle,\n        color: color\n      }\n    }\n  }));\n  return params;\n}\n/**\n * label 配置\n * @param params\n */\nfunction label(params) {\n  var chart = params.chart,\n    options = params.options;\n  var label = options.label,\n    xField = options.xField;\n  var geometry = findGeometry(chart, 'interval');\n  // label 为 false 不显示 label\n  if (label === false) {\n    geometry.label(false);\n  } else if (isObject(label)) {\n    var callback = label.callback,\n      fields = label.fields,\n      cfg = __rest(label, [\"callback\", \"fields\"]);\n    var offset = cfg.offset;\n    var layout = cfg.layout;\n    // 当 label 在 shape 外部显示时，设置 'limit-in-shape' 会\n    // 造成 label 不显示。\n    if (offset === undefined || offset >= 0) {\n      layout = layout ? isArray(layout) ? layout : [layout] : [];\n      cfg.layout = filter(layout, function (v) {\n        return v.type !== 'limit-in-shape';\n      });\n      cfg.layout.length || delete cfg.layout;\n    }\n    geometry.label({\n      fields: fields || [xField],\n      callback: callback,\n      cfg: transformLabel(cfg)\n    });\n  } else {\n    log(LEVEL.WARN, label === null, 'the label option must be an Object.');\n    geometry.label({\n      fields: [xField]\n    });\n  }\n  return params;\n}\n/**\n * legend 配置\n * @param params\n */\nexport function legend(params) {\n  var chart = params.chart,\n    options = params.options;\n  var legend = options.legend,\n    seriesField = options.seriesField;\n  if (legend === false) {\n    chart.legend(false);\n  } else if (seriesField) {\n    chart.legend(seriesField, legend);\n  }\n  return params;\n}\n/**\n * coord 配置\n * @param params\n */\nfunction coordinate(params) {\n  var chart = params.chart,\n    options = params.options;\n  var radius = options.radius,\n    innerRadius = options.innerRadius,\n    startAngle = options.startAngle,\n    endAngle = options.endAngle;\n  chart.coordinate({\n    type: 'polar',\n    cfg: {\n      radius: radius,\n      innerRadius: innerRadius,\n      startAngle: startAngle,\n      endAngle: endAngle\n    }\n  });\n  return params;\n}\n/**\n * meta 配置\n * @param params\n */\nfunction meta(params) {\n  var _a;\n  var options = params.options;\n  var xAxis = options.xAxis,\n    yAxis = options.yAxis,\n    xField = options.xField,\n    yField = options.yField;\n  return flow(scale((_a = {}, _a[xField] = xAxis, _a[yField] = yAxis, _a)))(params);\n}\n/**\n * axis 配置\n * @param params\n */\nfunction axis(params) {\n  var chart = params.chart,\n    options = params.options;\n  var xAxis = options.xAxis,\n    yAxis = options.yAxis,\n    xField = options.xField,\n    yField = options.yField;\n  // 为 falsy 则是不显示轴\n  if (!xAxis) {\n    chart.axis(xField, false);\n  } else {\n    chart.axis(xField, xAxis);\n  }\n  if (!yAxis) {\n    chart.axis(yField, false);\n  } else {\n    chart.axis(yField, yAxis);\n  }\n  return params;\n}\n/**\n * 玫瑰图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params) {\n  // flow 的方式处理所有的配置到 G2 API\n  flow(pattern('sectorStyle'), geometry, meta, label, coordinate, axis, legend, tooltip, interaction, animation, theme, annotation(), state)(params);\n}","map":{"version":3,"mappings":"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","names":["filter","isArray","isObject","animation","annotation","interaction","pattern","scale","state","theme","tooltip","interval","deepAssign","findGeometry","flow","LEVEL","log","transformLabel","geometry","params","options","sectorStyle","color","chart","data","marginRatio","style","label","xField","fields","cfg","layout","offset","undefined","v","type","length","callback","WARN","legend","seriesField","coordinate","innerRadius","startAngle","endAngle","radius","meta","yAxis","yField","_a","xAxis","axis","adaptor"],"sources":["/home/iam/Documents/network/node_modules/@antv/g2plot/src/plots/rose/adaptor.ts"],"sourcesContent":["import { filter, isArray, isObject } from '@antv/util';\nimport { animation, annotation, interaction, pattern, scale, state, theme, tooltip } from '../../adaptor/common';\nimport { interval } from '../../adaptor/geometries';\nimport { Params } from '../../core/adaptor';\nimport { deepAssign, findGeometry, flow, LEVEL, log, transformLabel } from '../../utils';\nimport { RoseOptions } from './types';\n\n/**\n * geometry 配置处理\n * @param params\n */\nfunction geometry(params: Params<RoseOptions>): Params<RoseOptions> {\n  const { chart, options } = params;\n  const { data, sectorStyle, color } = options;\n\n  // 装载数据\n  chart.data(data);\n\n  flow(interval)(\n    deepAssign({}, params, {\n      options: {\n        marginRatio: 1,\n        interval: {\n          style: sectorStyle,\n          color,\n        },\n      },\n    })\n  );\n\n  return params;\n}\n\n/**\n * label 配置\n * @param params\n */\nfunction label(params: Params<RoseOptions>): Params<RoseOptions> {\n  const { chart, options } = params;\n  const { label, xField } = options;\n  const geometry = findGeometry(chart, 'interval');\n\n  // label 为 false 不显示 label\n  if (label === false) {\n    geometry.label(false);\n  } else if (isObject(label)) {\n    const { callback, fields, ...cfg } = label;\n    const { offset } = cfg;\n    let layout = cfg.layout;\n\n    // 当 label 在 shape 外部显示时，设置 'limit-in-shape' 会\n    // 造成 label 不显示。\n    if (offset === undefined || offset >= 0) {\n      layout = layout ? (isArray(layout) ? layout : [layout]) : [];\n      cfg.layout = filter(layout, (v) => v.type !== 'limit-in-shape');\n      cfg.layout.length || delete cfg.layout;\n    }\n\n    geometry.label({\n      fields: fields || [xField],\n      callback,\n      cfg: transformLabel(cfg),\n    });\n  } else {\n    log(LEVEL.WARN, label === null, 'the label option must be an Object.');\n    geometry.label({ fields: [xField] });\n  }\n\n  return params;\n}\n\n/**\n * legend 配置\n * @param params\n */\nexport function legend(params: Params<RoseOptions>): Params<RoseOptions> {\n  const { chart, options } = params;\n  const { legend, seriesField } = options;\n\n  if (legend === false) {\n    chart.legend(false);\n  } else if (seriesField) {\n    chart.legend(seriesField, legend);\n  }\n\n  return params;\n}\n\n/**\n * coord 配置\n * @param params\n */\nfunction coordinate(params: Params<RoseOptions>): Params<RoseOptions> {\n  const { chart, options } = params;\n  const { radius, innerRadius, startAngle, endAngle } = options;\n\n  chart.coordinate({\n    type: 'polar',\n    cfg: {\n      radius,\n      innerRadius,\n      startAngle,\n      endAngle,\n    },\n  });\n\n  return params;\n}\n\n/**\n * meta 配置\n * @param params\n */\nfunction meta(params: Params<RoseOptions>): Params<RoseOptions> {\n  const { options } = params;\n  const { xAxis, yAxis, xField, yField } = options;\n\n  return flow(\n    scale({\n      [xField]: xAxis,\n      [yField]: yAxis,\n    })\n  )(params);\n}\n\n/**\n * axis 配置\n * @param params\n */\nfunction axis(params: Params<RoseOptions>): Params<RoseOptions> {\n  const { chart, options } = params;\n  const { xAxis, yAxis, xField, yField } = options;\n\n  // 为 falsy 则是不显示轴\n  if (!xAxis) {\n    chart.axis(xField, false);\n  } else {\n    chart.axis(xField, xAxis);\n  }\n\n  if (!yAxis) {\n    chart.axis(yField, false);\n  } else {\n    chart.axis(yField, yAxis);\n  }\n\n  return params;\n}\n\n/**\n * 玫瑰图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<RoseOptions>) {\n  // flow 的方式处理所有的配置到 G2 API\n  flow(\n    pattern('sectorStyle'),\n    geometry,\n    meta,\n    label,\n    coordinate,\n    axis,\n    legend,\n    tooltip,\n    interaction,\n    animation,\n    theme,\n    annotation(),\n    state\n  )(params);\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}