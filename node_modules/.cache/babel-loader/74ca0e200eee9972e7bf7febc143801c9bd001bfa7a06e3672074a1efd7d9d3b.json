{"ast":null,"code":"var _jsxFileName = \"/home/iam/Documents/network/src/components/antd/network/multicast.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport ubusApi from 'service/api/ubus-api';\nimport React from 'react';\nimport { Table } from 'antd';\nimport { useTranslation } from \"react-i18next\";\nimport \"../../../translations/i18n\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Column,\n  ColumnGroup\n} = Table;\nexport const Multicast_table = () => {\n  _s();\n  const [data, setData] = React.useState();\n  const refreshData = async () => {\n    const data1 = await ubusApi.show_network_multicast();\n    setData(data1.mdb);\n  };\n  React.useEffect(() => {\n    refreshData();\n  }, []);\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(GetTable, {\n    haha: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }, this);\n};\n_s(Multicast_table, \"WZ2PO9A64oHRexE1CE+yX3ebuoA=\");\n_c = Multicast_table;\nexport const GetTable = props => {\n  _s2();\n  const {\n    t\n  } = useTranslation();\n  const {\n    haha\n  } = props;\n  const columns = [{\n    title: 'Vlans',\n    key: 'vlans',\n    dataIndex: 'vid'\n  }, {\n    title: 'Group',\n    key: 'group',\n    dataIndex: 'grp'\n  }, {\n    title: t('Ports'),\n    key: 'ports',\n    dataIndex: 'port'\n  }];\n  if (!haha) {\n    return /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      dataSource: haha,\n      loading: true,\n      style: {\n        minWidth: 400\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      dataSource: haha,\n      style: {\n        minWidth: 400\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n};\n_s2(GetTable, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n_c2 = GetTable;\nexport default Multicast_table;\nvar _c, _c2;\n$RefreshReg$(_c, \"Multicast_table\");\n$RefreshReg$(_c2, \"GetTable\");","map":{"version":3,"names":["ubusApi","React","Table","useTranslation","Column","ColumnGroup","Multicast_table","data","setData","useState","refreshData","data1","show_network_multicast","mdb","useEffect","console","log","GetTable","props","t","haha","columns","title","key","dataIndex","minWidth"],"sources":["/home/iam/Documents/network/src/components/antd/network/multicast.tsx"],"sourcesContent":["import ubusApi from 'service/api/ubus-api'\nimport React from 'react';\nimport { Space, Table, Tag } from 'antd';\nimport { useTranslation } from \"react-i18next\";\nimport \"../../../translations/i18n\";\n\nconst { Column, ColumnGroup } = Table;\n\nexport const Multicast_table = () => {\n  const [data, setData] = React.useState()\n  \n  const refreshData = async () => {\n      const data1 = await ubusApi.show_network_multicast()\n      setData(data1.mdb)\n  }\n  \n  React.useEffect(() => {\n    refreshData()},[])\n  console.log(data)\n  return (\n      <GetTable\n          haha={data}\n      />\n  )\n}    \n  \nexport const GetTable = (props: any) => {\n  const { t } = useTranslation();\n  const { haha } = props\n  const columns = [\n    { title: 'Vlans', key: 'vlans', dataIndex: 'vid' },\n    { title: 'Group', key: 'group', dataIndex: 'grp' },\n    { title: t('Ports'), key: 'ports', dataIndex: 'port' },\n  ]\n  if ( !haha ) {\n    return(\n      <Table columns={columns} dataSource={haha} loading style={{ minWidth: 400 }} /> \n    )\n  } else {\n    return(\n      <Table columns={columns} dataSource={haha} style={{ minWidth: 400 }} /> \n    )\n  }\n}\n\nexport default Multicast_table;"],"mappings":";;;AAAA,OAAOA,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAgBC,KAAK,QAAa,MAAM;AACxC,SAASC,cAAc,QAAQ,eAAe;AAC9C,OAAO,4BAA4B;AAAC;AAEpC,MAAM;EAAEC,MAAM;EAAEC;AAAY,CAAC,GAAGH,KAAK;AAErC,OAAO,MAAMI,eAAe,GAAG,MAAM;EAAA;EACnC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,KAAK,CAACQ,QAAQ,EAAE;EAExC,MAAMC,WAAW,GAAG,YAAY;IAC5B,MAAMC,KAAK,GAAG,MAAMX,OAAO,CAACY,sBAAsB,EAAE;IACpDJ,OAAO,CAACG,KAAK,CAACE,GAAG,CAAC;EACtB,CAAC;EAEDZ,KAAK,CAACa,SAAS,CAAC,MAAM;IACpBJ,WAAW,EAAE;EAAA,CAAC,EAAC,EAAE,CAAC;EACpBK,OAAO,CAACC,GAAG,CAACT,IAAI,CAAC;EACjB,oBACI,QAAC,QAAQ;IACL,IAAI,EAAEA;EAAK;IAAA;IAAA;IAAA;EAAA,QACb;AAER,CAAC;AAAA,GAhBYD,eAAe;AAAA,KAAfA,eAAe;AAkB5B,OAAO,MAAMW,QAAQ,GAAIC,KAAU,IAAK;EAAA;EACtC,MAAM;IAAEC;EAAE,CAAC,GAAGhB,cAAc,EAAE;EAC9B,MAAM;IAAEiB;EAAK,CAAC,GAAGF,KAAK;EACtB,MAAMG,OAAO,GAAG,CACd;IAAEC,KAAK,EAAE,OAAO;IAAEC,GAAG,EAAE,OAAO;IAAEC,SAAS,EAAE;EAAM,CAAC,EAClD;IAAEF,KAAK,EAAE,OAAO;IAAEC,GAAG,EAAE,OAAO;IAAEC,SAAS,EAAE;EAAM,CAAC,EAClD;IAAEF,KAAK,EAAEH,CAAC,CAAC,OAAO,CAAC;IAAEI,GAAG,EAAE,OAAO;IAAEC,SAAS,EAAE;EAAO,CAAC,CACvD;EACD,IAAK,CAACJ,IAAI,EAAG;IACX,oBACE,QAAC,KAAK;MAAC,OAAO,EAAEC,OAAQ;MAAC,UAAU,EAAED,IAAK;MAAC,OAAO;MAAC,KAAK,EAAE;QAAEK,QAAQ,EAAE;MAAI;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG;EAEnF,CAAC,MAAM;IACL,oBACE,QAAC,KAAK;MAAC,OAAO,EAAEJ,OAAQ;MAAC,UAAU,EAAED,IAAK;MAAC,KAAK,EAAE;QAAEK,QAAQ,EAAE;MAAI;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG;EAE3E;AACF,CAAC;AAAA,IAjBYR,QAAQ;EAAA,QACLd,cAAc;AAAA;AAAA,MADjBc,QAAQ;AAmBrB,eAAeX,eAAe;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}