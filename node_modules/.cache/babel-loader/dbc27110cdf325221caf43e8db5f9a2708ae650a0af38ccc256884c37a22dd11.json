{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport { animation, annotation, interaction, legend, scale, theme, tooltip } from '../../adaptor/common';\nimport { interval, point } from '../../adaptor/geometries';\nimport { pattern } from '../../adaptor/pattern';\nimport { deepAssign, findGeometry, flow, processIllegalData, transformLabel } from '../../utils';\nimport { getScaleMax, getStackedData } from './utils';\n/**\n * geometry 处理\n * @param params\n */\nfunction geometry(params) {\n  var chart = params.chart,\n    options = params.options;\n  var style = options.barStyle,\n    color = options.color,\n    tooltip = options.tooltip,\n    colorField = options.colorField,\n    type = options.type,\n    xField = options.xField,\n    yField = options.yField,\n    data = options.data;\n  // 处理不合法的数据\n  var processData = processIllegalData(data, yField);\n  chart.data(processData);\n  var p = deepAssign({}, params, {\n    options: {\n      tooltip: tooltip,\n      seriesField: colorField,\n      interval: {\n        style: style,\n        color: color,\n        shape: type === 'line' ? 'line' : 'intervel'\n      },\n      // 柱子的一些样式设置：柱子最小宽度、柱子最大宽度、柱子背景\n      minColumnWidth: options.minBarWidth,\n      maxColumnWidth: options.maxBarWidth,\n      columnBackground: options.barBackground\n    }\n  });\n  interval(p);\n  if (type === 'line') {\n    point({\n      chart: chart,\n      options: {\n        xField: xField,\n        yField: yField,\n        seriesField: colorField,\n        point: {\n          shape: 'circle',\n          color: color\n        }\n      }\n    });\n  }\n  return params;\n}\n/**\n * meta 配置\n * @param params\n */\nexport function meta(params) {\n  var _a;\n  var options = params.options;\n  var yField = options.yField,\n    xField = options.xField,\n    data = options.data,\n    isStack = options.isStack,\n    isGroup = options.isGroup,\n    colorField = options.colorField,\n    maxAngle = options.maxAngle;\n  var actualData = isStack && !isGroup && colorField ? getStackedData(data, xField, yField) : data;\n  var processData = processIllegalData(actualData, yField);\n  return flow(scale((_a = {}, _a[yField] = {\n    min: 0,\n    max: getScaleMax(maxAngle, yField, processData)\n  }, _a)))(params);\n}\n/**\n * coordinate 配置\n * @param params\n */\nfunction coordinate(params) {\n  var chart = params.chart,\n    options = params.options;\n  var radius = options.radius,\n    innerRadius = options.innerRadius,\n    startAngle = options.startAngle,\n    endAngle = options.endAngle;\n  chart.coordinate({\n    type: 'polar',\n    cfg: {\n      radius: radius,\n      innerRadius: innerRadius,\n      startAngle: startAngle,\n      endAngle: endAngle\n    }\n  }).transpose();\n  return params;\n}\n/**\n * axis 配置\n * @param params\n */\nexport function axis(params) {\n  var chart = params.chart,\n    options = params.options;\n  var xField = options.xField,\n    xAxis = options.xAxis;\n  chart.axis(xField, xAxis);\n  return params;\n}\n/**\n * 数据标签\n * @param params\n */\nfunction label(params) {\n  var chart = params.chart,\n    options = params.options;\n  var label = options.label,\n    yField = options.yField;\n  var intervalGeometry = findGeometry(chart, 'interval');\n  // label 为 false, 空 则不显示 label\n  if (!label) {\n    intervalGeometry.label(false);\n  } else {\n    var callback = label.callback,\n      cfg = __rest(label, [\"callback\"]);\n    intervalGeometry.label({\n      fields: [yField],\n      callback: callback,\n      cfg: __assign(__assign({}, transformLabel(cfg)), {\n        type: 'polar'\n      })\n    });\n  }\n  return params;\n}\n/**\n * 图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params) {\n  return flow(pattern('barStyle'), geometry, meta, axis, coordinate, interaction, animation, theme, tooltip, legend, annotation(), label)(params);\n}","map":{"version":3,"mappings":"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","names":["animation","annotation","interaction","legend","scale","theme","tooltip","interval","point","pattern","deepAssign","findGeometry","flow","processIllegalData","transformLabel","getScaleMax","getStackedData","geometry","params","options","style","color","colorField","type","xField","yField","data","processData","chart","p","seriesField","shape","minColumnWidth","minBarWidth","maxColumnWidth","maxBarWidth","columnBackground","barBackground","meta","isStack","isGroup","maxAngle","actualData","_a","min","max","coordinate","innerRadius","startAngle","endAngle","cfg","radius","transpose","axis","xAxis","label","intervalGeometry","fields","callback","adaptor"],"sources":["/home/iam/Documents/network/node_modules/@antv/g2plot/src/plots/radial-bar/adaptor.ts"],"sourcesContent":["import { animation, annotation, interaction, legend, scale, theme, tooltip } from '../../adaptor/common';\nimport { interval, point } from '../../adaptor/geometries';\nimport { pattern } from '../../adaptor/pattern';\nimport { Params } from '../../core/adaptor';\nimport { deepAssign, findGeometry, flow, processIllegalData, transformLabel } from '../../utils';\nimport { RadialBarOptions } from './types';\nimport { getScaleMax, getStackedData } from './utils';\n\n/**\n * geometry 处理\n * @param params\n */\nfunction geometry(params: Params<RadialBarOptions>): Params<RadialBarOptions> {\n  const { chart, options } = params;\n  const { barStyle: style, color, tooltip, colorField, type, xField, yField, data } = options;\n\n  // 处理不合法的数据\n  const processData = processIllegalData(data, yField);\n  chart.data(processData);\n\n  const p = deepAssign({}, params, {\n    options: {\n      tooltip,\n      seriesField: colorField,\n      interval: {\n        style,\n        color,\n        shape: type === 'line' ? 'line' : 'intervel',\n      },\n      // 柱子的一些样式设置：柱子最小宽度、柱子最大宽度、柱子背景\n      minColumnWidth: options.minBarWidth,\n      maxColumnWidth: options.maxBarWidth,\n      columnBackground: options.barBackground,\n    },\n  });\n  interval(p);\n  if (type === 'line') {\n    point({\n      chart,\n      options: { xField, yField, seriesField: colorField, point: { shape: 'circle', color } },\n    });\n  }\n  return params;\n}\n\n/**\n * meta 配置\n * @param params\n */\nexport function meta(params: Params<RadialBarOptions>): Params<RadialBarOptions> {\n  const { options } = params;\n  const { yField, xField, data, isStack, isGroup, colorField, maxAngle } = options;\n\n  const actualData = isStack && !isGroup && colorField ? getStackedData(data, xField, yField) : data;\n  const processData = processIllegalData(actualData, yField);\n  return flow(\n    scale({\n      [yField]: {\n        min: 0,\n        max: getScaleMax(maxAngle, yField, processData),\n      },\n    })\n  )(params);\n}\n\n/**\n * coordinate 配置\n * @param params\n */\nfunction coordinate(params: Params<RadialBarOptions>): Params<RadialBarOptions> {\n  const { chart, options } = params;\n  const { radius, innerRadius, startAngle, endAngle } = options;\n\n  chart\n    .coordinate({\n      type: 'polar',\n      cfg: {\n        radius,\n        innerRadius,\n        startAngle,\n        endAngle,\n      },\n    })\n    .transpose();\n  return params;\n}\n\n/**\n * axis 配置\n * @param params\n */\nexport function axis(params: Params<RadialBarOptions>): Params<RadialBarOptions> {\n  const { chart, options } = params;\n  const { xField, xAxis } = options;\n  chart.axis(xField, xAxis);\n  return params;\n}\n\n/**\n * 数据标签\n * @param params\n */\nfunction label(params: Params<RadialBarOptions>): Params<RadialBarOptions> {\n  const { chart, options } = params;\n  const { label, yField } = options;\n\n  const intervalGeometry = findGeometry(chart, 'interval');\n\n  // label 为 false, 空 则不显示 label\n  if (!label) {\n    intervalGeometry.label(false);\n  } else {\n    const { callback, ...cfg } = label;\n    intervalGeometry.label({\n      fields: [yField],\n      callback,\n      cfg: {\n        ...transformLabel(cfg),\n        type: 'polar',\n      },\n    });\n  }\n\n  return params;\n}\n\n/**\n * 图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<RadialBarOptions>) {\n  return flow(\n    pattern('barStyle'),\n    geometry,\n    meta,\n    axis,\n    coordinate,\n    interaction,\n    animation,\n    theme,\n    tooltip,\n    legend,\n    annotation(),\n    label\n  )(params);\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}