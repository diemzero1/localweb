{"ast":null,"code":"var _jsxFileName = \"/home/iam/Documents/network/src/components/antd/internet/router/table.tsx\",\n  _s = $RefreshSig$();\nimport { Table } from 'antd';\nimport React from 'react';\nimport { useTranslation } from \"react-i18next\";\nimport \"../../../../translations/i18n\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Router2Table = props => {\n  // const { onEditItem, onDeleteItem, tableData, haha } = props\n  // const { t } = useTranslation()\n  // const abc = t('edit')\n  // const def = t('delete')\n  // const confirmDeleteGroup = async (group: any) => {\n  //   const { target, nexthop, metric, device ,id} = group\n  //   const deleteRoute = await ubusApi.config_network_static(\"del\", id, target, nexthop, metric, device)\n  //   const key = 'updatable';\n  //   message.loading({ content: t('loading'), key });\n  //   setTimeout(() => {\n  //     message.success({ content: t('success'), key, duration: 2 });\n  //   }, 1000);\n  //   setTimeout(() => {\n  //     window.location.reload()\n  //   }, 1500);\n  //   return onDeleteItem(group)\n  // }\n  // const columns = [\n  //   { title: t('dest_network'), key: 'target', dataIndex: 'target' }, \n  //   { title: 'GateWay', key: 'nexthop', dataIndex: 'nexthop' },\n  //   { title: 'Metric', key: 'metric', dataIndex: 'metric' },\n  //   { title: t('device'), key: 'device', dataIndex: 'device' },\n  //   {\n  //     title: t('action'),\n  //     key: 'action',\n  //     render: (_: string, record: any) => {\n  //         if (record.admin_id <= 0) {\n  //             return null\n  //         }\n  //         return (\n  //             <Space>\n  //                 <Button icon={<EditOutlined />} title={abc} onClick={() => onEditItem(record)} />\n  //                 <Popconfirm\n  //                     placement=\"top\"\n  //                     title={t('delete_cf')}\n  //                     onConfirm={() => confirmDeleteGroup(record)}\n  //                     okText={t('yes')}\n  //                     cancelText={t('no')}\n  //                 >\n  //                     <Button icon={<DeleteOutlined />} danger type=\"primary\" title={def} />\n  //                 </Popconfirm>\n  //             </Space>\n  //         )\n  //     },\n  // },\n  // ]\n  // if (!haha) {\n  //   return (\n  //     <Table columns={columns} dataSource={haha} loading style={{ minWidth: 400 }} />\n  //   )\n  // } else {\n  //   return (\n  //     <Table columns={columns} dataSource={haha} style={{ minWidth: 400 }} />\n  //   )\n  // }\n};\n_c = Router2Table;\nexport const RouterTable = props => {\n  _s();\n  const {\n    onEditItem,\n    onDeleteItem,\n    tableData,\n    hihi\n  } = props;\n  const {\n    t\n  } = useTranslation();\n  const abc = t('edit');\n  const def = t('delete');\n  const columns = [{\n    title: t('dest_network'),\n    key: 'destination',\n    dataIndex: 'destination'\n  }, {\n    title: 'GateWay',\n    key: 'gateway',\n    dataIndex: 'gateway'\n  }, {\n    title: 'Netmask',\n    key: 'genmask',\n    dataIndex: 'genmask'\n  }, {\n    title: t('Flags'),\n    key: 'flags',\n    dataIndex: 'flags'\n  }, {\n    title: 'Metric',\n    key: 'metric',\n    dataIndex: 'metric'\n  }, {\n    title: 'Ref',\n    key: 'ref',\n    dataIndex: 'ref'\n  }, {\n    title: 'Use',\n    key: 'use',\n    dataIndex: 'use'\n  }, {\n    title: t('device'),\n    key: 'iface',\n    dataIndex: 'iface'\n  }];\n  if (!hihi) {\n    return /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      dataSource: hihi,\n      loading: true,\n      style: {\n        minWidth: 400\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      dataSource: hihi,\n      style: {\n        minWidth: 400\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  }\n};\n_s(RouterTable, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n_c2 = RouterTable;\nvar _c, _c2;\n$RefreshReg$(_c, \"Router2Table\");\n$RefreshReg$(_c2, \"RouterTable\");","map":{"version":3,"names":["Table","React","useTranslation","Router2Table","props","RouterTable","onEditItem","onDeleteItem","tableData","hihi","t","abc","def","columns","title","key","dataIndex","minWidth"],"sources":["/home/iam/Documents/network/src/components/antd/internet/router/table.tsx"],"sourcesContent":["import { DeleteOutlined, EditOutlined } from '@ant-design/icons'\nimport { Table, Space, Button, Popconfirm, message } from 'antd'\nimport React from 'react'\nimport ubusApi from 'service/api/ubus-api'\nimport { useTranslation } from \"react-i18next\"\nimport \"../../../../translations/i18n\"\n\nexport const Router2Table = (props: any) => {\n  // const { onEditItem, onDeleteItem, tableData, haha } = props\n  // const { t } = useTranslation()\n  // const abc = t('edit')\n  // const def = t('delete')\n  // const confirmDeleteGroup = async (group: any) => {\n  //   const { target, nexthop, metric, device ,id} = group\n  //   const deleteRoute = await ubusApi.config_network_static(\"del\", id, target, nexthop, metric, device)\n  //   const key = 'updatable';\n  //   message.loading({ content: t('loading'), key });\n  //   setTimeout(() => {\n  //     message.success({ content: t('success'), key, duration: 2 });\n  //   }, 1000);\n  //   setTimeout(() => {\n  //     window.location.reload()\n  //   }, 1500);\n  //   return onDeleteItem(group)\n  // }\n  // const columns = [\n  //   { title: t('dest_network'), key: 'target', dataIndex: 'target' }, \n  //   { title: 'GateWay', key: 'nexthop', dataIndex: 'nexthop' },\n  //   { title: 'Metric', key: 'metric', dataIndex: 'metric' },\n  //   { title: t('device'), key: 'device', dataIndex: 'device' },\n  //   {\n  //     title: t('action'),\n  //     key: 'action',\n  //     render: (_: string, record: any) => {\n  //         if (record.admin_id <= 0) {\n  //             return null\n  //         }\n  //         return (\n  //             <Space>\n  //                 <Button icon={<EditOutlined />} title={abc} onClick={() => onEditItem(record)} />\n  //                 <Popconfirm\n  //                     placement=\"top\"\n  //                     title={t('delete_cf')}\n  //                     onConfirm={() => confirmDeleteGroup(record)}\n  //                     okText={t('yes')}\n  //                     cancelText={t('no')}\n  //                 >\n  //                     <Button icon={<DeleteOutlined />} danger type=\"primary\" title={def} />\n  //                 </Popconfirm>\n  //             </Space>\n  //         )\n  //     },\n  // },\n  // ]\n  // if (!haha) {\n  //   return (\n  //     <Table columns={columns} dataSource={haha} loading style={{ minWidth: 400 }} />\n  //   )\n  // } else {\n  //   return (\n  //     <Table columns={columns} dataSource={haha} style={{ minWidth: 400 }} />\n  //   )\n  // }\n}\n\nexport const RouterTable = (props: any) => {\n  const { onEditItem, onDeleteItem, tableData, hihi } = props\n  const { t } = useTranslation()\n  const abc = t('edit')\n  const def = t('delete')\n  const columns = [\n    { title: t('dest_network'), key: 'destination', dataIndex: 'destination' }, \n    { title: 'GateWay', key: 'gateway', dataIndex: 'gateway' },\n    { title: 'Netmask', key: 'genmask', dataIndex: 'genmask' },\n    { title: t('Flags'), key: 'flags', dataIndex: 'flags' },\n    { title: 'Metric', key: 'metric', dataIndex: 'metric' },\n    { title: 'Ref', key: 'ref', dataIndex: 'ref' },\n    { title: 'Use', key: 'use', dataIndex: 'use' },\n    { title: t('device'), key: 'iface', dataIndex: 'iface' },\n  ]\n  if (!hihi) {\n    return (\n      <Table columns={columns} dataSource={hihi} loading style={{ minWidth: 400 }} />\n    )\n  } else {\n    return (\n      <Table columns={columns} dataSource={hihi} style={{ minWidth: 400 }} />\n    )\n  }\n}\n"],"mappings":";;AACA,SAASA,KAAK,QAA4C,MAAM;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,cAAc,QAAQ,eAAe;AAC9C,OAAO,+BAA+B;AAAA;AAEtC,OAAO,MAAMC,YAAY,GAAIC,KAAU,IAAK;EAC1C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAAA,CACD;AAAA,KAxDYD,YAAY;AA0DzB,OAAO,MAAME,WAAW,GAAID,KAAU,IAAK;EAAA;EACzC,MAAM;IAAEE,UAAU;IAAEC,YAAY;IAAEC,SAAS;IAAEC;EAAK,CAAC,GAAGL,KAAK;EAC3D,MAAM;IAAEM;EAAE,CAAC,GAAGR,cAAc,EAAE;EAC9B,MAAMS,GAAG,GAAGD,CAAC,CAAC,MAAM,CAAC;EACrB,MAAME,GAAG,GAAGF,CAAC,CAAC,QAAQ,CAAC;EACvB,MAAMG,OAAO,GAAG,CACd;IAAEC,KAAK,EAAEJ,CAAC,CAAC,cAAc,CAAC;IAAEK,GAAG,EAAE,aAAa;IAAEC,SAAS,EAAE;EAAc,CAAC,EAC1E;IAAEF,KAAK,EAAE,SAAS;IAAEC,GAAG,EAAE,SAAS;IAAEC,SAAS,EAAE;EAAU,CAAC,EAC1D;IAAEF,KAAK,EAAE,SAAS;IAAEC,GAAG,EAAE,SAAS;IAAEC,SAAS,EAAE;EAAU,CAAC,EAC1D;IAAEF,KAAK,EAAEJ,CAAC,CAAC,OAAO,CAAC;IAAEK,GAAG,EAAE,OAAO;IAAEC,SAAS,EAAE;EAAQ,CAAC,EACvD;IAAEF,KAAK,EAAE,QAAQ;IAAEC,GAAG,EAAE,QAAQ;IAAEC,SAAS,EAAE;EAAS,CAAC,EACvD;IAAEF,KAAK,EAAE,KAAK;IAAEC,GAAG,EAAE,KAAK;IAAEC,SAAS,EAAE;EAAM,CAAC,EAC9C;IAAEF,KAAK,EAAE,KAAK;IAAEC,GAAG,EAAE,KAAK;IAAEC,SAAS,EAAE;EAAM,CAAC,EAC9C;IAAEF,KAAK,EAAEJ,CAAC,CAAC,QAAQ,CAAC;IAAEK,GAAG,EAAE,OAAO;IAAEC,SAAS,EAAE;EAAQ,CAAC,CACzD;EACD,IAAI,CAACP,IAAI,EAAE;IACT,oBACE,QAAC,KAAK;MAAC,OAAO,EAAEI,OAAQ;MAAC,UAAU,EAAEJ,IAAK;MAAC,OAAO;MAAC,KAAK,EAAE;QAAEQ,QAAQ,EAAE;MAAI;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG;EAEnF,CAAC,MAAM;IACL,oBACE,QAAC,KAAK;MAAC,OAAO,EAAEJ,OAAQ;MAAC,UAAU,EAAEJ,IAAK;MAAC,KAAK,EAAE;QAAEQ,QAAQ,EAAE;MAAI;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG;EAE3E;AACF,CAAC;AAAA,GAxBYZ,WAAW;EAAA,QAERH,cAAc;AAAA;AAAA,MAFjBG,WAAW;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}