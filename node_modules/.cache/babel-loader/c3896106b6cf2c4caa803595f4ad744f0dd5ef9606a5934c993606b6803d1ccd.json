{"ast":null,"code":"import { __assign, __extends, __read, __rest, __values } from \"tslib\";\nimport { contains, deepMix, each, get, isArray, isFunction, isNil, isString, keys, upperFirst, find, includes } from '@antv/util';\nimport { Annotation as AnnotationComponent } from '../../dependents';\nimport { DEFAULT_ANIMATE_CFG } from '../../animate/';\nimport { COMPONENT_TYPE, DIRECTION, GEOMETRY_LIFE_CIRCLE, LAYER, VIEW_LIFE_CIRCLE } from '../../constant';\nimport { getAngleByPoint, getDistanceToCenter } from '../../util/coordinate';\nimport { omit } from '../../util/helper';\nimport { getNormalizedValue } from '../../util/annotation';\nimport { Controller } from './base';\n/** 需要在图形绘制完成后才渲染的辅助组件类型列表 */\nvar ANNOTATIONS_AFTER_RENDER = ['regionFilter', 'shape'];\n/**\n * Annotation controller, 主要作用:\n * 1. 创建 Annotation: line、text、arc ...\n * 2. 生命周期: init、layout、render、clear、destroy\n */\nvar Annotation = /** @class */function (_super) {\n  __extends(Annotation, _super);\n  function Annotation(view) {\n    var _this = _super.call(this, view) || this;\n    /* 组件更新的 cache，组件配置 object : 组件 */\n    _this.cache = new Map();\n    _this.foregroundContainer = _this.view.getLayer(LAYER.FORE).addGroup();\n    _this.backgroundContainer = _this.view.getLayer(LAYER.BG).addGroup();\n    _this.option = [];\n    return _this;\n  }\n  Object.defineProperty(Annotation.prototype, \"name\", {\n    get: function get() {\n      return 'annotation';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Annotation.prototype.init = function () {};\n  /**\n   * 因为 annotation 需要依赖坐标系信息，所以 render 阶段为空方法，实际的创建逻辑都在 layout 中\n   */\n  Annotation.prototype.layout = function () {\n    this.update();\n  };\n  // 因为 Annotation 不参与布局，但是渲染的位置依赖于坐标系，所以可以将绘制阶段延迟到 layout() 进行\n  Annotation.prototype.render = function () {};\n  /**\n   * 更新\n   */\n  Annotation.prototype.update = function () {\n    var _this = this;\n    // 1. 先处理需要在图形渲染之后的辅助组件 需要在 Geometry 完成之后，拿到图形信息\n    this.onAfterRender(function () {\n      var updated = new Map();\n      // 先看是否有 regionFilter/shape 要更新\n      each(_this.option, function (option) {\n        if (includes(ANNOTATIONS_AFTER_RENDER, option.type)) {\n          var co = _this.updateOrCreate(option);\n          // 存储已经处理过的\n          if (co) {\n            updated.set(_this.getCacheKey(option), co);\n          }\n        }\n      });\n      // 处理完成之后，更新 cache\n      // 处理完成之后，销毁删除的\n      _this.cache = _this.syncCache(updated);\n    });\n    // 2. 处理非 regionFilter\n    var updateCache = new Map();\n    each(this.option, function (option) {\n      if (!includes(ANNOTATIONS_AFTER_RENDER, option.type)) {\n        var co = _this.updateOrCreate(option);\n        // 存储已经处理过的\n        if (co) {\n          updateCache.set(_this.getCacheKey(option), co);\n        }\n      }\n    });\n    this.cache = this.syncCache(updateCache);\n  };\n  /**\n   * 清空\n   * @param includeOption 是否清空 option 配置项\n   */\n  Annotation.prototype.clear = function (includeOption) {\n    if (includeOption === void 0) {\n      includeOption = false;\n    }\n    _super.prototype.clear.call(this);\n    this.clearComponents();\n    this.foregroundContainer.clear();\n    this.backgroundContainer.clear();\n    // clear all option\n    if (includeOption) {\n      this.option = [];\n    }\n  };\n  Annotation.prototype.destroy = function () {\n    this.clear(true);\n    this.foregroundContainer.remove(true);\n    this.backgroundContainer.remove(true);\n  };\n  /**\n   * 复写基类的方法\n   */\n  Annotation.prototype.getComponents = function () {\n    var co = [];\n    this.cache.forEach(function (value) {\n      co.push(value);\n    });\n    return co;\n  };\n  /**\n   * 清除当前的组件\n   */\n  Annotation.prototype.clearComponents = function () {\n    this.getComponents().forEach(function (co) {\n      co.component.destroy();\n    });\n    this.cache.clear();\n  };\n  /**\n   * region filter 比较特殊的渲染时机\n   * @param doWhat\n   */\n  Annotation.prototype.onAfterRender = function (doWhat) {\n    var done = false;\n    if (this.view.getOptions().animate) {\n      this.view.geometries.forEach(function (g) {\n        // 如果 geometry 开启，则监听\n        if (g.animateOption) {\n          g.once(GEOMETRY_LIFE_CIRCLE.AFTER_DRAW_ANIMATE, function () {\n            doWhat();\n          });\n          done = true;\n        }\n      });\n    }\n    if (!done) {\n      this.view.getRootView().once(VIEW_LIFE_CIRCLE.AFTER_RENDER, function () {\n        doWhat();\n      });\n    }\n  };\n  Annotation.prototype.createAnnotation = function (option) {\n    var type = option.type;\n    var Ctor = AnnotationComponent[upperFirst(type)];\n    if (Ctor) {\n      var theme = this.getAnnotationTheme(type);\n      var cfg = this.getAnnotationCfg(type, option, theme);\n      // 不创建\n      if (!cfg) {\n        return null;\n      }\n      var annotation = new Ctor(cfg);\n      return {\n        component: annotation,\n        layer: this.isTop(cfg) ? LAYER.FORE : LAYER.BG,\n        direction: DIRECTION.NONE,\n        type: COMPONENT_TYPE.ANNOTATION,\n        extra: option\n      };\n    }\n  };\n  // APIs for creating annotation component\n  Annotation.prototype.annotation = function (option) {\n    this.option.push(option);\n  };\n  /**\n   * 创建 Arc\n   * @param option\n   * @returns AnnotationController\n   */\n  Annotation.prototype.arc = function (option) {\n    this.annotation(__assign({\n      type: 'arc'\n    }, option));\n    return this;\n  };\n  /**\n   * 创建 image\n   * @param option\n   * @returns AnnotationController\n   */\n  Annotation.prototype.image = function (option) {\n    this.annotation(__assign({\n      type: 'image'\n    }, option));\n    return this;\n  };\n  /**\n   * 创建 Line\n   * @param option\n   * @returns AnnotationController\n   */\n  Annotation.prototype.line = function (option) {\n    this.annotation(__assign({\n      type: 'line'\n    }, option));\n    return this;\n  };\n  /**\n   * 创建 Region\n   * @param option\n   * @returns AnnotationController\n   */\n  Annotation.prototype.region = function (option) {\n    this.annotation(__assign({\n      type: 'region'\n    }, option));\n    return this;\n  };\n  /**\n   * 创建 Text\n   * @param option\n   * @returns AnnotationController\n   */\n  Annotation.prototype.text = function (option) {\n    this.annotation(__assign({\n      type: 'text'\n    }, option));\n    return this;\n  };\n  /**\n   * 创建 DataMarker\n   * @param option\n   * @returns AnnotationController\n   */\n  Annotation.prototype.dataMarker = function (option) {\n    this.annotation(__assign({\n      type: 'dataMarker'\n    }, option));\n    return this;\n  };\n  /**\n   * 创建 DataRegion\n   * @param option\n   * @returns AnnotationController\n   */\n  Annotation.prototype.dataRegion = function (option) {\n    this.annotation(__assign({\n      type: 'dataRegion'\n    }, option));\n  };\n  /**\n   * 创建 RegionFilter\n   * @param option\n   * @returns AnnotationController\n   */\n  Annotation.prototype.regionFilter = function (option) {\n    this.annotation(__assign({\n      type: 'regionFilter'\n    }, option));\n  };\n  /**\n   * 创建 ShapeAnnotation\n   * @param option\n   */\n  Annotation.prototype.shape = function (option) {\n    this.annotation(__assign({\n      type: 'shape'\n    }, option));\n  };\n  /**\n   * 创建 HtmlAnnotation\n   * @param option\n   */\n  Annotation.prototype.html = function (option) {\n    this.annotation(__assign({\n      type: 'html'\n    }, option));\n  };\n  // end API\n  /**\n   * parse the point position to [x, y]\n   * @param p Position\n   * @returns { x, y }\n   */\n  Annotation.prototype.parsePosition = function (p) {\n    var e_1, _a;\n    var xScale = this.view.getXScale();\n    // 转成 object\n    var yScales = this.view.getScalesByDim('y');\n    var position = isFunction(p) ? p.call(null, xScale, yScales) : p;\n    var x = 0;\n    var y = 0;\n    // 入参是 [24, 24] 这类时\n    if (isArray(position)) {\n      var _b = __read(position, 2),\n        xPos = _b[0],\n        yPos = _b[1];\n      // 如果数据格式是 ['50%', '50%'] 的格式\n      // fix: 原始数据中可能会包含 'xxx5%xxx' 这样的数据，需要判断下 https://github.com/antvis/f2/issues/590\n      // @ts-ignore\n      if (isString(xPos) && xPos.indexOf('%') !== -1 && !isNaN(xPos.slice(0, -1))) {\n        return this.parsePercentPosition(position);\n      }\n      x = getNormalizedValue(xPos, xScale);\n      y = getNormalizedValue(yPos, Object.values(yScales)[0]);\n    } else if (!isNil(position)) {\n      try {\n        // 入参是 object 结构，数据点\n        for (var _c = __values(keys(position)), _d = _c.next(); !_d.done; _d = _c.next()) {\n          var key = _d.value;\n          var value = position[key];\n          if (key === xScale.field) {\n            x = getNormalizedValue(value, xScale);\n          }\n          if (yScales[key]) {\n            y = getNormalizedValue(value, yScales[key]);\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n    if (isNaN(x) || isNaN(y)) {\n      return null;\n    }\n    return this.view.getCoordinate().convert({\n      x: x,\n      y: y\n    });\n  };\n  /**\n   * parse all the points between start and end\n   * @param start\n   * @param end\n   * @return Point[]\n   */\n  Annotation.prototype.getRegionPoints = function (start, end) {\n    var _this = this;\n    var xScale = this.view.getXScale();\n    var yScales = this.view.getScalesByDim('y');\n    var yScale = Object.values(yScales)[0];\n    var xField = xScale.field;\n    var viewData = this.view.getData();\n    var startXValue = isArray(start) ? start[0] : start[xField];\n    var endXValue = isArray(end) ? end[0] : end[xField];\n    var arr = [];\n    var startIndex;\n    each(viewData, function (item, idx) {\n      if (item[xField] === startXValue) {\n        startIndex = idx;\n      }\n      if (idx >= startIndex) {\n        var point = _this.parsePosition([item[xField], item[yScale.field]]);\n        if (point) {\n          arr.push(point);\n        }\n      }\n      if (item[xField] === endXValue) {\n        return false;\n      }\n    });\n    return arr;\n  };\n  /**\n   * parse percent position\n   * @param position\n   */\n  Annotation.prototype.parsePercentPosition = function (position) {\n    var xPercent = parseFloat(position[0]) / 100;\n    var yPercent = parseFloat(position[1]) / 100;\n    var coordinate = this.view.getCoordinate();\n    var start = coordinate.start,\n      end = coordinate.end;\n    var topLeft = {\n      x: Math.min(start.x, end.x),\n      y: Math.min(start.y, end.y)\n    };\n    var x = coordinate.getWidth() * xPercent + topLeft.x;\n    var y = coordinate.getHeight() * yPercent + topLeft.y;\n    return {\n      x: x,\n      y: y\n    };\n  };\n  /**\n   * get coordinate bbox\n   */\n  Annotation.prototype.getCoordinateBBox = function () {\n    var coordinate = this.view.getCoordinate();\n    var start = coordinate.start,\n      end = coordinate.end;\n    var width = coordinate.getWidth();\n    var height = coordinate.getHeight();\n    var topLeft = {\n      x: Math.min(start.x, end.x),\n      y: Math.min(start.y, end.y)\n    };\n    return {\n      x: topLeft.x,\n      y: topLeft.y,\n      minX: topLeft.x,\n      minY: topLeft.y,\n      maxX: topLeft.x + width,\n      maxY: topLeft.y + height,\n      width: width,\n      height: height\n    };\n  };\n  /**\n   * get annotation component config by different type\n   * @param type\n   * @param option 用户的配置\n   * @param theme\n   */\n  Annotation.prototype.getAnnotationCfg = function (type, option, theme) {\n    var _this = this;\n    var coordinate = this.view.getCoordinate();\n    var canvas = this.view.getCanvas();\n    var o = {};\n    if (isNil(option)) {\n      return null;\n    }\n    var start = option.start,\n      end = option.end,\n      position = option.position;\n    var sp = this.parsePosition(start);\n    var ep = this.parsePosition(end);\n    var textPoint = this.parsePosition(position);\n    if (['arc', 'image', 'line', 'region', 'regionFilter'].includes(type) && (!sp || !ep)) {\n      return null;\n    } else if (['text', 'dataMarker', 'html'].includes(type) && !textPoint) {\n      return null;\n    }\n    if (type === 'arc') {\n      var _a = option,\n        start_1 = _a.start,\n        end_1 = _a.end,\n        rest = __rest(_a, [\"start\", \"end\"]);\n      var startAngle = getAngleByPoint(coordinate, sp);\n      var endAngle = getAngleByPoint(coordinate, ep);\n      if (startAngle > endAngle) {\n        endAngle = Math.PI * 2 + endAngle;\n      }\n      o = __assign(__assign({}, rest), {\n        center: coordinate.getCenter(),\n        radius: getDistanceToCenter(coordinate, sp),\n        startAngle: startAngle,\n        endAngle: endAngle\n      });\n    } else if (type === 'image') {\n      var _b = option,\n        start_2 = _b.start,\n        end_2 = _b.end,\n        rest = __rest(_b, [\"start\", \"end\"]);\n      o = __assign(__assign({}, rest), {\n        start: sp,\n        end: ep,\n        src: option.src\n      });\n    } else if (type === 'line') {\n      var _c = option,\n        start_3 = _c.start,\n        end_3 = _c.end,\n        rest = __rest(_c, [\"start\", \"end\"]);\n      o = __assign(__assign({}, rest), {\n        start: sp,\n        end: ep,\n        text: get(option, 'text', null)\n      });\n    } else if (type === 'region') {\n      var _d = option,\n        start_4 = _d.start,\n        end_4 = _d.end,\n        rest = __rest(_d, [\"start\", \"end\"]);\n      o = __assign(__assign({}, rest), {\n        start: sp,\n        end: ep\n      });\n    } else if (type === 'text') {\n      var filteredData = this.view.getData();\n      var _e = option,\n        position_1 = _e.position,\n        content = _e.content,\n        rest = __rest(_e, [\"position\", \"content\"]);\n      var textContent = content;\n      if (isFunction(content)) {\n        textContent = content(filteredData);\n      }\n      o = __assign(__assign(__assign({}, textPoint), rest), {\n        content: textContent\n      });\n    } else if (type === 'dataMarker') {\n      var _f = option,\n        position_2 = _f.position,\n        point = _f.point,\n        line = _f.line,\n        text = _f.text,\n        autoAdjust = _f.autoAdjust,\n        direction = _f.direction,\n        rest = __rest(_f, [\"position\", \"point\", \"line\", \"text\", \"autoAdjust\", \"direction\"]);\n      o = __assign(__assign(__assign({}, rest), textPoint), {\n        coordinateBBox: this.getCoordinateBBox(),\n        point: point,\n        line: line,\n        text: text,\n        autoAdjust: autoAdjust,\n        direction: direction\n      });\n    } else if (type === 'dataRegion') {\n      var _g = option,\n        start_5 = _g.start,\n        end_5 = _g.end,\n        region = _g.region,\n        text = _g.text,\n        lineLength = _g.lineLength,\n        rest = __rest(_g, [\"start\", \"end\", \"region\", \"text\", \"lineLength\"]);\n      o = __assign(__assign({}, rest), {\n        points: this.getRegionPoints(start_5, end_5),\n        region: region,\n        text: text,\n        lineLength: lineLength\n      });\n    } else if (type === 'regionFilter') {\n      var _h = option,\n        start_6 = _h.start,\n        end_6 = _h.end,\n        apply_1 = _h.apply,\n        color = _h.color,\n        rest = __rest(_h, [\"start\", \"end\", \"apply\", \"color\"]);\n      var geometries = this.view.geometries;\n      var shapes_1 = [];\n      var addShapes_1 = function addShapes_1(item) {\n        if (!item) {\n          return;\n        }\n        if (item.isGroup()) {\n          item.getChildren().forEach(function (child) {\n            return addShapes_1(child);\n          });\n        } else {\n          shapes_1.push(item);\n        }\n      };\n      each(geometries, function (geom) {\n        if (apply_1) {\n          if (contains(apply_1, geom.type)) {\n            each(geom.elements, function (elem) {\n              addShapes_1(elem.shape);\n            });\n          }\n        } else {\n          each(geom.elements, function (elem) {\n            addShapes_1(elem.shape);\n          });\n        }\n      });\n      o = __assign(__assign({}, rest), {\n        color: color,\n        shapes: shapes_1,\n        start: sp,\n        end: ep\n      });\n    } else if (type === 'shape') {\n      var _j = option,\n        render_1 = _j.render,\n        restOptions = __rest(_j, [\"render\"]);\n      var wrappedRender = function wrappedRender(container) {\n        if (isFunction(option.render)) {\n          return render_1(container, _this.view, {\n            parsePosition: _this.parsePosition.bind(_this)\n          });\n        }\n      };\n      o = __assign(__assign({}, restOptions), {\n        render: wrappedRender\n      });\n    } else if (type === 'html') {\n      var _k = option,\n        html_1 = _k.html,\n        position_3 = _k.position,\n        restOptions = __rest(_k, [\"html\", \"position\"]);\n      var wrappedHtml = function wrappedHtml(container) {\n        if (isFunction(html_1)) {\n          return html_1(container, _this.view);\n        }\n        return html_1;\n      };\n      o = __assign(__assign(__assign({}, restOptions), textPoint), {\n        // html 组件需要指定 parent\n        parent: canvas.get('el').parentNode,\n        html: wrappedHtml\n      });\n    }\n    // 合并主题，用户配置优先级高于默认主题\n    var cfg = deepMix({}, theme, __assign(__assign({}, o), {\n      top: option.top,\n      style: option.style,\n      offsetX: option.offsetX,\n      offsetY: option.offsetY\n    }));\n    if (type !== 'html') {\n      // html 类型不使用 G container\n      cfg.container = this.getComponentContainer(cfg);\n    }\n    cfg.animate = this.view.getOptions().animate && cfg.animate && get(option, 'animate', cfg.animate); // 如果 view 关闭动画，则不执行\n    cfg.animateOption = deepMix({}, DEFAULT_ANIMATE_CFG, cfg.animateOption, option.animateOption);\n    return cfg;\n  };\n  /**\n   * is annotation render on top\n   * @param option\n   * @return whethe on top\n   */\n  Annotation.prototype.isTop = function (option) {\n    return get(option, 'top', true);\n  };\n  /**\n   * get the container by option.top\n   * default is on top\n   * @param option\n   * @returns the container\n   */\n  Annotation.prototype.getComponentContainer = function (option) {\n    return this.isTop(option) ? this.foregroundContainer : this.backgroundContainer;\n  };\n  Annotation.prototype.getAnnotationTheme = function (type) {\n    return get(this.view.getTheme(), ['components', 'annotation', type], {});\n  };\n  /**\n   * 创建或者更新 annotation\n   * @param option\n   */\n  Annotation.prototype.updateOrCreate = function (option) {\n    // 拿到缓存的内容\n    var co = this.cache.get(this.getCacheKey(option));\n    // 存在则更新，不存在在创建\n    if (co) {\n      var type = option.type;\n      var theme = this.getAnnotationTheme(type);\n      var cfg = this.getAnnotationCfg(type, option, theme);\n      // 忽略掉一些配置\n      if (cfg) {\n        omit(cfg, ['container']);\n      }\n      co.component.update(__assign(__assign({}, cfg || {}), {\n        visible: !!cfg\n      }));\n      // 对于 regionFilter/shape，因为生命周期的原因，需要额外 render\n      if (includes(ANNOTATIONS_AFTER_RENDER, option.type)) {\n        co.component.render();\n      }\n    } else {\n      // 不存在，创建\n      co = this.createAnnotation(option);\n      if (co) {\n        co.component.init();\n        // Note：regionFilter/shape 特殊处理，regionFilter/shape 需要取到 Geometry 中的 Shape，需要在 view render 之后处理\n        // 其他组件使用外层的统一 render 逻辑\n        if (includes(ANNOTATIONS_AFTER_RENDER, option.type)) {\n          co.component.render();\n        }\n      }\n    }\n    return co;\n  };\n  /**\n   * 更新缓存，以及销毁组件\n   * @param updated 更新或者创建的组件\n   */\n  Annotation.prototype.syncCache = function (updated) {\n    var _this = this;\n    var newCache = new Map(this.cache); // clone 一份\n    // 将 update 更新到 cache\n    updated.forEach(function (co, key) {\n      newCache.set(key, co);\n    });\n    // 另外和 options 进行对比，删除\n    newCache.forEach(function (co, key) {\n      // option 中已经找不到，那么就是删除的\n      if (!find(_this.option, function (option) {\n        return key === _this.getCacheKey(option);\n      })) {\n        co.component.destroy();\n        newCache.delete(key);\n      }\n    });\n    return newCache;\n  };\n  /**\n   * 获得缓存组件的 key\n   * @param option\n   */\n  Annotation.prototype.getCacheKey = function (option) {\n    // 如果存在 id，则使用 id string，否则直接使用 option 引用作为 key\n    return option;\n    // 后续扩展 id 用\n    // const id = get(option, 'id');\n    // return id ? id : option;\n  };\n\n  return Annotation;\n}(Controller);\nexport default Annotation;","map":{"version":3,"mappings":"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","names":["contains","deepMix","each","get","isArray","isFunction","isNil","isString","keys","upperFirst","find","includes","Annotation","AnnotationComponent","DEFAULT_ANIMATE_CFG","COMPONENT_TYPE","DIRECTION","GEOMETRY_LIFE_CIRCLE","LAYER","VIEW_LIFE_CIRCLE","getAngleByPoint","getDistanceToCenter","omit","getNormalizedValue","Controller","ANNOTATIONS_AFTER_RENDER","__extends","view","_super","_this","Map","foregroundContainer","getLayer","FORE","addGroup","backgroundContainer","BG","option","Object","update","onAfterRender","updated","type","co","updateOrCreate","set","getCacheKey","cache","syncCache","updateCache","includeOption","clear","clearComponents","remove","forEach","value","push","getComponents","component","destroy","doWhat","done","getOptions","animate","geometries","g","animateOption","once","AFTER_DRAW_ANIMATE","getRootView","AFTER_RENDER","Ctor","theme","getAnnotationTheme","cfg","getAnnotationCfg","annotation","layer","isTop","direction","NONE","ANNOTATION","extra","p","xScale","getXScale","yScales","getScalesByDim","position","call","x","y","xPos","yPos","indexOf","isNaN","slice","parsePercentPosition","values","key","field","getCoordinate","convert","start","end","yScale","xField","viewData","getData","startXValue","endXValue","arr","startIndex","item","idx","point","parsePosition","xPercent","parseFloat","yPercent","coordinate","topLeft","Math","min","getWidth","getHeight","width","height","minX","minY","maxX","maxY","canvas","getCanvas","o","sp","ep","textPoint","_a","start_1","end_1","rest","startAngle","endAngle","PI","center","getCenter","radius","_b","start_2","end_2","src","_c","start_3","end_3","text","_d","start_4","end_4","filteredData","_e","position_1","content","textContent","_f","position_2","line","autoAdjust","coordinateBBox","getCoordinateBBox","_g","start_5","end_5","region","lineLength","points","getRegionPoints","_h","start_6","end_6","apply_1","color","shapes_1","addShapes_1","isGroup","getChildren","child","geom","elements","elem","shape","shapes","_j","render_1","restOptions","wrappedRender","container","render","bind","_k","html_1","position_3","wrappedHtml","parent","parentNode","html","top","style","offsetX","offsetY","getComponentContainer","getTheme","visible","createAnnotation","init","newCache","delete"],"sources":["/home/iam/Documents/LocalWeb-master/node_modules/@antv/g2/src/chart/controller/annotation.ts"],"sourcesContent":["import {\n  contains,\n  deepMix,\n  each,\n  get,\n  isArray,\n  isFunction,\n  isNil,\n  isString,\n  keys,\n  upperFirst,\n  find,\n  includes,\n} from '@antv/util';\nimport { Annotation as AnnotationComponent, IElement, IGroup } from '../../dependents';\nimport {\n  AnnotationBaseOption as BaseOption,\n  AnnotationPosition as Position,\n  ArcOption,\n  ComponentOption,\n  ShapeAnnotationOption,\n  Data,\n  DataMarkerOption,\n  DataRegionOption,\n  Datum,\n  HtmlAnnotationOption,\n  ImageOption,\n  LineOption,\n  Point,\n  RegionFilterOption,\n  RegionOption,\n  RegionPositionBaseOption,\n  TextOption,\n} from '../../interface';\n\nimport { DEFAULT_ANIMATE_CFG } from '../../animate/';\nimport { COMPONENT_TYPE, DIRECTION, GEOMETRY_LIFE_CIRCLE, LAYER, VIEW_LIFE_CIRCLE } from '../../constant';\n\nimport Geometry from '../../geometry/base';\nimport Element from '../../geometry/element';\nimport { getAngleByPoint, getDistanceToCenter } from '../../util/coordinate';\nimport { omit } from '../../util/helper';\nimport { getNormalizedValue } from '../../util/annotation';\nimport View from '../view';\nimport { Controller } from './base';\nimport { Scale } from '@antv/attr';\n\n/** 需要在图形绘制完成后才渲染的辅助组件类型列表 */\nconst ANNOTATIONS_AFTER_RENDER = ['regionFilter', 'shape'];\n\n/**\n * Annotation controller, 主要作用:\n * 1. 创建 Annotation: line、text、arc ...\n * 2. 生命周期: init、layout、render、clear、destroy\n */\nexport default class Annotation extends Controller<BaseOption[]> {\n  private foregroundContainer: IGroup;\n  private backgroundContainer: IGroup;\n\n  /* 组件更新的 cache，组件配置 object : 组件 */\n  private cache = new Map<BaseOption, ComponentOption>();\n\n  constructor(view: View) {\n    super(view);\n\n    this.foregroundContainer = this.view.getLayer(LAYER.FORE).addGroup();\n    this.backgroundContainer = this.view.getLayer(LAYER.BG).addGroup();\n\n    this.option = [];\n  }\n\n  public get name(): string {\n    return 'annotation';\n  }\n\n  public init() { }\n\n  /**\n   * 因为 annotation 需要依赖坐标系信息，所以 render 阶段为空方法，实际的创建逻辑都在 layout 中\n   */\n  public layout() {\n    this.update();\n  }\n\n  // 因为 Annotation 不参与布局，但是渲染的位置依赖于坐标系，所以可以将绘制阶段延迟到 layout() 进行\n  public render() { }\n\n  /**\n   * 更新\n   */\n  public update() {\n    // 1. 先处理需要在图形渲染之后的辅助组件 需要在 Geometry 完成之后，拿到图形信息\n    this.onAfterRender(() => {\n      const updated = new Map<BaseOption, ComponentOption>();\n      // 先看是否有 regionFilter/shape 要更新\n      each(this.option, (option: BaseOption) => {\n        if (includes(ANNOTATIONS_AFTER_RENDER, option.type)) {\n          const co = this.updateOrCreate(option);\n          // 存储已经处理过的\n          if (co) {\n            updated.set(this.getCacheKey(option), co);\n          }\n        }\n      });\n\n      // 处理完成之后，更新 cache\n      // 处理完成之后，销毁删除的\n      this.cache = this.syncCache(updated);\n    });\n\n    // 2. 处理非 regionFilter\n    const updateCache = new Map<BaseOption, ComponentOption>();\n    each(this.option, (option: BaseOption) => {\n      if (!includes(ANNOTATIONS_AFTER_RENDER, option.type)) {\n        const co = this.updateOrCreate(option);\n        // 存储已经处理过的\n        if (co) {\n          updateCache.set(this.getCacheKey(option), co);\n        }\n      }\n    });\n    this.cache = this.syncCache(updateCache);\n  }\n\n  /**\n   * 清空\n   * @param includeOption 是否清空 option 配置项\n   */\n  public clear(includeOption = false) {\n    super.clear();\n\n    this.clearComponents();\n    this.foregroundContainer.clear();\n    this.backgroundContainer.clear();\n\n    // clear all option\n    if (includeOption) {\n      this.option = [];\n    }\n  }\n\n  public destroy() {\n    this.clear(true);\n\n    this.foregroundContainer.remove(true);\n    this.backgroundContainer.remove(true);\n  }\n\n  /**\n   * 复写基类的方法\n   */\n  public getComponents(): ComponentOption[] {\n    const co = [];\n\n    this.cache.forEach((value: ComponentOption) => {\n      co.push(value);\n    });\n\n    return co;\n  }\n\n  /**\n   * 清除当前的组件\n   */\n  private clearComponents() {\n    this.getComponents().forEach((co) => {\n      co.component.destroy();\n    });\n\n    this.cache.clear();\n  }\n\n  /**\n   * region filter 比较特殊的渲染时机\n   * @param doWhat\n   */\n  private onAfterRender(doWhat: () => void) {\n    let done = false;\n    if (this.view.getOptions().animate) {\n      this.view.geometries.forEach((g: Geometry) => {\n        // 如果 geometry 开启，则监听\n        if (g.animateOption) {\n          g.once(GEOMETRY_LIFE_CIRCLE.AFTER_DRAW_ANIMATE, () => {\n          doWhat();\n          });\n          done = true;\n        }\n      });\n    }\n\n    if (!done) {\n      this.view.getRootView().once(VIEW_LIFE_CIRCLE.AFTER_RENDER, () => {\n        doWhat();\n      });\n    }\n  }\n\n  private createAnnotation(option: BaseOption) {\n    const { type } = option;\n\n    const Ctor = AnnotationComponent[upperFirst(type)];\n    if (Ctor) {\n      const theme = this.getAnnotationTheme(type);\n      const cfg = this.getAnnotationCfg(type, option, theme);\n      // 不创建\n      if (!cfg) {\n        return null;\n      }\n      const annotation = new Ctor(cfg);\n\n      return {\n        component: annotation,\n        layer: this.isTop(cfg) ? LAYER.FORE : LAYER.BG,\n        direction: DIRECTION.NONE,\n        type: COMPONENT_TYPE.ANNOTATION,\n        extra: option,\n      };\n    }\n  }\n\n  // APIs for creating annotation component\n  public annotation(option: any) {\n    this.option.push(option);\n  }\n\n  /**\n   * 创建 Arc\n   * @param option\n   * @returns AnnotationController\n   */\n  public arc(option: ArcOption) {\n    this.annotation({\n      type: 'arc',\n      ...option,\n    });\n\n    return this;\n  }\n\n  /**\n   * 创建 image\n   * @param option\n   * @returns AnnotationController\n   */\n  public image(option: ImageOption) {\n    this.annotation({\n      type: 'image',\n      ...option,\n    });\n\n    return this;\n  }\n\n  /**\n   * 创建 Line\n   * @param option\n   * @returns AnnotationController\n   */\n  public line(option: LineOption) {\n    this.annotation({\n      type: 'line',\n      ...option,\n    });\n\n    return this;\n  }\n\n  /**\n   * 创建 Region\n   * @param option\n   * @returns AnnotationController\n   */\n  public region(option: RegionOption) {\n    this.annotation({\n      type: 'region',\n      ...option,\n    });\n\n    return this;\n  }\n\n  /**\n   * 创建 Text\n   * @param option\n   * @returns AnnotationController\n   */\n  public text(option: TextOption) {\n    this.annotation({\n      type: 'text',\n      ...option,\n    });\n\n    return this;\n  }\n\n  /**\n   * 创建 DataMarker\n   * @param option\n   * @returns AnnotationController\n   */\n  public dataMarker(option: DataMarkerOption) {\n    this.annotation({\n      type: 'dataMarker',\n      ...option,\n    });\n\n    return this;\n  }\n\n  /**\n   * 创建 DataRegion\n   * @param option\n   * @returns AnnotationController\n   */\n  public dataRegion(option: DataRegionOption) {\n    this.annotation({\n      type: 'dataRegion',\n      ...option,\n    });\n  }\n\n  /**\n   * 创建 RegionFilter\n   * @param option\n   * @returns AnnotationController\n   */\n  public regionFilter(option: RegionFilterOption) {\n    this.annotation({\n      type: 'regionFilter',\n      ...option,\n    });\n  }\n\n  /**\n   * 创建 ShapeAnnotation\n   * @param option\n   */\n  public shape(option: ShapeAnnotationOption) {\n    this.annotation({\n      type: 'shape',\n      ...option,\n    });\n  }\n\n  /**\n   * 创建 HtmlAnnotation\n   * @param option\n   */\n  public html(option: HtmlAnnotationOption) {\n    this.annotation({\n      type: 'html',\n      ...option,\n    });\n  }\n  // end API\n\n  /**\n   * parse the point position to [x, y]\n   * @param p Position\n   * @returns { x, y }\n   */\n  private parsePosition(\n    p:\n      | [string | number, string | number]\n      | Datum\n      | ((xScale: Scale, yScale: Scale) => [string | number, string | number] | number | Datum)\n  ): Point {\n    const xScale = this.view.getXScale();\n    // 转成 object\n    const yScales = this.view.getScalesByDim('y');\n\n    const position: Position = isFunction(p) ? p.call(null, xScale, yScales) : p;\n\n    let x = 0;\n    let y = 0;\n\n    // 入参是 [24, 24] 这类时\n    if (isArray(position)) {\n      const [xPos, yPos] = position;\n      // 如果数据格式是 ['50%', '50%'] 的格式\n      // fix: 原始数据中可能会包含 'xxx5%xxx' 这样的数据，需要判断下 https://github.com/antvis/f2/issues/590\n      // @ts-ignore\n      if (isString(xPos) && xPos.indexOf('%') !== -1 && !isNaN(xPos.slice(0, -1))) {\n        return this.parsePercentPosition(position as [string, string]);\n      }\n\n      x = getNormalizedValue(xPos, xScale);\n      y = getNormalizedValue(yPos, Object.values(yScales)[0]);\n    } else if (!isNil(position)) {\n      // 入参是 object 结构，数据点\n      for (const key of keys(position)) {\n        const value = position[key];\n        if (key === xScale.field) {\n          x = getNormalizedValue(value, xScale);\n        }\n        if (yScales[key]) {\n          y = getNormalizedValue(value, yScales[key]);\n        }\n      }\n    }\n\n    if (isNaN(x) || isNaN(y)) {\n      return null;\n    }\n\n    return this.view.getCoordinate().convert({ x, y });\n  }\n\n  /**\n   * parse all the points between start and end\n   * @param start\n   * @param end\n   * @return Point[]\n   */\n  private getRegionPoints(start: Position | Data, end: Position | Data): Point[] {\n    const xScale = this.view.getXScale();\n    const yScales = this.view.getScalesByDim('y');\n    const yScale = Object.values(yScales)[0];\n    const xField = xScale.field;\n    const viewData = this.view.getData();\n    const startXValue = isArray(start) ? start[0] : start[xField];\n    const endXValue = isArray(end) ? end[0] : end[xField];\n    const arr = [];\n\n    let startIndex;\n    each(viewData, (item, idx) => {\n      if (item[xField] === startXValue) {\n        startIndex = idx;\n      }\n      if (idx >= startIndex) {\n        const point = this.parsePosition([item[xField], item[yScale.field]]);\n        if (point) {\n          arr.push(point);\n        }\n      }\n      if (item[xField] === endXValue) {\n        return false;\n      }\n    });\n\n    return arr;\n  }\n\n  /**\n   * parse percent position\n   * @param position\n   */\n  private parsePercentPosition(position: [string, string]): Point {\n    const xPercent = parseFloat(position[0]) / 100;\n    const yPercent = parseFloat(position[1]) / 100;\n    const coordinate = this.view.getCoordinate();\n    const { start, end } = coordinate;\n\n    const topLeft = {\n      x: Math.min(start.x, end.x),\n      y: Math.min(start.y, end.y),\n    };\n    const x = coordinate.getWidth() * xPercent + topLeft.x;\n    const y = coordinate.getHeight() * yPercent + topLeft.y;\n    return { x, y };\n  }\n\n  /**\n   * get coordinate bbox\n   */\n  private getCoordinateBBox() {\n    const coordinate = this.view.getCoordinate();\n    const { start, end } = coordinate;\n\n    const width = coordinate.getWidth();\n    const height = coordinate.getHeight();\n    const topLeft = {\n      x: Math.min(start.x, end.x),\n      y: Math.min(start.y, end.y),\n    };\n\n    return {\n      x: topLeft.x,\n      y: topLeft.y,\n      minX: topLeft.x,\n      minY: topLeft.y,\n      maxX: topLeft.x + width,\n      maxY: topLeft.y + height,\n      width,\n      height,\n    };\n  }\n\n  /**\n   * get annotation component config by different type\n   * @param type\n   * @param option 用户的配置\n   * @param theme\n   */\n  private getAnnotationCfg(type: string, option: any, theme: object): object | null {\n    const coordinate = this.view.getCoordinate();\n    const canvas = this.view.getCanvas();\n    let o = {};\n\n    if (isNil(option)) {\n      return null;\n    }\n    const { start, end, position } = option;\n    const sp = this.parsePosition(start);\n    const ep = this.parsePosition(end);\n    const textPoint = this.parsePosition(position);\n    if (['arc', 'image', 'line', 'region', 'regionFilter'].includes(type) && (!sp || !ep)) {\n      return null;\n    } else if (['text', 'dataMarker', 'html'].includes(type) && !textPoint) {\n      return null;\n    }\n\n    if (type === 'arc') {\n      const { start, end, ...rest } = option as ArcOption;\n      const startAngle = getAngleByPoint(coordinate, sp);\n      let endAngle = getAngleByPoint(coordinate, ep);\n      if (startAngle > endAngle) {\n        endAngle = Math.PI * 2 + endAngle;\n      }\n\n      o = {\n        ...rest,\n        center: coordinate.getCenter(),\n        radius: getDistanceToCenter(coordinate, sp),\n        startAngle,\n        endAngle,\n      };\n    } else if (type === 'image') {\n      const { start, end, ...rest } = option as ImageOption;\n      o = {\n        ...rest,\n        start: sp,\n        end: ep,\n        src: option.src,\n      };\n    } else if (type === 'line') {\n      const { start, end, ...rest } = option as LineOption;\n      o = {\n        ...rest,\n        start: sp,\n        end: ep,\n        text: get(option, 'text', null),\n      };\n    } else if (type === 'region') {\n      const { start, end, ...rest } = option as RegionPositionBaseOption;\n      o = {\n        ...rest,\n        start: sp,\n        end: ep,\n      };\n    } else if (type === 'text') {\n      const filteredData = this.view.getData();\n      const { position, content, ...rest } = option as TextOption;\n      let textContent = content;\n      if (isFunction(content)) {\n        textContent = content(filteredData);\n      }\n      o = {\n        ...textPoint,\n        ...rest,\n        content: textContent,\n      };\n    } else if (type === 'dataMarker') {\n      const { position, point, line, text, autoAdjust, direction, ...rest } = option as DataMarkerOption;\n      o = {\n        ...rest,\n        ...textPoint,\n        coordinateBBox: this.getCoordinateBBox(),\n        point,\n        line,\n        text,\n        autoAdjust,\n        direction,\n      };\n    } else if (type === 'dataRegion') {\n      const { start, end, region, text, lineLength, ...rest } = option as DataRegionOption;\n      o = {\n        ...rest,\n        points: this.getRegionPoints(start, end),\n        region,\n        text,\n        lineLength,\n      };\n    } else if (type === 'regionFilter') {\n      const { start, end, apply, color, ...rest } = option as RegionFilterOption;\n      const geometries: Geometry[] = this.view.geometries;\n      const shapes = [];\n      const addShapes = (item?: IElement) => {\n        if (!item) {\n          return;\n        }\n        if (item.isGroup()) {\n          (item as IGroup).getChildren().forEach((child) => addShapes(child));\n        } else {\n          shapes.push(item);\n        }\n      };\n      each(geometries, (geom: Geometry) => {\n        if (apply) {\n          if (contains(apply, geom.type)) {\n            each(geom.elements, (elem: Element) => {\n              addShapes(elem.shape);\n            });\n          }\n        } else {\n          each(geom.elements, (elem: Element) => {\n            addShapes(elem.shape);\n          });\n        }\n      });\n      o = {\n        ...rest,\n        color,\n        shapes,\n        start: sp,\n        end: ep,\n      };\n    } else if (type === 'shape') {\n      const { render, ...restOptions } = option as ShapeAnnotationOption;\n      const wrappedRender = (container: IGroup) => {\n        if (isFunction(option.render)) {\n          return render(container, this.view, { parsePosition: this.parsePosition.bind(this) });\n        }\n      };\n      o = {\n        ...restOptions,\n        render: wrappedRender,\n      };\n    } else if (type === 'html') {\n      const { html, position, ...restOptions } = option as HtmlAnnotationOption;\n      const wrappedHtml = (container: HTMLElement) => {\n        if (isFunction(html)) {\n          return html(container, this.view);\n        }\n        return html;\n      };\n      o = {\n        ...restOptions,\n        ...textPoint,\n        // html 组件需要指定 parent\n        parent: canvas.get('el').parentNode,\n        html: wrappedHtml,\n      };\n    }\n    // 合并主题，用户配置优先级高于默认主题\n    const cfg = deepMix({}, theme, {\n      ...o,\n      top: option.top,\n      style: option.style,\n      offsetX: option.offsetX,\n      offsetY: option.offsetY,\n    });\n    if (type !== 'html') {\n      // html 类型不使用 G container\n      cfg.container = this.getComponentContainer(cfg);\n    }\n    cfg.animate = this.view.getOptions().animate && cfg.animate && get(option, 'animate', cfg.animate); // 如果 view 关闭动画，则不执行\n    cfg.animateOption = deepMix({}, DEFAULT_ANIMATE_CFG, cfg.animateOption, option.animateOption);\n\n    return cfg;\n  }\n\n  /**\n   * is annotation render on top\n   * @param option\n   * @return whethe on top\n   */\n  private isTop(option: any): boolean {\n    return get(option, 'top', true);\n  }\n\n  /**\n   * get the container by option.top\n   * default is on top\n   * @param option\n   * @returns the container\n   */\n  private getComponentContainer(option: any) {\n    return this.isTop(option) ? this.foregroundContainer : this.backgroundContainer;\n  }\n\n  private getAnnotationTheme(type: string) {\n    return get(this.view.getTheme(), ['components', 'annotation', type], {});\n  }\n\n  /**\n   * 创建或者更新 annotation\n   * @param option\n   */\n  private updateOrCreate(option: BaseOption) {\n    // 拿到缓存的内容\n    let co = this.cache.get(this.getCacheKey(option));\n\n    // 存在则更新，不存在在创建\n    if (co) {\n      const { type } = option;\n      const theme = this.getAnnotationTheme(type);\n      const cfg = this.getAnnotationCfg(type, option, theme);\n\n      // 忽略掉一些配置\n      if (cfg) {\n        omit(cfg, ['container']);\n      }\n      co.component.update({ ...(cfg || {}), visible: !!cfg });\n      // 对于 regionFilter/shape，因为生命周期的原因，需要额外 render\n      if (includes(ANNOTATIONS_AFTER_RENDER, option.type)) {\n        co.component.render();\n      }\n    } else {\n      // 不存在，创建\n      co = this.createAnnotation(option);\n      if (co) {\n        co.component.init();\n        // Note：regionFilter/shape 特殊处理，regionFilter/shape 需要取到 Geometry 中的 Shape，需要在 view render 之后处理\n        // 其他组件使用外层的统一 render 逻辑\n        if (includes(ANNOTATIONS_AFTER_RENDER, option.type)) {\n          co.component.render();\n        }\n      }\n    }\n    return co;\n  }\n\n  /**\n   * 更新缓存，以及销毁组件\n   * @param updated 更新或者创建的组件\n   */\n  private syncCache(updated: Map<BaseOption, ComponentOption>) {\n    const newCache = new Map(this.cache); // clone 一份\n\n    // 将 update 更新到 cache\n    updated.forEach((co: ComponentOption, key: BaseOption) => {\n      newCache.set(key, co);\n    });\n\n    // 另外和 options 进行对比，删除\n    newCache.forEach((co: ComponentOption, key: BaseOption) => {\n      // option 中已经找不到，那么就是删除的\n      if (\n        !find(this.option, (option: BaseOption) => {\n          return key === this.getCacheKey(option);\n        })\n      ) {\n        co.component.destroy();\n        newCache.delete(key);\n      }\n    });\n\n    return newCache;\n  }\n\n  /**\n   * 获得缓存组件的 key\n   * @param option\n   */\n  private getCacheKey(option: BaseOption) {\n    // 如果存在 id，则使用 id string，否则直接使用 option 引用作为 key\n    return option;\n    // 后续扩展 id 用\n    // const id = get(option, 'id');\n    // return id ? id : option;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}