{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { deepMix, each, get } from '@antv/util';\nimport { DIRECTION } from '../constant';\nimport { getFactTitleConfig } from '../util/facet';\nimport { Facet } from './facet';\n/**\n * @ignore\n * 镜像分面\n */\nvar Matrix = /** @class */function (_super) {\n  __extends(Matrix, _super);\n  function Matrix() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Matrix.prototype.getDefaultCfg = function () {\n    return deepMix({}, _super.prototype.getDefaultCfg.call(this), {\n      type: 'matrix',\n      showTitle: false,\n      columnTitle: __assign({}, _super.prototype.getDefaultTitleCfg.call(this)),\n      rowTitle: __assign({}, _super.prototype.getDefaultTitleCfg.call(this))\n    });\n  };\n  Matrix.prototype.render = function () {\n    _super.prototype.render.call(this);\n    if (this.cfg.showTitle) {\n      this.renderTitle();\n    }\n  };\n  Matrix.prototype.afterEachView = function (view, facet) {\n    this.processAxis(view, facet);\n  };\n  Matrix.prototype.beforeEachView = function (view, facet) {};\n  Matrix.prototype.generateFacets = function (data) {\n    var _a = this.cfg,\n      fields = _a.fields,\n      type = _a.type;\n    // 矩阵中行列相等，等于指定的字段个数\n    var rowValuesLength = fields.length;\n    var columnValuesLength = rowValuesLength;\n    var rst = [];\n    for (var i = 0; i < columnValuesLength; i++) {\n      var columnField = fields[i];\n      for (var j = 0; j < rowValuesLength; j++) {\n        var rowField = fields[j];\n        var facet = {\n          type: type,\n          data: data,\n          region: this.getRegion(rowValuesLength, columnValuesLength, i, j),\n          columnValue: columnField,\n          rowValue: rowField,\n          columnField: columnField,\n          rowField: rowField,\n          columnIndex: i,\n          rowIndex: j,\n          columnValuesLength: columnValuesLength,\n          rowValuesLength: rowValuesLength\n        };\n        rst.push(facet);\n      }\n    }\n    return rst;\n  };\n  /**\n   * 设置 x 坐标轴的文本、title 是否显示\n   * @param x\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  Matrix.prototype.getXAxisOption = function (x, axes, option, facet) {\n    // 最后一行显示\n    if (facet.rowIndex !== facet.rowValuesLength - 1) {\n      return __assign(__assign({}, option), {\n        label: null,\n        title: null\n      });\n    }\n    return option;\n  };\n  /**\n   * 设置 y 坐标轴的文本、title 是否显示\n   * @param y\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  Matrix.prototype.getYAxisOption = function (y, axes, option, facet) {\n    // 第一列显示\n    if (facet.columnIndex !== 0) {\n      return __assign(__assign({}, option), {\n        title: null,\n        label: null\n      });\n    }\n    return option;\n  };\n  /**\n   * facet title\n   */\n  Matrix.prototype.renderTitle = function () {\n    var _this = this;\n    each(this.facets, function (facet, facetIndex) {\n      var columnIndex = facet.columnIndex,\n        rowIndex = facet.rowIndex,\n        columnValuesLength = facet.columnValuesLength,\n        rowValuesLength = facet.rowValuesLength,\n        columnValue = facet.columnValue,\n        rowValue = facet.rowValue,\n        view = facet.view;\n      // top\n      if (rowIndex === 0) {\n        var formatter = get(_this.cfg.columnTitle, 'formatter');\n        var config = deepMix({\n          position: ['50%', '0%'],\n          content: formatter ? formatter(columnValue) : columnValue\n        }, getFactTitleConfig(DIRECTION.TOP), _this.cfg.columnTitle);\n        view.annotation().text(config);\n      }\n      // right\n      if (columnIndex === columnValuesLength - 1) {\n        var formatter = get(_this.cfg.rowTitle, 'formatter');\n        var config = deepMix({\n          position: ['100%', '50%'],\n          content: formatter ? formatter(rowValue) : rowValue\n        }, getFactTitleConfig(DIRECTION.RIGHT), _this.cfg.rowTitle);\n        view.annotation().text(config);\n      }\n    });\n  };\n  return Matrix;\n}(Facet);\nexport default Matrix;","map":{"version":3,"mappings":"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","names":["deepMix","each","get","DIRECTION","getFactTitleConfig","Facet","__extends","Matrix","_super","getDefaultCfg","type","showTitle","columnTitle","getDefaultTitleCfg","rowTitle","render","cfg","renderTitle","view","facet","processAxis","data","fields","rowValuesLength","length","columnValuesLength","rst","i","columnField","j","rowField","region","getRegion","columnValue","rowValue","columnIndex","rowIndex","push","x","axes","option","label","title","y","facets","facetIndex","formatter","_this","config","position","content","TOP","annotation","text","RIGHT"],"sources":["/home/iam/Documents/network/node_modules/@antv/g2/src/facet/matrix.ts"],"sourcesContent":["import { deepMix, each, get } from '@antv/util';\nimport { DIRECTION } from '../constant';\nimport { AxisCfg, Datum, MatrixCfg, MatrixData } from '../interface';\n\nimport View from '../chart/view';\nimport { getFactTitleConfig } from '../util/facet';\nimport { Facet } from './facet';\n\n/**\n * @ignore\n * 镜像分面\n */\nexport default class Matrix extends Facet<MatrixCfg, MatrixData> {\n  protected getDefaultCfg() {\n    return deepMix({}, super.getDefaultCfg(), {\n      type: 'matrix',\n      showTitle: false,\n      columnTitle: {\n        ...super.getDefaultTitleCfg(),\n      },\n      rowTitle: {\n        ...super.getDefaultTitleCfg(),\n      },\n    });\n  }\n\n  public render() {\n    super.render();\n\n    if (this.cfg.showTitle) {\n      this.renderTitle();\n    }\n  }\n\n  protected afterEachView(view: View, facet: MatrixData) {\n    this.processAxis(view, facet);\n  }\n\n  protected beforeEachView(view: View, facet: MatrixData) {}\n\n  protected generateFacets(data: Datum[]): MatrixData[] {\n    const { fields, type } = this.cfg;\n\n    // 矩阵中行列相等，等于指定的字段个数\n    const rowValuesLength = fields.length;\n    const columnValuesLength = rowValuesLength;\n\n    const rst = [];\n    for (let i = 0; i < columnValuesLength; i++) {\n      const columnField = fields[i];\n      for (let j = 0; j < rowValuesLength; j++) {\n        const rowField = fields[j];\n\n        const facet: MatrixData = {\n          type,\n          data,\n          region: this.getRegion(rowValuesLength, columnValuesLength, i, j),\n\n          columnValue: columnField,\n          rowValue: rowField,\n          columnField,\n          rowField,\n          columnIndex: i,\n          rowIndex: j,\n          columnValuesLength,\n          rowValuesLength,\n        };\n        rst.push(facet);\n      }\n    }\n    return rst;\n  }\n\n  /**\n   * 设置 x 坐标轴的文本、title 是否显示\n   * @param x\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  protected getXAxisOption(x: string, axes: any, option: AxisCfg, facet: MatrixData): object {\n    // 最后一行显示\n    if (facet.rowIndex !== facet.rowValuesLength - 1) {\n      return {\n        ...option,\n        label: null,\n        title: null,\n      };\n    }\n    return option;\n  }\n\n  /**\n   * 设置 y 坐标轴的文本、title 是否显示\n   * @param y\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  protected getYAxisOption(y: string, axes: any, option: AxisCfg, facet: MatrixData): object {\n    // 第一列显示\n    if (facet.columnIndex !== 0) {\n      return {\n        ...option,\n        title: null,\n        label: null,\n      };\n    }\n    return option;\n  }\n\n  /**\n   * facet title\n   */\n  private renderTitle() {\n    each(this.facets, (facet: MatrixData, facetIndex: number) => {\n      const { columnIndex, rowIndex, columnValuesLength, rowValuesLength, columnValue, rowValue, view } = facet;\n\n      // top\n      if (rowIndex === 0) {\n        const formatter = get(this.cfg.columnTitle, 'formatter');\n        const config = deepMix(\n          {\n            position: ['50%', '0%'] as [string, string],\n            content: formatter ? formatter(columnValue) : columnValue,\n          },\n          getFactTitleConfig(DIRECTION.TOP),\n          this.cfg.columnTitle\n        );\n\n        view.annotation().text(config);\n      }\n      // right\n      if (columnIndex === columnValuesLength - 1) {\n        const formatter = get(this.cfg.rowTitle, 'formatter');\n        const config = deepMix(\n          {\n            position: ['100%', '50%'] as [string, string],\n            content: formatter ? formatter(rowValue) : rowValue,\n          },\n          getFactTitleConfig(DIRECTION.RIGHT),\n          this.cfg.rowTitle\n        );\n\n        view.annotation().text(config);\n      }\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}