{"ast":null,"code":"import { __rest } from \"tslib\";\nimport { get, isNumber } from '@antv/util';\nimport { animation, annotation, interaction, pattern, scale, state, theme, tooltip } from '../../adaptor/common';\nimport { geometry as geometryAdaptor } from '../../adaptor/geometries/base';\nimport { deepAssign, findGeometry, flow, transformLabel } from '../../utils';\nimport { getTooltipMapping } from '../../utils/tooltip';\nfunction geometry(params) {\n  var chart = params.chart,\n    options = params.options;\n  var data = options.data,\n    type = options.type,\n    xField = options.xField,\n    yField = options.yField,\n    colorField = options.colorField,\n    sizeField = options.sizeField,\n    sizeRatio = options.sizeRatio,\n    shape = options.shape,\n    color = options.color,\n    tooltip = options.tooltip,\n    heatmapStyle = options.heatmapStyle,\n    meta = options.meta;\n  chart.data(data);\n  var geometryType = 'polygon';\n  if (type === 'density') {\n    geometryType = 'heatmap';\n  }\n  var _a = getTooltipMapping(tooltip, [xField, yField, colorField]),\n    fields = _a.fields,\n    formatter = _a.formatter;\n  /**\n   * The ratio between the actual size and the max available size, must be in range `[0,1]`.\n   *\n   * If the `sizeRatio` attribute is undefined or it exceeds the range,\n   * `checkedSizeRatio` would be set to 1 as default.\n   */\n  var checkedSizeRatio = 1;\n  if (sizeRatio || sizeRatio === 0) {\n    if (!shape && !sizeField) {\n      console.warn('sizeRatio is not in effect: Must define shape or sizeField first');\n    } else if (sizeRatio < 0 || sizeRatio > 1) {\n      console.warn('sizeRatio is not in effect: It must be a number in [0,1]');\n    } else {\n      checkedSizeRatio = sizeRatio;\n    }\n  }\n  geometryAdaptor(deepAssign({}, params, {\n    options: {\n      type: geometryType,\n      colorField: colorField,\n      tooltipFields: fields,\n      shapeField: sizeField || '',\n      label: undefined,\n      mapping: {\n        tooltip: formatter,\n        shape: shape && (sizeField ? function (dautm) {\n          var field = data.map(function (row) {\n            return row[sizeField];\n          });\n          var _a = (meta === null || meta === void 0 ? void 0 : meta[sizeField]) || {},\n            min = _a.min,\n            max = _a.max;\n          min = isNumber(min) ? min : Math.min.apply(Math, field);\n          max = isNumber(max) ? max : Math.max.apply(Math, field);\n          return [shape, (get(dautm, sizeField) - min) / (max - min), checkedSizeRatio];\n        } : function () {\n          return [shape, 1, checkedSizeRatio];\n        }),\n        color: color || colorField && chart.getTheme().sequenceColors.join('-'),\n        style: heatmapStyle\n      }\n    }\n  }));\n  return params;\n}\n/**\n * meta 配置\n * @param params\n */\nfunction meta(params) {\n  var _a;\n  var options = params.options;\n  var xAxis = options.xAxis,\n    yAxis = options.yAxis,\n    xField = options.xField,\n    yField = options.yField;\n  return flow(scale((_a = {}, _a[xField] = xAxis, _a[yField] = yAxis, _a)))(params);\n}\n/**\n * axis 配置\n * @param params\n */\nfunction axis(params) {\n  var chart = params.chart,\n    options = params.options;\n  var xAxis = options.xAxis,\n    yAxis = options.yAxis,\n    xField = options.xField,\n    yField = options.yField;\n  // 为 false 则是不显示轴\n  if (xAxis === false) {\n    chart.axis(xField, false);\n  } else {\n    chart.axis(xField, xAxis);\n  }\n  if (yAxis === false) {\n    chart.axis(yField, false);\n  } else {\n    chart.axis(yField, yAxis);\n  }\n  return params;\n}\n/**\n * legend 配置\n * @param params\n */\nfunction legend(params) {\n  var chart = params.chart,\n    options = params.options;\n  var legend = options.legend,\n    colorField = options.colorField,\n    sizeField = options.sizeField,\n    sizeLegend = options.sizeLegend;\n  /** legend 不为 false, 则展示图例, 优先展示 color 分类图例 */\n  var showLegend = legend !== false;\n  if (colorField) {\n    chart.legend(colorField, showLegend ? legend : false);\n  }\n  // 旧版本: 有 sizeField 就有 sizeLegend. 这里默认继承下 legend 配置\n  if (sizeField) {\n    chart.legend(sizeField, sizeLegend === undefined ? legend : sizeLegend);\n  }\n  /** 默认没有 sizeField，则隐藏连续图例 */\n  if (!showLegend && !sizeLegend) {\n    chart.legend(false);\n  }\n  return params;\n}\n/**\n * fixme 后续确认下，数据标签的逻辑为啥和通用的不一致\n * 数据标签\n * @param params\n */\nfunction label(params) {\n  var chart = params.chart,\n    options = params.options;\n  var label = options.label,\n    colorField = options.colorField,\n    type = options.type;\n  var geometry = findGeometry(chart, type === 'density' ? 'heatmap' : 'polygon');\n  if (!label) {\n    geometry.label(false);\n  } else if (colorField) {\n    var callback = label.callback,\n      cfg = __rest(label, [\"callback\"]);\n    geometry.label({\n      fields: [colorField],\n      callback: callback,\n      cfg: transformLabel(cfg)\n    });\n  }\n  return params;\n}\n/**\n * 极坐标\n * @param params\n */\nfunction coordinate(params) {\n  var _a, _b;\n  var chart = params.chart,\n    options = params.options;\n  var coordinate = options.coordinate,\n    reflect = options.reflect;\n  var coordinateOption = deepAssign({\n    actions: []\n  }, coordinate !== null && coordinate !== void 0 ? coordinate : {\n    type: 'rect'\n  });\n  if (reflect) {\n    (_b = (_a = coordinateOption.actions) === null || _a === void 0 ? void 0 : _a.push) === null || _b === void 0 ? void 0 : _b.call(_a, ['reflect', reflect]);\n  }\n  chart.coordinate(coordinateOption);\n  return params;\n}\n/**\n * 热力图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(theme, pattern('heatmapStyle'), meta, coordinate, geometry, axis, legend, tooltip, label, annotation(), interaction, animation, state)(params);\n}","map":{"version":3,"mappings":"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","names":["get","isNumber","animation","annotation","interaction","pattern","scale","state","theme","tooltip","geometry","geometryAdaptor","deepAssign","findGeometry","flow","transformLabel","getTooltipMapping","params","options","type","xField","yField","colorField","sizeField","sizeRatio","shape","color","heatmapStyle","meta","chart","data","geometryType","fields","formatter","checkedSizeRatio","console","warn","tooltipFields","shapeField","label","undefined","mapping","dautm","field","map","row","min","max","Math","getTheme","sequenceColors","join","style","yAxis","_a","xAxis","axis","legend","sizeLegend","showLegend","cfg","callback","coordinate","reflect","coordinateOption","actions","push","adaptor"],"sources":["/home/iam/Documents/network/node_modules/@antv/g2plot/src/plots/heatmap/adaptor.ts"],"sourcesContent":["import { get, isNumber } from '@antv/util';\nimport { animation, annotation, interaction, pattern, scale, state, theme, tooltip } from '../../adaptor/common';\nimport { geometry as geometryAdaptor } from '../../adaptor/geometries/base';\nimport { Params } from '../../core/adaptor';\nimport { deepAssign, findGeometry, flow, transformLabel } from '../../utils';\nimport { getTooltipMapping } from '../../utils/tooltip';\nimport { HeatmapOptions } from './types';\n\nfunction geometry(params: Params<HeatmapOptions>): Params<HeatmapOptions> {\n  const { chart, options } = params;\n  const { data, type, xField, yField, colorField, sizeField, sizeRatio, shape, color, tooltip, heatmapStyle, meta } =\n    options;\n\n  chart.data(data);\n  let geometryType = 'polygon';\n  if (type === 'density') {\n    geometryType = 'heatmap';\n  }\n\n  const { fields, formatter } = getTooltipMapping(tooltip, [xField, yField, colorField]);\n\n  /**\n   * The ratio between the actual size and the max available size, must be in range `[0,1]`.\n   *\n   * If the `sizeRatio` attribute is undefined or it exceeds the range,\n   * `checkedSizeRatio` would be set to 1 as default.\n   */\n  let checkedSizeRatio = 1;\n  if (sizeRatio || sizeRatio === 0) {\n    if (!shape && !sizeField) {\n      console.warn('sizeRatio is not in effect: Must define shape or sizeField first');\n    } else if (sizeRatio < 0 || sizeRatio > 1) {\n      console.warn('sizeRatio is not in effect: It must be a number in [0,1]');\n    } else {\n      checkedSizeRatio = sizeRatio;\n    }\n  }\n\n  geometryAdaptor(\n    deepAssign({}, params, {\n      options: {\n        type: geometryType,\n        colorField,\n        tooltipFields: fields,\n        shapeField: sizeField || '',\n        label: undefined,\n        mapping: {\n          tooltip: formatter,\n          shape:\n            shape &&\n            (sizeField\n              ? (dautm) => {\n                  const field = data.map((row) => row[sizeField]);\n                  let { min, max } = meta?.[sizeField] || {};\n                  min = isNumber(min) ? min : Math.min(...field);\n                  max = isNumber(max) ? max : Math.max(...field);\n                  return [shape, (get(dautm, sizeField) - min) / (max - min), checkedSizeRatio];\n                }\n              : () => [shape, 1, checkedSizeRatio]),\n          color: color || (colorField && chart.getTheme().sequenceColors.join('-')),\n          style: heatmapStyle,\n        },\n      },\n    })\n  );\n\n  return params;\n}\n\n/**\n * meta 配置\n * @param params\n */\nfunction meta(params: Params<HeatmapOptions>): Params<HeatmapOptions> {\n  const { options } = params;\n  const { xAxis, yAxis, xField, yField } = options;\n\n  return flow(\n    scale({\n      [xField]: xAxis,\n      [yField]: yAxis,\n    })\n  )(params);\n}\n\n/**\n * axis 配置\n * @param params\n */\nfunction axis(params: Params<HeatmapOptions>): Params<HeatmapOptions> {\n  const { chart, options } = params;\n  const { xAxis, yAxis, xField, yField } = options;\n\n  // 为 false 则是不显示轴\n  if (xAxis === false) {\n    chart.axis(xField, false);\n  } else {\n    chart.axis(xField, xAxis);\n  }\n\n  if (yAxis === false) {\n    chart.axis(yField, false);\n  } else {\n    chart.axis(yField, yAxis);\n  }\n\n  return params;\n}\n\n/**\n * legend 配置\n * @param params\n */\nfunction legend(params: Params<HeatmapOptions>): Params<HeatmapOptions> {\n  const { chart, options } = params;\n  const { legend, colorField, sizeField, sizeLegend } = options;\n\n  /** legend 不为 false, 则展示图例, 优先展示 color 分类图例 */\n  const showLegend = legend !== false;\n\n  if (colorField) {\n    chart.legend(colorField, showLegend ? legend : false);\n  }\n\n  // 旧版本: 有 sizeField 就有 sizeLegend. 这里默认继承下 legend 配置\n  if (sizeField) {\n    chart.legend(sizeField, sizeLegend === undefined ? legend : sizeLegend);\n  }\n\n  /** 默认没有 sizeField，则隐藏连续图例 */\n  if (!showLegend && !sizeLegend) {\n    chart.legend(false);\n  }\n\n  return params;\n}\n\n/**\n * fixme 后续确认下，数据标签的逻辑为啥和通用的不一致\n * 数据标签\n * @param params\n */\nfunction label(params: Params<HeatmapOptions>): Params<HeatmapOptions> {\n  const { chart, options } = params;\n  const { label, colorField, type } = options;\n\n  const geometry = findGeometry(chart, type === 'density' ? 'heatmap' : 'polygon');\n\n  if (!label) {\n    geometry.label(false);\n  } else if (colorField) {\n    const { callback, ...cfg } = label;\n    geometry.label({\n      fields: [colorField],\n      callback,\n      cfg: transformLabel(cfg),\n    });\n  }\n\n  return params;\n}\n\n/**\n * 极坐标\n * @param params\n */\nfunction coordinate(params: Params<HeatmapOptions>): Params<HeatmapOptions> {\n  const { chart, options } = params;\n  const { coordinate, reflect } = options;\n\n  const coordinateOption = deepAssign({ actions: [] }, coordinate ?? { type: 'rect' });\n\n  if (reflect) {\n    coordinateOption.actions?.push?.(['reflect', reflect]);\n  }\n\n  chart.coordinate(coordinateOption);\n\n  return params;\n}\n\n/**\n * 热力图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<HeatmapOptions>) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(\n    theme,\n    pattern('heatmapStyle'),\n    meta,\n    coordinate,\n    geometry,\n    axis,\n    legend,\n    tooltip,\n    label,\n    annotation(),\n    interaction,\n    animation,\n    state\n  )(params);\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}