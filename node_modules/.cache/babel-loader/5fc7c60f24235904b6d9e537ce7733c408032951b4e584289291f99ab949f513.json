{"ast":null,"code":"import { isString } from '@antv/util';\nimport { animation, annotation, scale, theme } from '../../adaptor/common';\nimport { interval } from '../../adaptor/geometries';\nimport { deepAssign, flow } from '../../utils';\nimport { DEFAULT_COLOR } from './constants';\nimport { getProgressData } from './utils';\n/**\n * 字段\n * @param params\n */\nexport function geometry(params) {\n  var chart = params.chart,\n    options = params.options;\n  var percent = options.percent,\n    progressStyle = options.progressStyle,\n    color = options.color,\n    barWidthRatio = options.barWidthRatio;\n  chart.data(getProgressData(percent));\n  var p = deepAssign({}, params, {\n    options: {\n      xField: 'current',\n      yField: 'percent',\n      seriesField: 'type',\n      widthRatio: barWidthRatio,\n      interval: {\n        style: progressStyle,\n        color: isString(color) ? [color, DEFAULT_COLOR[1]] : color\n      },\n      args: {\n        zIndexReversed: true,\n        sortZIndex: true\n      }\n    }\n  });\n  interval(p);\n  // 关闭组件\n  chart.tooltip(false);\n  chart.axis(false);\n  chart.legend(false);\n  return params;\n}\n/**\n * other 配置\n * @param params\n */\nfunction coordinate(params) {\n  var chart = params.chart;\n  chart.coordinate('rect').transpose();\n  return params;\n}\n/**\n * 进度图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params) {\n  // @ts-ignore\n  return flow(geometry, scale({}), coordinate, animation, theme, annotation())(params);\n}","map":{"version":3,"mappings":"AAAA,SAASA,QAAQ,QAAQ,YAAY;AACrC,SAASC,SAAS,EAAEC,UAAU,EAAEC,KAAK,EAAEC,KAAK,QAAQ,sBAAsB;AAC1E,SAASC,QAAQ,QAAQ,0BAA0B;AAEnD,SAASC,UAAU,EAAEC,IAAI,QAAQ,aAAa;AAC9C,SAASC,aAAa,QAAQ,aAAa;AAE3C,SAASC,eAAe,QAAQ,SAAS;AAEzC;;;;AAIA,OAAM,SAAUC,QAAQ,CAACC,MAA+B;EAC9C,SAAK,GAAcA,MAAM,MAApB;IAAEC,OAAO,GAAKD,MAAM,QAAX;EACd,WAAO,GAA0CC,OAAO,QAAjD;IAAEC,aAAa,GAA2BD,OAAO,cAAlC;IAAEE,KAAK,GAAoBF,OAAO,MAA3B;IAAEG,aAAa,GAAKH,OAAO,cAAZ;EAEpDI,KAAK,CAACC,IAAI,CAACR,eAAe,CAACS,OAAO,CAAC,CAAC;EAEpC,IAAMC,CAAC,GAAGb,UAAU,CAAC,EAAE,EAAEK,MAAM,EAAE;IAC/BC,OAAO,EAAE;MACPQ,MAAM,EAAE,SAAS;MACjBC,MAAM,EAAE,SAAS;MACjBC,WAAW,EAAE,MAAM;MACnBC,UAAU,EAAER,aAAa;MACzBV,QAAQ,EAAE;QACRmB,KAAK,EAAEX,aAAa;QACpBC,KAAK,EAAEd,QAAQ,CAACc,KAAK,CAAC,GAAG,CAACA,KAAK,EAAEN,aAAa,CAAC,CAAC,CAAC,CAAC,GAAGM;OACtD;MACDW,IAAI,EAAE;QACJC,cAAc,EAAE,IAAI;QACpBC,UAAU,EAAE;;;GAGjB,CAAC;EAEFtB,QAAQ,CAACc,CAAC,CAAC;EAEX;EACAH,KAAK,CAACY,OAAO,CAAC,KAAK,CAAC;EACpBZ,KAAK,CAACa,IAAI,CAAC,KAAK,CAAC;EACjBb,KAAK,CAACc,MAAM,CAAC,KAAK,CAAC;EAEnB,OAAOnB,MAAM;AACf;AAEA;;;;AAIA,SAASoB,UAAU,CAACpB,MAA+B;EACzC,SAAK,GAAKA,MAAM,MAAX;EAEbK,KAAK,CAACe,UAAU,CAAC,MAAM,CAAC,CAACC,SAAS,EAAE;EAEpC,OAAOrB,MAAM;AACf;AAEA;;;;;AAKA,OAAM,SAAUsB,OAAO,CAACtB,MAA+B;EACrD;EACA,OAAOJ,IAAI,CAACG,QAAQ,EAAEP,KAAK,CAAC,EAAE,CAAC,EAAE4B,UAAU,EAAE9B,SAAS,EAAEG,KAAK,EAAEF,UAAU,EAAE,CAAC,CAACS,MAAM,CAAC;AACtF","names":["isString","animation","annotation","scale","theme","interval","deepAssign","flow","DEFAULT_COLOR","getProgressData","geometry","params","options","progressStyle","color","barWidthRatio","chart","data","percent","p","xField","yField","seriesField","widthRatio","style","args","zIndexReversed","sortZIndex","tooltip","axis","legend","coordinate","transpose","adaptor"],"sources":["/home/iam/Documents/LocalWeb-master/node_modules/@antv/g2plot/src/plots/progress/adaptor.ts"],"sourcesContent":["import { isString } from '@antv/util';\nimport { animation, annotation, scale, theme } from '../../adaptor/common';\nimport { interval } from '../../adaptor/geometries';\nimport { Params } from '../../core/adaptor';\nimport { deepAssign, flow } from '../../utils';\nimport { DEFAULT_COLOR } from './constants';\nimport { ProgressOptions } from './types';\nimport { getProgressData } from './utils';\n\n/**\n * 字段\n * @param params\n */\nexport function geometry(params: Params<ProgressOptions>): Params<ProgressOptions> {\n  const { chart, options } = params;\n  const { percent, progressStyle, color, barWidthRatio } = options;\n\n  chart.data(getProgressData(percent));\n\n  const p = deepAssign({}, params, {\n    options: {\n      xField: 'current',\n      yField: 'percent',\n      seriesField: 'type',\n      widthRatio: barWidthRatio,\n      interval: {\n        style: progressStyle,\n        color: isString(color) ? [color, DEFAULT_COLOR[1]] : color,\n      },\n      args: {\n        zIndexReversed: true,\n        sortZIndex: true,\n      },\n    },\n  });\n\n  interval(p);\n\n  // 关闭组件\n  chart.tooltip(false);\n  chart.axis(false);\n  chart.legend(false);\n\n  return params;\n}\n\n/**\n * other 配置\n * @param params\n */\nfunction coordinate(params: Params<ProgressOptions>): Params<ProgressOptions> {\n  const { chart } = params;\n\n  chart.coordinate('rect').transpose();\n\n  return params;\n}\n\n/**\n * 进度图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<ProgressOptions>) {\n  // @ts-ignore\n  return flow(geometry, scale({}), coordinate, animation, theme, annotation())(params);\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}