{"ast":null,"code":"import { __extends } from \"tslib\";\nimport Action from '../base';\nimport { distance } from '../util';\nvar DISTANCE = 4; // 移动的最小距离\n/**\n * @ignore\n * View 支持 Drag 的 Action\n */\nvar Drag = /** @class */function (_super) {\n  __extends(Drag, _super);\n  function Drag() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    // Action 开始，不等同于 拖拽开始，需要判定移动的范围\n    _this.starting = false;\n    // 拖拽开始\n    _this.dragStart = false;\n    return _this;\n  }\n  /**\n   * 开始\n   */\n  Drag.prototype.start = function () {\n    this.starting = true;\n    this.startPoint = this.context.getCurrentPoint();\n  };\n  /**\n   * 拖拽\n   */\n  Drag.prototype.drag = function () {\n    if (!this.startPoint) {\n      return;\n    }\n    var current = this.context.getCurrentPoint();\n    var view = this.context.view;\n    var event = this.context.event;\n    if (!this.dragStart) {\n      if (distance(current, this.startPoint) > DISTANCE) {\n        view.emit('dragstart', {\n          target: event.target,\n          x: event.x,\n          y: event.y\n        });\n        this.dragStart = true;\n      }\n    } else {\n      view.emit('drag', {\n        target: event.target,\n        x: event.x,\n        y: event.y\n      });\n    }\n  };\n  /**\n   * 结束\n   */\n  Drag.prototype.end = function () {\n    if (this.dragStart) {\n      var view = this.context.view;\n      var event_1 = this.context.event;\n      view.emit('dragend', {\n        target: event_1.target,\n        x: event_1.x,\n        y: event_1.y\n      });\n    }\n    this.starting = false;\n    this.dragStart = false;\n  };\n  return Drag;\n}(Action);\nexport default Drag;","map":{"version":3,"mappings":";AACA,OAAOA,MAAM,MAAM,SAAS;AAC5B,SAASC,QAAQ,QAAQ,SAAS;AAElC,IAAMC,QAAQ,GAAG,CAAC,CAAC,CAAC;AAEpB;;;;AAIA;EAAmBC;EAAnB;IAAA;IACE;IACUC,cAAQ,GAAG,KAAK;IAC1B;IACUA,eAAS,GAAG,KAAK;;EAwD7B;EApDE;;;EAGOC,oBAAK,GAAZ;IACE,IAAI,CAACC,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACC,UAAU,GAAG,IAAI,CAACC,OAAO,CAACC,eAAe,EAAE;EAClD,CAAC;EAED;;;EAGOJ,mBAAI,GAAX;IACE,IAAI,CAAC,IAAI,CAACE,UAAU,EAAE;MACpB;;IAEF,IAAMG,OAAO,GAAG,IAAI,CAACF,OAAO,CAACC,eAAe,EAAE;IAC9C,IAAME,IAAI,GAAG,IAAI,CAACH,OAAO,CAACG,IAAI;IAC9B,IAAMC,KAAK,GAAG,IAAI,CAACJ,OAAO,CAACI,KAAK;IAChC,IAAI,CAAC,IAAI,CAACC,SAAS,EAAE;MACnB,IAAIZ,QAAQ,CAACS,OAAO,EAAE,IAAI,CAACH,UAAU,CAAC,GAAGL,QAAQ,EAAE;QACjDS,IAAI,CAACG,IAAI,CAAC,WAAW,EAAE;UACrBC,MAAM,EAAEH,KAAK,CAACG,MAAM;UACpBC,CAAC,EAAEJ,KAAK,CAACI,CAAC;UACVC,CAAC,EAAEL,KAAK,CAACK;SACV,CAAC;QACF,IAAI,CAACJ,SAAS,GAAG,IAAI;;KAExB,MAAM;MACLF,IAAI,CAACG,IAAI,CAAC,MAAM,EAAE;QAChBC,MAAM,EAAEH,KAAK,CAACG,MAAM;QACpBC,CAAC,EAAEJ,KAAK,CAACI,CAAC;QACVC,CAAC,EAAEL,KAAK,CAACK;OACV,CAAC;;EAEN,CAAC;EAED;;;EAGOZ,kBAAG,GAAV;IACE,IAAI,IAAI,CAACQ,SAAS,EAAE;MAClB,IAAMF,IAAI,GAAG,IAAI,CAACH,OAAO,CAACG,IAAI;MAC9B,IAAMO,OAAK,GAAG,IAAI,CAACV,OAAO,CAACI,KAAK;MAChCD,IAAI,CAACG,IAAI,CAAC,SAAS,EAAE;QACnBC,MAAM,EAAEG,OAAK,CAACH,MAAM;QACpBC,CAAC,EAAEE,OAAK,CAACF,CAAC;QACVC,CAAC,EAAEC,OAAK,CAACD;OACV,CAAC;;IAEJ,IAAI,CAACX,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACO,SAAS,GAAG,KAAK;EACxB,CAAC;EACH,WAAC;AAAD,CAAC,CA5DkBb,MAAM;AA8DzB,eAAeK,IAAI","names":["Action","distance","DISTANCE","__extends","_this","Drag","starting","startPoint","context","getCurrentPoint","current","view","event","dragStart","emit","target","x","y","event_1"],"sources":["/home/iam/Documents/LocalWeb-master/node_modules/@antv/g2/src/interaction/action/view/drag.ts"],"sourcesContent":["import { Point } from '../../../dependents';\nimport Action from '../base';\nimport { distance } from '../util';\n\nconst DISTANCE = 4; // 移动的最小距离\n\n/**\n * @ignore\n * View 支持 Drag 的 Action\n */\nclass Drag extends Action {\n  // Action 开始，不等同于 拖拽开始，需要判定移动的范围\n  protected starting = false;\n  // 拖拽开始\n  protected dragStart = false;\n  // 开始的节点\n  protected startPoint: Point;\n\n  /**\n   * 开始\n   */\n  public start() {\n    this.starting = true;\n    this.startPoint = this.context.getCurrentPoint();\n  }\n\n  /**\n   * 拖拽\n   */\n  public drag() {\n    if (!this.startPoint) {\n      return;\n    }\n    const current = this.context.getCurrentPoint();\n    const view = this.context.view;\n    const event = this.context.event;\n    if (!this.dragStart) {\n      if (distance(current, this.startPoint) > DISTANCE) {\n        view.emit('dragstart', {\n          target: event.target,\n          x: event.x,\n          y: event.y,\n        });\n        this.dragStart = true;\n      }\n    } else {\n      view.emit('drag', {\n        target: event.target,\n        x: event.x,\n        y: event.y,\n      });\n    }\n  }\n\n  /**\n   * 结束\n   */\n  public end() {\n    if (this.dragStart) {\n      const view = this.context.view;\n      const event = this.context.event;\n      view.emit('dragend', {\n        target: event.target,\n        x: event.x,\n        y: event.y,\n      });\n    }\n    this.starting = false;\n    this.dragStart = false;\n  }\n}\n\nexport default Drag;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}