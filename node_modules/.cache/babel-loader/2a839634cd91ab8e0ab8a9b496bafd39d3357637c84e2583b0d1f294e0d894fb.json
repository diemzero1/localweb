{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { deepAssign } from '../../utils';\nimport { getTooltipMapping } from '../../utils/tooltip';\nimport { geometry } from './base';\n/**\n * area geometry 的配置处理\n * @param params\n */\nexport function area(params) {\n  var options = params.options;\n  var area = options.area,\n    xField = options.xField,\n    yField = options.yField,\n    seriesField = options.seriesField,\n    smooth = options.smooth,\n    tooltip = options.tooltip,\n    useDeferredLabel = options.useDeferredLabel;\n  var _a = getTooltipMapping(tooltip, [xField, yField, seriesField]),\n    fields = _a.fields,\n    formatter = _a.formatter;\n  // 如果存在才处理\n  return area ? geometry(deepAssign({}, params, {\n    options: {\n      type: 'area',\n      colorField: seriesField,\n      tooltipFields: fields,\n      mapping: __assign({\n        shape: smooth ? 'smooth' : 'area',\n        tooltip: formatter\n      }, area),\n      args: {\n        useDeferredLabel: useDeferredLabel\n      }\n    }\n  })) : params;\n}","map":{"version":3,"mappings":";AACA,SAASA,UAAU,QAAQ,aAAa;AACxC,SAASC,iBAAiB,QAAQ,qBAAqB;AACvD,SAASC,QAAQ,QAAyC,QAAQ;AAelE;;;;AAIA,OAAM,SAAUC,IAAI,CAAgCC,MAAiB;EAC3D,WAAO,GAAKA,MAAM,QAAX;EACP,QAAI,GAAqEC,OAAO,KAA5E;IAAEC,MAAM,GAA6DD,OAAO,OAApE;IAAEE,MAAM,GAAqDF,OAAO,OAA5D;IAAEG,WAAW,GAAwCH,OAAO,YAA/C;IAAEI,MAAM,GAAgCJ,OAAO,OAAvC;IAAEK,OAAO,GAAuBL,OAAO,QAA9B;IAAEM,gBAAgB,GAAKN,OAAO,iBAAZ;EAEtE,SAAwBJ,iBAAiB,CAACS,OAAO,EAAE,CAACJ,MAAM,EAAEC,MAAM,EAAEC,WAAW,CAAC,CAAC;IAA/EI,MAAM;IAAEC,SAAS,eAA8D;EAEvF;EACA,OAAOV,IAAI,GACPD,QAAQ,CACNF,UAAU,CAAC,EAAE,EAAEI,MAAM,EAAE;IACrBC,OAAO,EAAE;MACPS,IAAI,EAAE,MAAM;MACZC,UAAU,EAAEP,WAAW;MACvBQ,aAAa,EAAEJ,MAAM;MACrBK,OAAO;QACLC,KAAK,EAAET,MAAM,GAAG,QAAQ,GAAG,MAAM;QACjCC,OAAO,EAAEG;MAAS,GACfV,IAAI,CACR;MACDgB,IAAI,EAAE;QAAER,gBAAgB;MAAA;;GAE3B,CAAC,CACH,GACDP,MAAM;AACZ","names":["deepAssign","getTooltipMapping","geometry","area","params","options","xField","yField","seriesField","smooth","tooltip","useDeferredLabel","fields","formatter","type","colorField","tooltipFields","mapping","shape","args"],"sources":["/home/iam/Documents/LocalWeb-master/node_modules/@antv/g2plot/src/adaptor/geometries/area.ts"],"sourcesContent":["import { Params } from '../../core/adaptor';\nimport { deepAssign } from '../../utils';\nimport { getTooltipMapping } from '../../utils/tooltip';\nimport { geometry, GeometryOptions, MappingOptions } from './base';\n\nexport interface AreaGeometryOptions extends GeometryOptions {\n  /** x 轴字段 */\n  readonly xField?: string;\n  /** y 轴字段 */\n  readonly yField?: string;\n  /** 分组字段 */\n  readonly seriesField?: string;\n  /** 是否平滑 */\n  readonly smooth?: boolean;\n  /** area 图形的样式设置 */\n  readonly area?: MappingOptions;\n}\n\n/**\n * area geometry 的配置处理\n * @param params\n */\nexport function area<O extends AreaGeometryOptions>(params: Params<O>): Params<O> {\n  const { options } = params;\n  const { area, xField, yField, seriesField, smooth, tooltip, useDeferredLabel } = options;\n\n  const { fields, formatter } = getTooltipMapping(tooltip, [xField, yField, seriesField]);\n\n  // 如果存在才处理\n  return area\n    ? geometry(\n        deepAssign({}, params, {\n          options: {\n            type: 'area',\n            colorField: seriesField,\n            tooltipFields: fields,\n            mapping: {\n              shape: smooth ? 'smooth' : 'area',\n              tooltip: formatter,\n              ...area,\n            },\n            args: { useDeferredLabel },\n          },\n        })\n      )\n    : params;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}