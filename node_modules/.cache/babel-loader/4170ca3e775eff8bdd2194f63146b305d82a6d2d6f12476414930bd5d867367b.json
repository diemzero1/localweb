{"ast":null,"code":"var _jsxFileName = \"/home/iam/Documents/network/src/components/antd/internet/wan/wan.tsx\",\n  _s = $RefreshSig$();\nimport { Button, Space, Input, Select, message, Form, Card } from 'antd';\nimport React, { useRef } from 'react';\nimport ubusApi from '../../../../service/api/ubus-api';\nimport { useTranslation } from \"react-i18next\";\nimport \"../../../../translations/i18n\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const WanSettings = props => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  let pattern = /^[a-zA-Z0-9_.]+$/;\n  let patternIpv4 = /^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n  let check1;\n  let check2;\n  const [form] = Form.useForm();\n  const [loading, setLoading] = React.useState(true);\n  setTimeout(() => {\n    setLoading(false);\n  }, 1000);\n  // const [protov4, setProtov4] = React.useState(\"\")\n  // const [protov6, setProtov6] = React.useState(\"\")\n  // const [ipaddrv4, setIpaddrv4] = React.useState(\"\")\n  // const [netmaskv4, setNetmaskv4] = React.useState(null)\n  // const [gtwv4, setGtwv4] = React.useState(null)\n  // const [ipaddrv6, setIpaddrv6] = React.useState(null)\n  // const [gtwv6, setGtwv6] = React.useState(null)\n\n  const optionStatusWan = useRef([{\n    label: t('enable'),\n    value: \"enable\"\n  }, {\n    label: t('disable'),\n    value: \"disable\"\n  }]).current;\n  const optionProtoWanv4 = useRef([{\n    label: t('none'),\n    value: \"none\"\n  }, {\n    label: \"DHCP\",\n    value: \"dhcp\"\n  }, {\n    label: \"Static\",\n    value: \"static\"\n  }, {\n    label: \"PPPOE\",\n    value: \"pppoe\"\n  }]).current;\n\n  // const optionProtoWanv6 = useRef([\n  //     {\n  //         value: \"none\",\n  //         label: t('none'),\n  //     },\n  //     {\n  //         value: \"dhcpv6\",\n  //         label: \"DHCP\",\n  //     },\n  //     {\n  //         value: \"static\",\n  //         label: \"Static\",\n  //     },\n  // ]).current;\n\n  const refreshData = async () => {\n    const result = await ubusApi.show_network_wan_congfig();\n    const {\n      gateway,\n      ipaddr,\n      netmask,\n      proto,\n      username,\n      password,\n      timeout\n    } = result['wan'][0]['values'];\n    const {\n      ip6addr,\n      ip6gw\n    } = result['wan_6'][0]['values'];\n    const protov6 = result['wan_6'][0]['values']['proto'];\n\n    //console.log(\"data: \",protov6)\n    if (proto == \"static\") {\n      if (ipaddr == null) {\n        // setProtov4(\"none\")\n        if (protov6 == \"static\") {\n          if (ip6addr == null) {\n            if (proto == \"pppoe\") {\n              form.setFieldsValue({\n                protov4: \"pppoe\",\n                protov6: \"none\",\n                username: username,\n                password: password,\n                timeout: timeout\n              });\n            } else {\n              // setProtov6(\"none\")\n              form.setFieldsValue({\n                protov4: \"none\",\n                protov6: \"none\"\n              });\n            }\n          } else {\n            // setProtov6(\"static\")\n            // form.setFieldsValue({ gtwv4: gateway, ipaddrv4: ipaddr, netmaskv4: netmask, protov4: protov4, protov6: \"none\", ipaddrv6: ip6addr, gtwv6: ip6gw })\n            form.setFieldsValue({\n              protov4: \"none\",\n              protov6: \"static\",\n              ipaddrv6: ip6addr,\n              gtwv6: ip6gw\n            });\n          }\n        } else {\n          // setProtov6(protov6)\n          form.setFieldsValue({\n            protov4: \"none\",\n            protov6: protov6\n          });\n        }\n      } else {\n        // setProtov4(proto)\n        if (protov6 == \"static\") {\n          if (ip6addr == null) {\n            // setProtov6(\"none\")\n            if (proto == \"pppoe\") {\n              form.setFieldsValue({\n                gtwv4: gateway,\n                ipaddrv4: ipaddr,\n                netmaskv4: netmask,\n                protov4: \"pppoe\",\n                username: username,\n                password: password,\n                timeout: timeout,\n                protov6: \"none\"\n              });\n            } else {\n              form.setFieldsValue({\n                gtwv4: gateway,\n                ipaddrv4: ipaddr,\n                netmaskv4: netmask,\n                protov4: proto,\n                protov6: \"none\"\n              });\n            }\n            //form.setFieldsValue({ gtwv4: gateway, ipaddrv4: ipaddr, netmaskv4: netmask, protov4: proto, protov6: \"none\" })\n          } else {\n            if (proto == \"pppoe\") {\n              form.setFieldsValue({\n                gtwv4: gateway,\n                ipaddrv4: ipaddr,\n                netmaskv4: netmask,\n                protov4: \"pppoe\",\n                username: username,\n                password: password,\n                timeout: timeout,\n                protov6: \"static\",\n                ipaddrv6: ip6addr,\n                gtwv6: ip6gw\n              });\n            } else {\n              // setProtov6(protov6)\n              form.setFieldsValue({\n                gtwv4: gateway,\n                ipaddrv4: ipaddr,\n                netmaskv4: netmask,\n                protov4: proto,\n                protov6: \"static\",\n                ipaddrv6: ip6addr,\n                gtwv6: ip6gw\n              });\n            }\n          }\n        } else {\n          if (proto == \"pppoe\") {\n            // setProtov6(protov6)\n            form.setFieldsValue({\n              gtwv4: gateway,\n              ipaddrv4: ipaddr,\n              netmaskv4: netmask,\n              protov4: \"pppoe\",\n              username: username,\n              password: password,\n              timeout: timeout,\n              protov6: protov6,\n              ipaddrv6: ip6addr,\n              gtwv6: ip6gw\n            });\n          } else {\n            form.setFieldsValue({\n              gtwv4: gateway,\n              ipaddrv4: ipaddr,\n              netmaskv4: netmask,\n              protov4: proto,\n              protov6: protov6,\n              ipaddrv6: ip6addr,\n              gtwv6: ip6gw\n            });\n          }\n        }\n      }\n    } else {\n      // setProtov4(proto)\n      if (protov6 == \"static\") {\n        if (ip6addr == null) {\n          // setProtov6(\"none\")\n          if (proto == \"pppoe\") {\n            form.setFieldsValue({\n              protov4: \"pppoe\",\n              username: username,\n              password: password,\n              timeout: timeout,\n              protov6: \"none\"\n            });\n          }\n          form.setFieldsValue({\n            protov4: proto,\n            username: username,\n            password: password,\n            timeout: timeout,\n            protov6: \"none\"\n          });\n        } else {\n          // setProtov6(\"static\")\n          // form.setFieldsValue({ gtwv4: gateway, ipaddrv4: ipaddr, netmaskv4: netmask, protov4: protov4, protov6: \"none\", ipaddrv6: ip6addr, gtwv6: ip6gw })\n          if (proto == \"pppoe\") {\n            form.setFieldsValue({\n              protov4: \"pppoe\",\n              username: username,\n              password: password,\n              timeout: timeout,\n              protov6: \"static\",\n              ipaddrv6: ip6addr,\n              gtwv6: ip6gw\n            });\n          } else {\n            form.setFieldsValue({\n              protov4: proto,\n              protov6: \"static\",\n              ipaddrv6: ip6addr,\n              gtwv6: ip6gw\n            });\n          }\n        }\n      } else {\n        // setProtov6(protov6)\n        if (proto == \"pppoe\") {\n          form.setFieldsValue({\n            protov4: \"pppoe\",\n            username: username,\n            password: password,\n            timeout: timeout,\n            protov6: protov6\n          });\n        } else {\n          form.setFieldsValue({\n            protov4: proto,\n            protov6: protov6\n          });\n        }\n      }\n    }\n\n    // if (protov6 == \"static\") {\n    //     if (ip6addr == null) {\n    //         setProtov6(\"none\")\n    //     } else {\n    //         setProtov6(protov6)\n    //     }\n    // } else {\n    //     setProtov6(protov6)\n    // }\n  };\n\n  React.useEffect(() => {\n    refreshData();\n  }, []);\n  const formItemLayout = {\n    labelCol: {\n      xs: {\n        span: 24\n      },\n      sm: {\n        span: 4\n      }\n    },\n    wrapperCol: {\n      xs: {\n        span: 24\n      },\n      sm: {\n        span: 16\n      }\n    }\n  };\n  const formItemLayoutWithOutLabel = {\n    wrapperCol: {\n      xs: {\n        span: 24,\n        offset: 0\n      },\n      sm: {\n        span: 20,\n        offset: 4\n      }\n    }\n  };\n  // const refreshData = async () => {\n  // }\n  // React.useEffect(() => {\n  //     refreshData()\n  // }, [])\n  const handleSubmit = async values => {\n    message.info(t('Please_wait_for_configuration'));\n    // if (values.protov4 === \"none\") {\n    //     const result = await ubusApi.config_network_wan()\n    //     console.log(\"result: \", result)\n    // } else {\n    //     const result = await ubusApi.config_network_wan(values.disabled, values.ssid, values.encryption, values.key, null, null)\n    //     console.log(\"result: \", result)\n    // }\n    //const resultpppoe = await ubusApi.config_network_ppoe(values.protov4, values.username, values.password, values.timeout)\n    if (values.protov6 == \"DHCP\") {\n      values.protov6 = \"dhcpv6\";\n    }\n    const result = await ubusApi.config_network_wan(values.protov4, values.username, values.password, values.timeout, values.ipaddrv4, values.netmaskv4, values.gtwv4, values.protov6, values.ipaddrv6, values.gtwv6);\n    console.log(\"result: \", result);\n    values.protov6 = \"\";\n    const key = 'updatable';\n    message.loading({\n      content: t('loading'),\n      key\n    });\n    setTimeout(() => {\n      message.success({\n        content: t('success'),\n        key,\n        duration: 2\n      });\n    }, 1000);\n    setTimeout(() => {\n      window.location.reload();\n    }, 1500);\n  };\n  const slectport = [];\n  for (let i = 10; i < 120; i++) {\n    slectport.push({\n      value: i,\n      label: i\n    });\n  }\n  const [valuev4, setValuev4] = React.useState('');\n  const handleChangev4 = value => setValuev4(value);\n  const [valuev6, setValuev6] = React.useState('');\n  const handleChangev6 = value => setValuev6(value);\n  // console.log(\"valuev4: \", valuev4)\n\n  return (\n    /*#__PURE__*/\n    // <>\n    _jsxDEV(Form, {\n      form: form,\n      labelCol: {\n        span: 6\n      },\n      wrapperCol: {\n        span: 16\n      },\n      onFinish: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Space, {\n        direction: \"vertical\",\n        size: \"middle\",\n        style: {\n          display: 'flex'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          title: \"IPV4\",\n          loading: loading,\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"protov4\",\n            label: t('protocol'),\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              onChange: handleChangev4,\n              options: optionProtoWanv4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            noStyle: true,\n            shouldUpdate: (prevValues, currentValues) => prevValues.gender !== currentValues.gender,\n            children: _ref => {\n              let {\n                getFieldValue\n              } = _ref;\n              return getFieldValue('protov4') == 'pppoe' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n                  name: \"username\",\n                  label: t('username'),\n                  rules: [{\n                    required: true,\n                    message: String(t(\"error_fill\"))\n                  }, {\n                    validator: (_, value) => pattern.test(value) ? Promise.resolve() : Promise.reject(t('White_space_and_special_characters_are_not_valid'))\n                  }],\n                  children: /*#__PURE__*/_jsxDEV(Input, {\n                    allowClear: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 272,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                  name: \"password\",\n                  label: t('password'),\n                  rules: [{\n                    required: true,\n                    min: 6,\n                    message: String(t(\"Password_must_be_minimum_6_characters\"))\n                  }],\n                  children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                  name: \"timeout\",\n                  label: t('timeout'),\n                  children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true) : null;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            noStyle: true,\n            shouldUpdate: (prevValues, currentValues) => prevValues.gender !== currentValues.gender,\n            children: _ref2 => {\n              let {\n                getFieldValue\n              } = _ref2;\n              return getFieldValue('protov4') == 'static' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n                  name: \"ipaddrv4\",\n                  label: t('ip'),\n                  rules: [{\n                    required: true,\n                    message: String(t(\"error_fill\"))\n                  }, {\n                    validator: (_, value) => {\n                      check1 = value.split(\".\");\n                      check2 = check1[check1.length - 1];\n                      return Number(check2) < 256 && patternIpv4.test(value) ? Promise.resolve() : Promise.reject(t('Error_Ip_address'));\n                    }\n                  }],\n                  children: /*#__PURE__*/_jsxDEV(Input, {\n                    allowClear: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 310,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                  name: \"netmaskv4\",\n                  label: \"Netmask\",\n                  rules: [{\n                    required: true,\n                    message: String(t(\"error_fill\"))\n                  }, {\n                    validator: (_, value) => {\n                      check1 = value.split(\".\");\n                      check2 = check1[check1.length - 1];\n                      return Number(check2) < 256 && patternIpv4.test(value) ? Promise.resolve() : Promise.reject(t('Error_Ip_address'));\n                    }\n                  }],\n                  children: /*#__PURE__*/_jsxDEV(Input, {\n                    allowClear: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 325,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                  name: \"gtwv4\",\n                  label: \"Gateway\",\n                  rules: [{\n                    required: true,\n                    message: String(t(\"error_fill\"))\n                  }, {\n                    validator: (_, value) => {\n                      check1 = value.split(\".\");\n                      check2 = check1[check1.length - 1];\n                      return Number(check2) < 256 && patternIpv4.test(value) ? Promise.resolve() : Promise.reject(t('Error_Ip_address'));\n                    }\n                  }],\n                  children: /*#__PURE__*/_jsxDEV(Input, {\n                    allowClear: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 340,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true) : null;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          wrapperCol: {\n            offset: 12,\n            span: 16\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            style: {\n              backgroundColor: 'blue',\n              color: 'white'\n            },\n            children: t('submit')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }, this)\n    // </>\n  );\n};\n_s(WanSettings, \"KebgaysmYmYCdI7xEXGhP6Mm2FE=\", false, function () {\n  return [useTranslation, Form.useForm];\n});\n_c = WanSettings;\nvar _c;\n$RefreshReg$(_c, \"WanSettings\");","map":{"version":3,"names":["Button","Space","Input","Select","message","Form","Card","React","useRef","ubusApi","useTranslation","WanSettings","props","t","pattern","patternIpv4","check1","check2","form","useForm","loading","setLoading","useState","setTimeout","optionStatusWan","label","value","current","optionProtoWanv4","refreshData","result","show_network_wan_congfig","gateway","ipaddr","netmask","proto","username","password","timeout","ip6addr","ip6gw","protov6","setFieldsValue","protov4","ipaddrv6","gtwv6","gtwv4","ipaddrv4","netmaskv4","useEffect","formItemLayout","labelCol","xs","span","sm","wrapperCol","formItemLayoutWithOutLabel","offset","handleSubmit","values","info","config_network_wan","console","log","key","content","success","duration","window","location","reload","slectport","i","push","valuev4","setValuev4","handleChangev4","valuev6","setValuev6","handleChangev6","display","prevValues","currentValues","gender","getFieldValue","required","String","validator","_","test","Promise","resolve","reject","min","split","length","Number","backgroundColor","color"],"sources":["/home/iam/Documents/network/src/components/antd/internet/wan/wan.tsx"],"sourcesContent":["\nimport { Button, Col, Row, Space, Table, Typography, Modal, Input, Select, message, Form, Checkbox, Switch, Card , SelectProps} from 'antd'\nimport React, { useState, useRef } from 'react'\nimport ubusApi from '../../../../service/api/ubus-api'\nimport { useTranslation } from \"react-i18next\"\nimport \"../../../../translations/i18n\"\nimport { current } from '@reduxjs/toolkit'\n\nexport const WanSettings = (props: any) => {\n    const { t } = useTranslation()\n    let pattern = /^[a-zA-Z0-9_.]+$/\n    let patternIpv4 = /^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/\n    let check1: any\n    let check2: any\n    const [form] = Form.useForm()\n    const [loading, setLoading] = React.useState(true)\n    setTimeout(() => {\n        setLoading(false)\n    }, 1000);\n    // const [protov4, setProtov4] = React.useState(\"\")\n    // const [protov6, setProtov6] = React.useState(\"\")\n    // const [ipaddrv4, setIpaddrv4] = React.useState(\"\")\n    // const [netmaskv4, setNetmaskv4] = React.useState(null)\n    // const [gtwv4, setGtwv4] = React.useState(null)\n    // const [ipaddrv6, setIpaddrv6] = React.useState(null)\n    // const [gtwv6, setGtwv6] = React.useState(null)\n\n    const optionStatusWan = useRef([\n        {\n            label: t('enable'),\n            value: \"enable\"\n        },\n        {\n            label: t('disable'),\n            value: \"disable\"\n        },\n    ]).current;\n\n    const optionProtoWanv4 = useRef([\n        {\n            label: t('none'),\n            value: \"none\"\n        },\n        {\n            label: \"DHCP\",\n            value: \"dhcp\"\n        },\n        {\n            label: \"Static\",\n            value: \"static\"\n        },\n        {\n            label: \"PPPOE\",\n            value: \"pppoe\"\n        },\n    ]).current;\n\n    // const optionProtoWanv6 = useRef([\n    //     {\n    //         value: \"none\",\n    //         label: t('none'),\n    //     },\n    //     {\n    //         value: \"dhcpv6\",\n    //         label: \"DHCP\",\n    //     },\n    //     {\n    //         value: \"static\",\n    //         label: \"Static\",\n    //     },\n    // ]).current;\n\n    const refreshData = async () => {\n        const result = await ubusApi.show_network_wan_congfig()\n        const { gateway, ipaddr, netmask, proto, username, password, timeout } = result['wan'][0]['values']\n        const { ip6addr, ip6gw } = result['wan_6'][0]['values']\n        const protov6  = result['wan_6'][0]['values']['proto']\n\n        //console.log(\"data: \",protov6)\n        if (proto == \"static\") {\n            if (ipaddr == null) {\n                // setProtov4(\"none\")\n                if (protov6 == \"static\") {\n                    if (ip6addr == null) {\n                        if (proto == \"pppoe\") {\n                            form.setFieldsValue({ protov4: \"pppoe\", protov6: \"none\", username: username, password: password, timeout: timeout })\n                        } else {\n                            // setProtov6(\"none\")\n                            form.setFieldsValue({ protov4: \"none\", protov6: \"none\" })\n                        }\n                    } else {\n                        // setProtov6(\"static\")\n                        // form.setFieldsValue({ gtwv4: gateway, ipaddrv4: ipaddr, netmaskv4: netmask, protov4: protov4, protov6: \"none\", ipaddrv6: ip6addr, gtwv6: ip6gw })\n                        form.setFieldsValue({ protov4: \"none\", protov6: \"static\", ipaddrv6: ip6addr, gtwv6: ip6gw })\n                    }\n                } else {\n                    // setProtov6(protov6)\n                    form.setFieldsValue({ protov4: \"none\", protov6: protov6 })\n                }\n            } else {\n                // setProtov4(proto)\n                if (protov6 == \"static\") {\n                    if (ip6addr == null) {\n                        // setProtov6(\"none\")\n                        if (proto == \"pppoe\") {\n                            form.setFieldsValue({ gtwv4: gateway, ipaddrv4: ipaddr, netmaskv4: netmask, protov4: \"pppoe\", username: username, password: password, timeout: timeout, protov6: \"none\" })\n                        }\n                        else {\n                            form.setFieldsValue({ gtwv4: gateway, ipaddrv4: ipaddr, netmaskv4: netmask, protov4: proto, protov6: \"none\" })\n                        }\n                        //form.setFieldsValue({ gtwv4: gateway, ipaddrv4: ipaddr, netmaskv4: netmask, protov4: proto, protov6: \"none\" })\n                    } else {\n                        if (proto == \"pppoe\") {\n                            form.setFieldsValue({ gtwv4: gateway, ipaddrv4: ipaddr, netmaskv4: netmask, protov4: \"pppoe\", username: username, password: password, timeout: timeout, protov6: \"static\", ipaddrv6: ip6addr, gtwv6: ip6gw })\n                        }\n                        else {\n                            // setProtov6(protov6)\n                            form.setFieldsValue({ gtwv4: gateway, ipaddrv4: ipaddr, netmaskv4: netmask, protov4: proto, protov6: \"static\", ipaddrv6: ip6addr, gtwv6: ip6gw })\n                        }\n                    }\n                } else {\n                    if (proto == \"pppoe\") {\n                        // setProtov6(protov6)\n                        form.setFieldsValue({ gtwv4: gateway, ipaddrv4: ipaddr, netmaskv4: netmask, protov4: \"pppoe\", username: username, password: password, timeout: timeout, protov6: protov6, ipaddrv6: ip6addr, gtwv6: ip6gw })\n                    } else {\n                        form.setFieldsValue({ gtwv4: gateway, ipaddrv4: ipaddr, netmaskv4: netmask, protov4: proto, protov6: protov6, ipaddrv6: ip6addr, gtwv6: ip6gw })\n                    }\n                }\n            }\n        } else {\n            // setProtov4(proto)\n            if (protov6 == \"static\") {\n                if (ip6addr == null) {\n                    // setProtov6(\"none\")\n                    if (proto == \"pppoe\") {\n                        form.setFieldsValue({ protov4: \"pppoe\", username: username, password: password, timeout: timeout, protov6: \"none\" })\n                    }\n                    form.setFieldsValue({ protov4: proto, username: username, password: password, timeout: timeout, protov6: \"none\" })\n                } else {\n                    // setProtov6(\"static\")\n                    // form.setFieldsValue({ gtwv4: gateway, ipaddrv4: ipaddr, netmaskv4: netmask, protov4: protov4, protov6: \"none\", ipaddrv6: ip6addr, gtwv6: ip6gw })\n                    if (proto == \"pppoe\") {\n                        form.setFieldsValue({ protov4: \"pppoe\", username: username, password: password, timeout: timeout, protov6: \"static\", ipaddrv6: ip6addr, gtwv6: ip6gw })\n                    } else {\n                        form.setFieldsValue({ protov4: proto, protov6: \"static\", ipaddrv6: ip6addr, gtwv6: ip6gw })\n                    }\n                }\n            } else {\n                // setProtov6(protov6)\n                if (proto == \"pppoe\") {\n                    form.setFieldsValue({ protov4: \"pppoe\", username: username, password: password, timeout: timeout, protov6: protov6 })\n                } else {\n                    form.setFieldsValue({ protov4: proto, protov6: protov6 })\n                }\n            }\n        }\n\n        // if (protov6 == \"static\") {\n        //     if (ip6addr == null) {\n        //         setProtov6(\"none\")\n        //     } else {\n        //         setProtov6(protov6)\n        //     }\n        // } else {\n        //     setProtov6(protov6)\n        // }\n\n    }\n    React.useEffect(() => { refreshData() }, [])\n\n    const formItemLayout = {\n        labelCol: {\n            xs: { span: 24 },\n            sm: { span: 4 },\n        },\n        wrapperCol: {\n            xs: { span: 24 },\n            sm: { span: 16 },\n        },\n    }\n\n    const formItemLayoutWithOutLabel = {\n        wrapperCol: {\n            xs: { span: 24, offset: 0 },\n            sm: { span: 20, offset: 4 },\n        },\n    }\n    // const refreshData = async () => {\n    // }\n    // React.useEffect(() => {\n    //     refreshData()\n    // }, [])\n    const handleSubmit = async (values: any) => {\n        message.info(t('Please_wait_for_configuration'))\n        // if (values.protov4 === \"none\") {\n        //     const result = await ubusApi.config_network_wan()\n        //     console.log(\"result: \", result)\n        // } else {\n        //     const result = await ubusApi.config_network_wan(values.disabled, values.ssid, values.encryption, values.key, null, null)\n        //     console.log(\"result: \", result)\n        // }\n        //const resultpppoe = await ubusApi.config_network_ppoe(values.protov4, values.username, values.password, values.timeout)\n        if (values.protov6 == \"DHCP\"){\n            values.protov6=\"dhcpv6\"\n        }\n\n        const result = await ubusApi.config_network_wan(values.protov4, values.username, values.password, values.timeout, values.ipaddrv4, values.netmaskv4, values.gtwv4, values.protov6, values.ipaddrv6, values.gtwv6)     \n        console.log(\"result: \", result)\n        values.protov6=\"\"\n        const key = 'updatable';\n        message.loading({ content: t('loading'), key });\n        setTimeout(() => {\n            message.success({ content: t('success'), key, duration: 2 });\n        }, 1000);\n        setTimeout(() => {\n            window.location.reload()\n        }, 1500);\n    }\n    const slectport: SelectProps['options'] = [];\n    for (let i = 10; i < 120; i++) {\n        slectport.push({\n            value: i,\n            label: i,\n        });\n    }\n    const [valuev4, setValuev4] = React.useState('')\n    const handleChangev4 = (value: any) => setValuev4(value)\n    const [valuev6, setValuev6] = React.useState('')\n    const handleChangev6 = (value: any) => setValuev6(value)\n    // console.log(\"valuev4: \", valuev4)\n\n    return (\n        // <>\n        <Form form={form}\n            labelCol={{ span: 6 }}\n            wrapperCol={{ span: 16 }}\n            onFinish={handleSubmit}>\n            <Space\n                direction=\"vertical\"\n                size=\"middle\"\n                style={{\n                    display: 'flex',\n                }}\n            >\n                <Card title=\"IPV4\" loading={loading}>\n                    <Form.Item name=\"protov4\" label={t('protocol')}\n                    >\n                        <Select\n                            onChange={handleChangev4}\n                            options={optionProtoWanv4}\n                        />\n                    </Form.Item>\n                    <Form.Item\n                        noStyle\n                        shouldUpdate={(prevValues, currentValues) => prevValues.gender !== currentValues.gender}\n                    >\n                        {\n                            ({ getFieldValue }) =>\n                                getFieldValue('protov4') ==\n                                    'pppoe' ? (\n                                    <>\n                                        <Form.Item name=\"username\"\n                                             label={t('username')} \n                                             rules={[\n                                                { required: true, message: String(t(\"error_fill\"))  },\n                                                {\n                                                    validator: (_, value) =>\n                                                        pattern.test(value) ? Promise.resolve() : Promise.reject(t('White_space_and_special_characters_are_not_valid'))\n                                                }\n                                            ]}\n                                        >\n                                            <Input allowClear></Input>\n                                        </Form.Item>\n                                        <Form.Item name=\"password\"\n                                            label={t('password')} rules={[{ required: true, min: 6, message: String(t(\"Password_must_be_minimum_6_characters\")) }]}\n                                        >\n                                            <Input.Password></Input.Password>\n                                        </Form.Item>\n                                        <Form.Item name=\"timeout\"\n                                            label={t('timeout')} \n                                        >  \n                                        <Input></Input>\n                                        </Form.Item>\n                                    </>\n                                ) : null\n                        }\n                    </Form.Item>\n                    <Form.Item\n                        noStyle\n                        shouldUpdate={(prevValues, currentValues) => prevValues.gender !== currentValues.gender}\n                    >\n                        {\n                            ({ getFieldValue }) =>\n                                getFieldValue('protov4') ==\n                                    'static' ? (\n                                    <>\n                                        <Form.Item name=\"ipaddrv4\"\n                                            label={t('ip')} \n                                            rules={[\n                                                { required: true, message: String(t(\"error_fill\")) },\n                                                {\n                                                    validator: (_, value) => {\n                                                      check1 = value.split(\".\")\n                                                      check2 = check1[check1.length - 1]\n                                                      return (Number(check2) < 256 && patternIpv4.test(value)) ? Promise.resolve() : Promise.reject(t('Error_Ip_address'))\n                                                    }\n                                                }\n                                            ]}\n                                        >\n                                            <Input allowClear ></Input>\n                                        </Form.Item>\n                                        <Form.Item name=\"netmaskv4\"\n                                            label=\"Netmask\"\n                                            rules={[\n                                                { required: true, message: String(t(\"error_fill\")) },\n                                                {\n                                                    validator: (_, value) => {\n                                                      check1 = value.split(\".\")\n                                                      check2 = check1[check1.length - 1]\n                                                      return (Number(check2) < 256 && patternIpv4.test(value)) ? Promise.resolve() : Promise.reject(t('Error_Ip_address'))\n                                                    }\n                                                }\n                                            ]}\n                                        >\n                                            <Input allowClear ></Input>\n                                        </Form.Item>\n                                        <Form.Item name=\"gtwv4\"\n                                            label=\"Gateway\"\n                                            rules={[\n                                                { required: true, message: String(t(\"error_fill\")) },\n                                                {\n                                                    validator: (_, value) => {\n                                                      check1 = value.split(\".\")\n                                                      check2 = check1[check1.length - 1]\n                                                      return (Number(check2) < 256 && patternIpv4.test(value)) ? Promise.resolve() : Promise.reject(t('Error_Ip_address'))\n                                                    }\n                                                }\n                                            ]}\n                                        >\n                                            <Input allowClear ></Input>\n                                        </Form.Item>\n                                    </>\n                                ) : null\n                        }\n                    </Form.Item>\n\n                </Card>\n                {/* <Card title=\"IPV6\" loading={loading}>\n                    <Form.Item name=\"protov6\"\n                        label={t('protocol')}\n                    >\n                        <Select\n                            onChange={handleChangev6}\n                            options={optionProtoWanv6}\n                        />\n                    </Form.Item>\n                    <Form.Item\n                        noStyle\n                        shouldUpdate={(prevValues, currentValues) => prevValues.gender !== currentValues.gender}\n                    >\n                        {\n                            ({ getFieldValue }) =>\n                                getFieldValue('protov6') ==\n                                    'static' ? (\n                                    <>\n                                        <Form.Item name=\"ipaddrv6\"\n                                            label={t('ip')}\n                                        >\n                                            <Input></Input>\n                                        </Form.Item>\n                                        <Form.Item name=\"gtwv6\"\n                                            label=\"Gateway\"\n                                        >\n                                            <Input></Input>\n                                        </Form.Item>\n                                    </>\n                                ) : null}\n                    </Form.Item>\n                </Card> */}\n                <Form.Item wrapperCol={{ offset: 12, span: 16 }}>\n                    <Button\n                        type='primary'\n                        htmlType=\"submit\"\n                        style={{ backgroundColor: 'blue', color: 'white' }}\n                    >\n                        {t('submit')}\n                    </Button>\n                </Form.Item>\n            </Space>\n        </Form>\n        // </>\n    )\n}\n\n"],"mappings":";;AACA,SAASA,MAAM,EAAYC,KAAK,EAA4BC,KAAK,EAAEC,MAAM,EAAEC,OAAO,EAAEC,IAAI,EAAoBC,IAAI,QAAqB,MAAM;AAC3I,OAAOC,KAAK,IAAcC,MAAM,QAAQ,OAAO;AAC/C,OAAOC,OAAO,MAAM,kCAAkC;AACtD,SAASC,cAAc,QAAQ,eAAe;AAC9C,OAAO,+BAA+B;AAAA;AAAA;AAGtC,OAAO,MAAMC,WAAW,GAAIC,KAAU,IAAK;EAAA;EACvC,MAAM;IAAEC;EAAE,CAAC,GAAGH,cAAc,EAAE;EAC9B,IAAII,OAAO,GAAG,kBAAkB;EAChC,IAAIC,WAAW,GAAG,uFAAuF;EACzG,IAAIC,MAAW;EACf,IAAIC,MAAW;EACf,MAAM,CAACC,IAAI,CAAC,GAAGb,IAAI,CAACc,OAAO,EAAE;EAC7B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGd,KAAK,CAACe,QAAQ,CAAC,IAAI,CAAC;EAClDC,UAAU,CAAC,MAAM;IACbF,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,IAAI,CAAC;EACR;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMG,eAAe,GAAGhB,MAAM,CAAC,CAC3B;IACIiB,KAAK,EAAEZ,CAAC,CAAC,QAAQ,CAAC;IAClBa,KAAK,EAAE;EACX,CAAC,EACD;IACID,KAAK,EAAEZ,CAAC,CAAC,SAAS,CAAC;IACnBa,KAAK,EAAE;EACX,CAAC,CACJ,CAAC,CAACC,OAAO;EAEV,MAAMC,gBAAgB,GAAGpB,MAAM,CAAC,CAC5B;IACIiB,KAAK,EAAEZ,CAAC,CAAC,MAAM,CAAC;IAChBa,KAAK,EAAE;EACX,CAAC,EACD;IACID,KAAK,EAAE,MAAM;IACbC,KAAK,EAAE;EACX,CAAC,EACD;IACID,KAAK,EAAE,QAAQ;IACfC,KAAK,EAAE;EACX,CAAC,EACD;IACID,KAAK,EAAE,OAAO;IACdC,KAAK,EAAE;EACX,CAAC,CACJ,CAAC,CAACC,OAAO;;EAEV;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAME,WAAW,GAAG,YAAY;IAC5B,MAAMC,MAAM,GAAG,MAAMrB,OAAO,CAACsB,wBAAwB,EAAE;IACvD,MAAM;MAAEC,OAAO;MAAEC,MAAM;MAAEC,OAAO;MAAEC,KAAK;MAAEC,QAAQ;MAAEC,QAAQ;MAAEC;IAAQ,CAAC,GAAGR,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;IACnG,MAAM;MAAES,OAAO;MAAEC;IAAM,CAAC,GAAGV,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;IACvD,MAAMW,OAAO,GAAIX,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC;;IAEtD;IACA,IAAIK,KAAK,IAAI,QAAQ,EAAE;MACnB,IAAIF,MAAM,IAAI,IAAI,EAAE;QAChB;QACA,IAAIQ,OAAO,IAAI,QAAQ,EAAE;UACrB,IAAIF,OAAO,IAAI,IAAI,EAAE;YACjB,IAAIJ,KAAK,IAAI,OAAO,EAAE;cAClBjB,IAAI,CAACwB,cAAc,CAAC;gBAAEC,OAAO,EAAE,OAAO;gBAAEF,OAAO,EAAE,MAAM;gBAAEL,QAAQ,EAAEA,QAAQ;gBAAEC,QAAQ,EAAEA,QAAQ;gBAAEC,OAAO,EAAEA;cAAQ,CAAC,CAAC;YACxH,CAAC,MAAM;cACH;cACApB,IAAI,CAACwB,cAAc,CAAC;gBAAEC,OAAO,EAAE,MAAM;gBAAEF,OAAO,EAAE;cAAO,CAAC,CAAC;YAC7D;UACJ,CAAC,MAAM;YACH;YACA;YACAvB,IAAI,CAACwB,cAAc,CAAC;cAAEC,OAAO,EAAE,MAAM;cAAEF,OAAO,EAAE,QAAQ;cAAEG,QAAQ,EAAEL,OAAO;cAAEM,KAAK,EAAEL;YAAM,CAAC,CAAC;UAChG;QACJ,CAAC,MAAM;UACH;UACAtB,IAAI,CAACwB,cAAc,CAAC;YAAEC,OAAO,EAAE,MAAM;YAAEF,OAAO,EAAEA;UAAQ,CAAC,CAAC;QAC9D;MACJ,CAAC,MAAM;QACH;QACA,IAAIA,OAAO,IAAI,QAAQ,EAAE;UACrB,IAAIF,OAAO,IAAI,IAAI,EAAE;YACjB;YACA,IAAIJ,KAAK,IAAI,OAAO,EAAE;cAClBjB,IAAI,CAACwB,cAAc,CAAC;gBAAEI,KAAK,EAAEd,OAAO;gBAAEe,QAAQ,EAAEd,MAAM;gBAAEe,SAAS,EAAEd,OAAO;gBAAES,OAAO,EAAE,OAAO;gBAAEP,QAAQ,EAAEA,QAAQ;gBAAEC,QAAQ,EAAEA,QAAQ;gBAAEC,OAAO,EAAEA,OAAO;gBAAEG,OAAO,EAAE;cAAO,CAAC,CAAC;YAC9K,CAAC,MACI;cACDvB,IAAI,CAACwB,cAAc,CAAC;gBAAEI,KAAK,EAAEd,OAAO;gBAAEe,QAAQ,EAAEd,MAAM;gBAAEe,SAAS,EAAEd,OAAO;gBAAES,OAAO,EAAER,KAAK;gBAAEM,OAAO,EAAE;cAAO,CAAC,CAAC;YAClH;YACA;UACJ,CAAC,MAAM;YACH,IAAIN,KAAK,IAAI,OAAO,EAAE;cAClBjB,IAAI,CAACwB,cAAc,CAAC;gBAAEI,KAAK,EAAEd,OAAO;gBAAEe,QAAQ,EAAEd,MAAM;gBAAEe,SAAS,EAAEd,OAAO;gBAAES,OAAO,EAAE,OAAO;gBAAEP,QAAQ,EAAEA,QAAQ;gBAAEC,QAAQ,EAAEA,QAAQ;gBAAEC,OAAO,EAAEA,OAAO;gBAAEG,OAAO,EAAE,QAAQ;gBAAEG,QAAQ,EAAEL,OAAO;gBAAEM,KAAK,EAAEL;cAAM,CAAC,CAAC;YACjN,CAAC,MACI;cACD;cACAtB,IAAI,CAACwB,cAAc,CAAC;gBAAEI,KAAK,EAAEd,OAAO;gBAAEe,QAAQ,EAAEd,MAAM;gBAAEe,SAAS,EAAEd,OAAO;gBAAES,OAAO,EAAER,KAAK;gBAAEM,OAAO,EAAE,QAAQ;gBAAEG,QAAQ,EAAEL,OAAO;gBAAEM,KAAK,EAAEL;cAAM,CAAC,CAAC;YACrJ;UACJ;QACJ,CAAC,MAAM;UACH,IAAIL,KAAK,IAAI,OAAO,EAAE;YAClB;YACAjB,IAAI,CAACwB,cAAc,CAAC;cAAEI,KAAK,EAAEd,OAAO;cAAEe,QAAQ,EAAEd,MAAM;cAAEe,SAAS,EAAEd,OAAO;cAAES,OAAO,EAAE,OAAO;cAAEP,QAAQ,EAAEA,QAAQ;cAAEC,QAAQ,EAAEA,QAAQ;cAAEC,OAAO,EAAEA,OAAO;cAAEG,OAAO,EAAEA,OAAO;cAAEG,QAAQ,EAAEL,OAAO;cAAEM,KAAK,EAAEL;YAAM,CAAC,CAAC;UAChN,CAAC,MAAM;YACHtB,IAAI,CAACwB,cAAc,CAAC;cAAEI,KAAK,EAAEd,OAAO;cAAEe,QAAQ,EAAEd,MAAM;cAAEe,SAAS,EAAEd,OAAO;cAAES,OAAO,EAAER,KAAK;cAAEM,OAAO,EAAEA,OAAO;cAAEG,QAAQ,EAAEL,OAAO;cAAEM,KAAK,EAAEL;YAAM,CAAC,CAAC;UACpJ;QACJ;MACJ;IACJ,CAAC,MAAM;MACH;MACA,IAAIC,OAAO,IAAI,QAAQ,EAAE;QACrB,IAAIF,OAAO,IAAI,IAAI,EAAE;UACjB;UACA,IAAIJ,KAAK,IAAI,OAAO,EAAE;YAClBjB,IAAI,CAACwB,cAAc,CAAC;cAAEC,OAAO,EAAE,OAAO;cAAEP,QAAQ,EAAEA,QAAQ;cAAEC,QAAQ,EAAEA,QAAQ;cAAEC,OAAO,EAAEA,OAAO;cAAEG,OAAO,EAAE;YAAO,CAAC,CAAC;UACxH;UACAvB,IAAI,CAACwB,cAAc,CAAC;YAAEC,OAAO,EAAER,KAAK;YAAEC,QAAQ,EAAEA,QAAQ;YAAEC,QAAQ,EAAEA,QAAQ;YAAEC,OAAO,EAAEA,OAAO;YAAEG,OAAO,EAAE;UAAO,CAAC,CAAC;QACtH,CAAC,MAAM;UACH;UACA;UACA,IAAIN,KAAK,IAAI,OAAO,EAAE;YAClBjB,IAAI,CAACwB,cAAc,CAAC;cAAEC,OAAO,EAAE,OAAO;cAAEP,QAAQ,EAAEA,QAAQ;cAAEC,QAAQ,EAAEA,QAAQ;cAAEC,OAAO,EAAEA,OAAO;cAAEG,OAAO,EAAE,QAAQ;cAAEG,QAAQ,EAAEL,OAAO;cAAEM,KAAK,EAAEL;YAAM,CAAC,CAAC;UAC3J,CAAC,MAAM;YACHtB,IAAI,CAACwB,cAAc,CAAC;cAAEC,OAAO,EAAER,KAAK;cAAEM,OAAO,EAAE,QAAQ;cAAEG,QAAQ,EAAEL,OAAO;cAAEM,KAAK,EAAEL;YAAM,CAAC,CAAC;UAC/F;QACJ;MACJ,CAAC,MAAM;QACH;QACA,IAAIL,KAAK,IAAI,OAAO,EAAE;UAClBjB,IAAI,CAACwB,cAAc,CAAC;YAAEC,OAAO,EAAE,OAAO;YAAEP,QAAQ,EAAEA,QAAQ;YAAEC,QAAQ,EAAEA,QAAQ;YAAEC,OAAO,EAAEA,OAAO;YAAEG,OAAO,EAAEA;UAAQ,CAAC,CAAC;QACzH,CAAC,MAAM;UACHvB,IAAI,CAACwB,cAAc,CAAC;YAAEC,OAAO,EAAER,KAAK;YAAEM,OAAO,EAAEA;UAAQ,CAAC,CAAC;QAC7D;MACJ;IACJ;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAEJ,CAAC;;EACDlC,KAAK,CAAC0C,SAAS,CAAC,MAAM;IAAEpB,WAAW,EAAE;EAAC,CAAC,EAAE,EAAE,CAAC;EAE5C,MAAMqB,cAAc,GAAG;IACnBC,QAAQ,EAAE;MACNC,EAAE,EAAE;QAAEC,IAAI,EAAE;MAAG,CAAC;MAChBC,EAAE,EAAE;QAAED,IAAI,EAAE;MAAE;IAClB,CAAC;IACDE,UAAU,EAAE;MACRH,EAAE,EAAE;QAAEC,IAAI,EAAE;MAAG,CAAC;MAChBC,EAAE,EAAE;QAAED,IAAI,EAAE;MAAG;IACnB;EACJ,CAAC;EAED,MAAMG,0BAA0B,GAAG;IAC/BD,UAAU,EAAE;MACRH,EAAE,EAAE;QAAEC,IAAI,EAAE,EAAE;QAAEI,MAAM,EAAE;MAAE,CAAC;MAC3BH,EAAE,EAAE;QAAED,IAAI,EAAE,EAAE;QAAEI,MAAM,EAAE;MAAE;IAC9B;EACJ,CAAC;EACD;EACA;EACA;EACA;EACA;EACA,MAAMC,YAAY,GAAG,MAAOC,MAAW,IAAK;IACxCvD,OAAO,CAACwD,IAAI,CAAC/C,CAAC,CAAC,+BAA+B,CAAC,CAAC;IAChD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI8C,MAAM,CAAClB,OAAO,IAAI,MAAM,EAAC;MACzBkB,MAAM,CAAClB,OAAO,GAAC,QAAQ;IAC3B;IAEA,MAAMX,MAAM,GAAG,MAAMrB,OAAO,CAACoD,kBAAkB,CAACF,MAAM,CAAChB,OAAO,EAAEgB,MAAM,CAACvB,QAAQ,EAAEuB,MAAM,CAACtB,QAAQ,EAAEsB,MAAM,CAACrB,OAAO,EAAEqB,MAAM,CAACZ,QAAQ,EAAEY,MAAM,CAACX,SAAS,EAAEW,MAAM,CAACb,KAAK,EAAEa,MAAM,CAAClB,OAAO,EAAEkB,MAAM,CAACf,QAAQ,EAAEe,MAAM,CAACd,KAAK,CAAC;IACjNiB,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEjC,MAAM,CAAC;IAC/B6B,MAAM,CAAClB,OAAO,GAAC,EAAE;IACjB,MAAMuB,GAAG,GAAG,WAAW;IACvB5D,OAAO,CAACgB,OAAO,CAAC;MAAE6C,OAAO,EAAEpD,CAAC,CAAC,SAAS,CAAC;MAAEmD;IAAI,CAAC,CAAC;IAC/CzC,UAAU,CAAC,MAAM;MACbnB,OAAO,CAAC8D,OAAO,CAAC;QAAED,OAAO,EAAEpD,CAAC,CAAC,SAAS,CAAC;QAAEmD,GAAG;QAAEG,QAAQ,EAAE;MAAE,CAAC,CAAC;IAChE,CAAC,EAAE,IAAI,CAAC;IACR5C,UAAU,CAAC,MAAM;MACb6C,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;IAC5B,CAAC,EAAE,IAAI,CAAC;EACZ,CAAC;EACD,MAAMC,SAAiC,GAAG,EAAE;EAC5C,KAAK,IAAIC,CAAC,GAAG,EAAE,EAAEA,CAAC,GAAG,GAAG,EAAEA,CAAC,EAAE,EAAE;IAC3BD,SAAS,CAACE,IAAI,CAAC;MACX/C,KAAK,EAAE8C,CAAC;MACR/C,KAAK,EAAE+C;IACX,CAAC,CAAC;EACN;EACA,MAAM,CAACE,OAAO,EAAEC,UAAU,CAAC,GAAGpE,KAAK,CAACe,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMsD,cAAc,GAAIlD,KAAU,IAAKiD,UAAU,CAACjD,KAAK,CAAC;EACxD,MAAM,CAACmD,OAAO,EAAEC,UAAU,CAAC,GAAGvE,KAAK,CAACe,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMyD,cAAc,GAAIrD,KAAU,IAAKoD,UAAU,CAACpD,KAAK,CAAC;EACxD;;EAEA;IAAA;IACI;IACA,QAAC,IAAI;MAAC,IAAI,EAAER,IAAK;MACb,QAAQ,EAAE;QAAEmC,IAAI,EAAE;MAAE,CAAE;MACtB,UAAU,EAAE;QAAEA,IAAI,EAAE;MAAG,CAAE;MACzB,QAAQ,EAAEK,YAAa;MAAA,uBACvB,QAAC,KAAK;QACF,SAAS,EAAC,UAAU;QACpB,IAAI,EAAC,QAAQ;QACb,KAAK,EAAE;UACHsB,OAAO,EAAE;QACb,CAAE;QAAA,wBAEF,QAAC,IAAI;UAAC,KAAK,EAAC,MAAM;UAAC,OAAO,EAAE5D,OAAQ;UAAA,wBAChC,QAAC,IAAI,CAAC,IAAI;YAAC,IAAI,EAAC,SAAS;YAAC,KAAK,EAAEP,CAAC,CAAC,UAAU,CAAE;YAAA,uBAE3C,QAAC,MAAM;cACH,QAAQ,EAAE+D,cAAe;cACzB,OAAO,EAAEhD;YAAiB;cAAA;cAAA;cAAA;YAAA;UAC5B;YAAA;YAAA;YAAA;UAAA,QACM,eACZ,QAAC,IAAI,CAAC,IAAI;YACN,OAAO;YACP,YAAY,EAAE,CAACqD,UAAU,EAAEC,aAAa,KAAKD,UAAU,CAACE,MAAM,KAAKD,aAAa,CAACC,MAAO;YAAA,UAGpF;cAAA,IAAC;gBAAEC;cAAc,CAAC;cAAA,OACdA,aAAa,CAAC,SAAS,CAAC,IACpB,OAAO,gBACP;gBAAA,wBACI,QAAC,IAAI,CAAC,IAAI;kBAAC,IAAI,EAAC,UAAU;kBACrB,KAAK,EAAEvE,CAAC,CAAC,UAAU,CAAE;kBACrB,KAAK,EAAE,CACJ;oBAAEwE,QAAQ,EAAE,IAAI;oBAAEjF,OAAO,EAAEkF,MAAM,CAACzE,CAAC,CAAC,YAAY,CAAC;kBAAG,CAAC,EACrD;oBACI0E,SAAS,EAAE,CAACC,CAAC,EAAE9D,KAAK,KAChBZ,OAAO,CAAC2E,IAAI,CAAC/D,KAAK,CAAC,GAAGgE,OAAO,CAACC,OAAO,EAAE,GAAGD,OAAO,CAACE,MAAM,CAAC/E,CAAC,CAAC,kDAAkD,CAAC;kBACtH,CAAC,CACH;kBAAA,uBAEF,QAAC,KAAK;oBAAC,UAAU;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA;gBAAS;kBAAA;kBAAA;kBAAA;gBAAA,QAClB,eACZ,QAAC,IAAI,CAAC,IAAI;kBAAC,IAAI,EAAC,UAAU;kBACtB,KAAK,EAAEA,CAAC,CAAC,UAAU,CAAE;kBAAC,KAAK,EAAE,CAAC;oBAAEwE,QAAQ,EAAE,IAAI;oBAAEQ,GAAG,EAAE,CAAC;oBAAEzF,OAAO,EAAEkF,MAAM,CAACzE,CAAC,CAAC,uCAAuC,CAAC;kBAAE,CAAC,CAAE;kBAAA,uBAEvH,QAAC,KAAK,CAAC,QAAQ;oBAAA;oBAAA;oBAAA;kBAAA;gBAAkB;kBAAA;kBAAA;kBAAA;gBAAA,QACzB,eACZ,QAAC,IAAI,CAAC,IAAI;kBAAC,IAAI,EAAC,SAAS;kBACrB,KAAK,EAAEA,CAAC,CAAC,SAAS,CAAE;kBAAA,uBAExB,QAAC,KAAK;oBAAA;oBAAA;oBAAA;kBAAA;gBAAS;kBAAA;kBAAA;kBAAA;gBAAA,QACH;cAAA,gBACb,GACH,IAAI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAER,eACZ,QAAC,IAAI,CAAC,IAAI;YACN,OAAO;YACP,YAAY,EAAE,CAACoE,UAAU,EAAEC,aAAa,KAAKD,UAAU,CAACE,MAAM,KAAKD,aAAa,CAACC,MAAO;YAAA,UAGpF;cAAA,IAAC;gBAAEC;cAAc,CAAC;cAAA,OACdA,aAAa,CAAC,SAAS,CAAC,IACpB,QAAQ,gBACR;gBAAA,wBACI,QAAC,IAAI,CAAC,IAAI;kBAAC,IAAI,EAAC,UAAU;kBACtB,KAAK,EAAEvE,CAAC,CAAC,IAAI,CAAE;kBACf,KAAK,EAAE,CACH;oBAAEwE,QAAQ,EAAE,IAAI;oBAAEjF,OAAO,EAAEkF,MAAM,CAACzE,CAAC,CAAC,YAAY,CAAC;kBAAE,CAAC,EACpD;oBACI0E,SAAS,EAAE,CAACC,CAAC,EAAE9D,KAAK,KAAK;sBACvBV,MAAM,GAAGU,KAAK,CAACoE,KAAK,CAAC,GAAG,CAAC;sBACzB7E,MAAM,GAAGD,MAAM,CAACA,MAAM,CAAC+E,MAAM,GAAG,CAAC,CAAC;sBAClC,OAAQC,MAAM,CAAC/E,MAAM,CAAC,GAAG,GAAG,IAAIF,WAAW,CAAC0E,IAAI,CAAC/D,KAAK,CAAC,GAAIgE,OAAO,CAACC,OAAO,EAAE,GAAGD,OAAO,CAACE,MAAM,CAAC/E,CAAC,CAAC,kBAAkB,CAAC,CAAC;oBACtH;kBACJ,CAAC,CACH;kBAAA,uBAEF,QAAC,KAAK;oBAAC,UAAU;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA;gBAAU;kBAAA;kBAAA;kBAAA;gBAAA,QACnB,eACZ,QAAC,IAAI,CAAC,IAAI;kBAAC,IAAI,EAAC,WAAW;kBACvB,KAAK,EAAC,SAAS;kBACf,KAAK,EAAE,CACH;oBAAEwE,QAAQ,EAAE,IAAI;oBAAEjF,OAAO,EAAEkF,MAAM,CAACzE,CAAC,CAAC,YAAY,CAAC;kBAAE,CAAC,EACpD;oBACI0E,SAAS,EAAE,CAACC,CAAC,EAAE9D,KAAK,KAAK;sBACvBV,MAAM,GAAGU,KAAK,CAACoE,KAAK,CAAC,GAAG,CAAC;sBACzB7E,MAAM,GAAGD,MAAM,CAACA,MAAM,CAAC+E,MAAM,GAAG,CAAC,CAAC;sBAClC,OAAQC,MAAM,CAAC/E,MAAM,CAAC,GAAG,GAAG,IAAIF,WAAW,CAAC0E,IAAI,CAAC/D,KAAK,CAAC,GAAIgE,OAAO,CAACC,OAAO,EAAE,GAAGD,OAAO,CAACE,MAAM,CAAC/E,CAAC,CAAC,kBAAkB,CAAC,CAAC;oBACtH;kBACJ,CAAC,CACH;kBAAA,uBAEF,QAAC,KAAK;oBAAC,UAAU;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA;gBAAU;kBAAA;kBAAA;kBAAA;gBAAA,QACnB,eACZ,QAAC,IAAI,CAAC,IAAI;kBAAC,IAAI,EAAC,OAAO;kBACnB,KAAK,EAAC,SAAS;kBACf,KAAK,EAAE,CACH;oBAAEwE,QAAQ,EAAE,IAAI;oBAAEjF,OAAO,EAAEkF,MAAM,CAACzE,CAAC,CAAC,YAAY,CAAC;kBAAE,CAAC,EACpD;oBACI0E,SAAS,EAAE,CAACC,CAAC,EAAE9D,KAAK,KAAK;sBACvBV,MAAM,GAAGU,KAAK,CAACoE,KAAK,CAAC,GAAG,CAAC;sBACzB7E,MAAM,GAAGD,MAAM,CAACA,MAAM,CAAC+E,MAAM,GAAG,CAAC,CAAC;sBAClC,OAAQC,MAAM,CAAC/E,MAAM,CAAC,GAAG,GAAG,IAAIF,WAAW,CAAC0E,IAAI,CAAC/D,KAAK,CAAC,GAAIgE,OAAO,CAACC,OAAO,EAAE,GAAGD,OAAO,CAACE,MAAM,CAAC/E,CAAC,CAAC,kBAAkB,CAAC,CAAC;oBACtH;kBACJ,CAAC,CACH;kBAAA,uBAEF,QAAC,KAAK;oBAAC,UAAU;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA;gBAAU;kBAAA;kBAAA;kBAAA;gBAAA,QACnB;cAAA,gBACb,GACH,IAAI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAER;QAAA;UAAA;UAAA;UAAA;QAAA,QAET,eAiCP,QAAC,IAAI,CAAC,IAAI;UAAC,UAAU,EAAE;YAAE4C,MAAM,EAAE,EAAE;YAAEJ,IAAI,EAAE;UAAG,CAAE;UAAA,uBAC5C,QAAC,MAAM;YACH,IAAI,EAAC,SAAS;YACd,QAAQ,EAAC,QAAQ;YACjB,KAAK,EAAE;cAAE4C,eAAe,EAAE,MAAM;cAAEC,KAAK,EAAE;YAAQ,CAAE;YAAA,UAElDrF,CAAC,CAAC,QAAQ;UAAC;YAAA;YAAA;YAAA;UAAA;QACP;UAAA;UAAA;UAAA;QAAA,QACD;MAAA;QAAA;QAAA;QAAA;MAAA;IACR;MAAA;MAAA;MAAA;IAAA;IAEZ;EAAA;AAER,CAAC;AAAA,GAhYYF,WAAW;EAAA,QACND,cAAc,EAKbL,IAAI,CAACc,OAAO;AAAA;AAAA,KANlBR,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}