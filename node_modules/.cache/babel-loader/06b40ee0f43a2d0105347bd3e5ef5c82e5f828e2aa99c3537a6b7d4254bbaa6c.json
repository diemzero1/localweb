{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\n/**\n * get children\n * 获取相关路径下的一级节点\n */\nexport var getChildrenData = function (data, currentPath) {\n  if (currentPath === void 0) {\n    currentPath = '';\n  }\n  // 打标时已经做了编码，这直接取值即可\n  var path = currentPath.split('-');\n  path.shift(); // 根节点没有 path\n  var current = data;\n  path.forEach(function (childrenIndex) {\n    if (!current) return;\n    current = current.children[Number(childrenIndex)];\n  });\n  if (!(current === null || current === void 0 ? void 0 : current.children)) {\n    return [];\n  }\n  return current.children.map(function (item) {\n    return __assign(__assign({}, item), {\n      children: []\n    });\n  });\n};","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","getChildrenData","data","currentPath","path","split","shift","current","forEach","childrenIndex","children","Number","map","item"],"sources":["/home/iam/Documents/network/node_modules/@ant-design/graphs/es/utils/get-children-data.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n/**\n * get children\n * 获取相关路径下的一级节点\n */\nexport var getChildrenData = function (data, currentPath) {\n    if (currentPath === void 0) { currentPath = ''; }\n    // 打标时已经做了编码，这直接取值即可\n    var path = currentPath.split('-');\n    path.shift(); // 根节点没有 path\n    var current = data;\n    path.forEach(function (childrenIndex) {\n        if (!current)\n            return;\n        current = current.children[Number(childrenIndex)];\n    });\n    if (!(current === null || current === void 0 ? void 0 : current.children)) {\n        return [];\n    }\n    return current.children.map(function (item) { return (__assign(__assign({}, item), { children: [] })); });\n};\n"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,IAAI,IAAI,IAAI,CAACA,QAAQ,IAAK,YAAY;EAClDA,QAAQ,GAAGC,MAAM,CAACC,MAAM,IAAI,UAASC,CAAC,EAAE;IACpC,KAAK,IAAIC,CAAC,EAAEC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEH,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;MACjDD,CAAC,GAAGG,SAAS,CAACF,CAAC,CAAC;MAChB,KAAK,IAAII,CAAC,IAAIL,CAAC,EAAE,IAAIH,MAAM,CAACS,SAAS,CAACC,cAAc,CAACC,IAAI,CAACR,CAAC,EAAEK,CAAC,CAAC,EAC3DN,CAAC,CAACM,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,CAAC;IACnB;IACA,OAAON,CAAC;EACZ,CAAC;EACD,OAAOH,QAAQ,CAACa,KAAK,CAAC,IAAI,EAAEN,SAAS,CAAC;AAC1C,CAAC;AACD;AACA;AACA;AACA;AACA,OAAO,IAAIO,eAAe,GAAG,UAAUC,IAAI,EAAEC,WAAW,EAAE;EACtD,IAAIA,WAAW,KAAK,KAAK,CAAC,EAAE;IAAEA,WAAW,GAAG,EAAE;EAAE;EAChD;EACA,IAAIC,IAAI,GAAGD,WAAW,CAACE,KAAK,CAAC,GAAG,CAAC;EACjCD,IAAI,CAACE,KAAK,EAAE,CAAC,CAAC;EACd,IAAIC,OAAO,GAAGL,IAAI;EAClBE,IAAI,CAACI,OAAO,CAAC,UAAUC,aAAa,EAAE;IAClC,IAAI,CAACF,OAAO,EACR;IACJA,OAAO,GAAGA,OAAO,CAACG,QAAQ,CAACC,MAAM,CAACF,aAAa,CAAC,CAAC;EACrD,CAAC,CAAC;EACF,IAAI,EAAEF,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACG,QAAQ,CAAC,EAAE;IACvE,OAAO,EAAE;EACb;EACA,OAAOH,OAAO,CAACG,QAAQ,CAACE,GAAG,CAAC,UAAUC,IAAI,EAAE;IAAE,OAAQ1B,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAE0B,IAAI,CAAC,EAAE;MAAEH,QAAQ,EAAE;IAAG,CAAC,CAAC;EAAG,CAAC,CAAC;AAC7G,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}