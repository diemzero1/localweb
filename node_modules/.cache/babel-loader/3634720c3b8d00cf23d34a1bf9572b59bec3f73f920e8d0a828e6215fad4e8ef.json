{"ast":null,"code":"var _jsxFileName = \"/home/iam/Documents/network/src/components/antd/internet/openvpn/edit.tsx\",\n  _s = $RefreshSig$();\nimport { Form, Input, Button, message, Select, Upload, Row, Col } from 'antd';\nimport React from 'react';\nimport ubusApi from 'service/api/ubus-api';\nimport axios from \"axios\";\nimport { UploadOutlined } from '@ant-design/icons';\nimport { useTranslation } from \"react-i18next\";\nimport \"../../../../translations/i18n\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const OpenVpnEdit = props => {\n  _s();\n  const URL = \"/cgi-bin/luci-upload\";\n  const {\n    t\n  } = useTranslation();\n  let pattern = /^[a-zA-Z0-9.]+$/;\n  let pattern1 = /^([-]?[1-9][0-9]*|0)$/;\n  let patternIpv4 = /^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n  let check1;\n  let check2;\n  const abc = t('error_fill');\n  const {\n    item,\n    optionSubnetmask,\n    onDone,\n    optionsEncryption\n  } = props;\n  const [crtlist, setCrt] = React.useState([]);\n  const [keylist, setKey] = React.useState([]);\n  const [calist, setCa] = React.useState([]);\n  const [form] = Form.useForm();\n  let tokenString = sessionStorage.getItem('token');\n  const listCA = async () => {\n    const crt = await ubusApi.show_network_openvpn_list('cert');\n    const key = await ubusApi.show_network_openvpn_list('key');\n    const ca = await ubusApi.show_network_openvpn_list('ca');\n    setCrt(crt['list_folders']);\n    setKey(key['list_folders']);\n    setCa(ca['list_folders']);\n  };\n  React.useEffect(() => {\n    listCA();\n  }, []);\n  const refreshData = async () => {\n    const {\n      id,\n      dev,\n      mode,\n      enabled,\n      ca,\n      cert,\n      key,\n      server,\n      port,\n      push,\n      remote\n    } = item;\n    if (item) {\n      if (mode === \"server\") {\n        form.setFieldsValue({\n          name: dev.split(\"tun_\")[1],\n          mode: mode,\n          status: enabled === \"1\" ? \"enable\" : \"disable\",\n          port: port,\n          subnet: server.split(\" \")[0],\n          netmask: server.split(\" \")[1],\n          client_access: push[0] === \"redirect-gateway def1\" ? \"internet\" : \"home\",\n          crt_local: cert.split(\"/etc/sample-keys/openvpn_cert/cert/\")[1],\n          key_local: key.split(\"/etc/sample-keys/openvpn_cert/key/\")[1],\n          ca_local: ca.split(\"/etc/sample-keys/openvpn_cert/ca/\")[1]\n        });\n      } else {\n        form.setFieldsValue({\n          name: dev.split(\"tun_\")[1],\n          mode: \"client\",\n          status: enabled === \"1\" ? \"enable\" : \"disable\",\n          server_ip: remote.split(\" \")[0],\n          server_port: remote.split(\" \")[1],\n          crt_local: cert.split(\"/etc/sample-keys/openvpn_cert/cert/\")[1],\n          key_local: key.split(\"/etc/sample-keys/openvpn_cert/key/\")[1],\n          ca_local: ca.split(\"/etc/sample-keys/openvpn_cert/ca/\")[1]\n        });\n      }\n    }\n  };\n  React.useEffect(() => {\n    refreshData();\n  }, []);\n  function randomName(length) {\n    let result = '';\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    const charactersLength = characters.length;\n    for (let i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  }\n  const onFinish = async values => {\n    if (values.crt) {\n      const data = new FormData();\n      values.token = tokenString;\n      data.append(\"sessionid\", values.token);\n      data.append(\"filename\", \"/etc/sample-keys/openvpn_cert/cert/\" + values.crt.file.name);\n      data.append(\"filedata\", values.crt.file.originFileObj);\n      axios.post(URL, data, {\n        headers: {\n          'Access-Control-Allow-Origin': '*',\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(response => {\n        console.log(\"success: \", response.data.message);\n      }).catch(error => {\n        console.log(\"Fail: \", error);\n      });\n    } else {\n      console.log(\"chua vao crt\");\n    }\n    if (values.key) {\n      const data1 = new FormData();\n      values.token = tokenString;\n      data1.append(\"sessionid\", values.token);\n      data1.append(\"filename\", \"/etc/sample-keys/openvpn_cert/key/\" + values.key.file.name);\n      data1.append(\"filedata\", values.key.file.originFileObj);\n      axios.post(URL, data1, {\n        headers: {\n          'Access-Control-Allow-Origin': '*',\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(response => {\n        console.log(\"success: \", response);\n      }).catch(error => {\n        console.log(\"Fail: \", error);\n      });\n    } else {\n      console.log(\"chua vao key\");\n    }\n    if (values.ca) {\n      const data2 = new FormData();\n      values.token = tokenString;\n      data2.append(\"sessionid\", values.token);\n      data2.append(\"filename\", \"/etc/sample-keys/openvpn_cert/ca/\" + values.ca.file.name);\n      data2.append(\"filedata\", values.ca.file.originFileObj);\n      axios.post(URL, data2, {\n        headers: {\n          'Access-Control-Allow-Origin': '*',\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(response => {\n        console.log(\"success: \", response.data.message);\n      }).catch(error => {\n        console.log(\"Fail: \", error);\n      });\n    } else {\n      console.log(\"chua vao ca\");\n    }\n    if (values.crt_local == null && values.ca_local == null && values.key_local == null && values.crt == null && values.ca == null && values.key == null) {\n      message.error(t('error_openvpn'));\n    }\n    if (values.name == null) {\n      if (values.mode === \"server\") {\n        if (values.crt_local == null && values.ca_local == null && values.key_local == null) {\n          await ubusApi.config_network_openvpn_server(\"add\", randomName(4), values.status, \"server\", values.port, values.subnet, values.netmask, values.client_access, values.crt.file.name, values.key.file.name, values.ca.file.name);\n        }\n        if (values.crt == null && values.ca == null && values.key == null) {\n          await ubusApi.config_network_openvpn_server(\"add\", randomName(4), values.status, \"server\", values.port, values.subnet, values.netmask, values.client_access, values.crt_local, values.key_local, values.ca_local);\n        }\n      } else {\n        if (values.crt_local == null && values.ca_local == null && values.key_local == null) {\n          await ubusApi.config_network_openvpn_client(\"add\", randomName(4), values.status, \"client\", values.server_ip, values.server_port, values.crt.file.name, values.key.file.name, values.ca.file.name);\n        }\n        if (values.crt == null && values.ca == null && values.key == null) {\n          await ubusApi.config_network_openvpn_client(\"add\", randomName(4), values.status, \"client\", values.server_ip, values.server_port, values.crt_local, values.key_local, values.ca_local);\n        }\n      }\n      const key = 'updatable';\n      message.loading({\n        content: t('loading'),\n        key\n      });\n      setTimeout(() => {\n        message.success({\n          content: t('success'),\n          key,\n          duration: 2\n        });\n      }, 1000);\n      setTimeout(() => {\n        window.location.reload();\n      }, 1500);\n    } else {\n      if (values.mode === \"server\") {\n        if (values.crt_local == null && values.ca_local == null && values.key_local == null) {\n          await ubusApi.config_network_openvpn_server(\"add\", values.name, values.status, \"server\", values.port, values.subnet, values.netmask, values.client_access, values.crt.file.name, values.key.file.name, values.ca.file.name);\n        }\n        if (values.crt == null && values.ca == null && values.key == null) {\n          await ubusApi.config_network_openvpn_server(\"add\", values.name, values.status, \"server\", values.port, values.subnet, values.netmask, values.client_access, values.crt_local, values.key_local, values.ca_local);\n        }\n      } else {\n        if (values.crt_local == null && values.ca_local == null && values.key_local == null) {\n          await ubusApi.config_network_openvpn_client(\"add\", values.name, values.status, \"client\", values.server_ip, values.server_port, values.crt.file.name, values.key.file.name, values.ca.file.name);\n        }\n        if (values.crt == null && values.ca == null && values.key == null) {\n          await ubusApi.config_network_openvpn_client(\"add\", values.name, values.status, \"client\", values.server_ip, values.server_port, values.crt_local, values.key_local, values.ca_local);\n        }\n      }\n      const key = 'updatable';\n      message.loading({\n        content: t('loading'),\n        key\n      });\n      setTimeout(() => {\n        message.success({\n          content: t('success'),\n          key,\n          duration: 2\n        });\n      }, 1000);\n      setTimeout(() => {\n        window.location.reload();\n      }, 1500);\n    }\n  };\n  const [value, setValue] = React.useState('');\n  const handleChangeCrt = value => {\n    setValue(value);\n  };\n  const handleChange = value => {\n    setValue(value);\n  };\n  const handleChangeCa = value => {\n    setValue(value);\n  };\n  const handleChangeKey = value => {\n    setValue(value);\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    form: form,\n    labelCol: {\n      span: 6\n    },\n    wrapperCol: {\n      span: 16\n    },\n    onFinish: onFinish,\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      label: t('mode'),\n      name: \"mode\",\n      rules: [{\n        required: true,\n        message: String(t(\"error_fill\"))\n      }],\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        onChange: handleChange\n        // value={value}\n        ,\n        options: [{\n          value: \"server\",\n          label: t('server')\n        }, {\n          value: \"client\",\n          label: t('client')\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: t('name'),\n      name: \"name\",\n      hidden: true,\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      noStyle: true,\n      shouldUpdate: (prevValues, currentValues) => prevValues.gender !== currentValues.gender,\n      children: _ref => {\n        let {\n          getFieldValue\n        } = _ref;\n        return getFieldValue('mode') == \"server\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            label: t('status'),\n            name: \"status\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              defaultValue: t('select_status'),\n              options: [{\n                value: \"enable\",\n                label: t('enable')\n              }, {\n                value: \"disable\",\n                label: t('disable')\n              }]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: t('port'),\n            name: \"port\",\n            rules: [{\n              required: true,\n              message: String(t(\"error_fill\"))\n            }, {\n              validator: (_, values) => values > 65535 || values < 1 ? Promise.reject(t('Port_could_not_be_larger_than_65535')) : Promise.resolve()\n            }, {\n              validator: (_, value) => pattern1.test(value) ? Promise.resolve() : Promise.reject()\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              allowClear: true,\n              placeholder: \"Between 1 and 65535\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: t('subnet'),\n            name: \"subnet\",\n            rules: [{\n              required: true,\n              message: String(t(\"error_fill\"))\n            }, {\n              validator: (_, value, callback) => {\n                if (value === undefined) {\n                  callback();\n                } else {\n                  check1 = value.split(\".\");\n                  check2 = check1[check1.length - 1];\n                  return Number(check2) < 256 && patternIpv4.test(value) ? Promise.resolve() : Promise.reject(t('Error_Ip_address'));\n                }\n              }\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              allowClear: true,\n              placeholder: \"10.20.30.0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: t('Netmask'),\n            name: \"netmask\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              defaultValue: t(\"Netmask\"),\n              options: optionSubnetmask\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: t('type_access'),\n            name: \"client_access\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              options: [{\n                value: \"home\",\n                label: \"Home\"\n              }, {\n                value: \"internet\",\n                label: \"Internet\"\n              }]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Certificate File\",\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              gutter: 8,\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                span: 12,\n                children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                  noStyle: true,\n                  name: \"crt_local\",\n                  children: /*#__PURE__*/_jsxDEV(Select, {\n                    onChange: handleChange,\n                    value: value,\n                    options: crtlist\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 334,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                span: 12,\n                children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                  name: \"crt\",\n                  children: /*#__PURE__*/_jsxDEV(Upload, {\n                    maxCount: 1,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 346,\n                        columnNumber: 67\n                      }, this),\n                      children: t('upload')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 346,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 343,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Key File\",\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              gutter: 8,\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                span: 12,\n                children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                  name: \"key_local\",\n                  noStyle: true,\n                  children: /*#__PURE__*/_jsxDEV(Select, {\n                    onChange: handleChange,\n                    value: value,\n                    options: keylist\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 360,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                span: 12,\n                children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                  name: \"key\",\n                  children: /*#__PURE__*/_jsxDEV(Upload, {\n                    maxCount: 1,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 372,\n                        columnNumber: 67\n                      }, this),\n                      children: t('upload')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 372,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Certificate CA File\",\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              gutter: 8,\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                span: 12,\n                children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                  name: \"ca_local\",\n                  noStyle: true,\n                  children: /*#__PURE__*/_jsxDEV(Select, {\n                    onChange: handleChange,\n                    value: value,\n                    options: calist\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 386,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                span: 12,\n                children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                  name: \"ca\",\n                  children: /*#__PURE__*/_jsxDEV(Upload, {\n                    maxCount: 1,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 398,\n                        columnNumber: 67\n                      }, this),\n                      children: t('upload')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 398,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 395,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true) : null;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      noStyle: true,\n      shouldUpdate: (prevValues, currentValues) => prevValues.gender !== currentValues.gender,\n      children: _ref2 => {\n        let {\n          getFieldValue\n        } = _ref2;\n        return getFieldValue('mode') == \"client\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Status\",\n            name: \"status\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              defaultValue: \"Select Status\",\n              options: [{\n                value: \"enable\",\n                label: \"Enable\"\n              }, {\n                value: \"disable\",\n                label: \"Disable\"\n              }]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Server IP\",\n            name: \"server_ip\",\n            rules: [{\n              required: true,\n              message: String(t(\"error_fill\"))\n            }, {\n              validator: (_, value, callback) => {\n                if (value === undefined) {\n                  callback();\n                } else {\n                  check1 = value.split(\".\");\n                  check2 = check1[check1.length - 1];\n                  return Number(check2) < 256 && patternIpv4.test(value) ? Promise.resolve() : Promise.reject(t('Error_Ip_address'));\n                }\n              }\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              allowClear: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Server Port\",\n            name: \"server_port\",\n            rules: [{\n              required: true,\n              message: \"\"\n            }, {\n              validator: (_, values) => values > 65535 ? Promise.reject(t('Port_could_not_be_larger_than_65535')) : Promise.resolve()\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              allowClear: true,\n              placeholder: \"Between 1 and 65535\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Certificate File\",\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              gutter: 8,\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                span: 12,\n                children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                  noStyle: true,\n                  name: \"crt_local\",\n                  children: /*#__PURE__*/_jsxDEV(Select, {\n                    onChange: handleChange,\n                    value: value,\n                    options: crtlist\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 471,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 467,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                span: 12,\n                children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                  name: \"crt\",\n                  children: /*#__PURE__*/_jsxDEV(Upload, {\n                    maxCount: 1,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 483,\n                        columnNumber: 67\n                      }, this),\n                      children: t('upload')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 483,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 480,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 479,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Key File\",\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              gutter: 8,\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                span: 12,\n                children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                  name: \"key_local\",\n                  noStyle: true,\n                  children: /*#__PURE__*/_jsxDEV(Select, {\n                    onChange: handleChange,\n                    value: value,\n                    options: keylist\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 497,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 493,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 492,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                span: 12,\n                children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                  name: \"key\",\n                  children: /*#__PURE__*/_jsxDEV(Upload, {\n                    maxCount: 1,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 509,\n                        columnNumber: 67\n                      }, this),\n                      children: t('upload')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 509,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 506,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 505,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 504,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Certificate CA File\",\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              gutter: 8,\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                span: 12,\n                children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                  name: \"ca_local\",\n                  noStyle: true,\n                  children: /*#__PURE__*/_jsxDEV(Select, {\n                    onChange: handleChange,\n                    value: value,\n                    options: calist\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 523,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 519,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                span: 12,\n                children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                  name: \"ca\",\n                  children: /*#__PURE__*/_jsxDEV(Upload, {\n                    maxCount: 1,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 535,\n                        columnNumber: 67\n                      }, this),\n                      children: t('upload')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 535,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 532,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 531,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 530,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true) : null;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      wrapperCol: {\n        offset: 6,\n        span: 16\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: t('submit')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 9\n  }, this);\n};\n_s(OpenVpnEdit, \"oISo4lUY39oNeLdD45C5Xp+Gfic=\", false, function () {\n  return [useTranslation, Form.useForm];\n});\n_c = OpenVpnEdit;\nvar _c;\n$RefreshReg$(_c, \"OpenVpnEdit\");","map":{"version":3,"names":["Form","Input","Button","message","Select","Upload","Row","Col","React","ubusApi","axios","UploadOutlined","useTranslation","OpenVpnEdit","props","URL","t","pattern","pattern1","patternIpv4","check1","check2","abc","item","optionSubnetmask","onDone","optionsEncryption","crtlist","setCrt","useState","keylist","setKey","calist","setCa","form","useForm","tokenString","sessionStorage","getItem","listCA","crt","show_network_openvpn_list","key","ca","useEffect","refreshData","id","dev","mode","enabled","cert","server","port","push","remote","setFieldsValue","name","split","status","subnet","netmask","client_access","crt_local","key_local","ca_local","server_ip","server_port","randomName","length","result","characters","charactersLength","i","charAt","Math","floor","random","onFinish","values","data","FormData","token","append","file","originFileObj","post","headers","then","response","console","log","catch","error","data1","data2","config_network_openvpn_server","config_network_openvpn_client","loading","content","setTimeout","success","duration","window","location","reload","value","setValue","handleChangeCrt","handleChange","handleChangeCa","handleChangeKey","span","required","String","label","prevValues","currentValues","gender","getFieldValue","validator","_","Promise","reject","resolve","test","callback","undefined","Number","offset"],"sources":["/home/iam/Documents/network/src/components/antd/internet/openvpn/edit.tsx"],"sourcesContent":["import { message as antdMessage, Form, Input, Button, message, Select, Upload, Row, Col } from 'antd'\nimport React from 'react'\nimport ubusApi from 'service/api/ubus-api'\nimport axios from \"axios\"\nimport { UploadOutlined } from '@ant-design/icons';\nimport { stat } from 'fs';\nimport { useTranslation } from \"react-i18next\"\nimport \"../../../../translations/i18n\"\nimport \"./index.css\"\n\nexport const OpenVpnEdit = (props: any) => {\n    const URL = \"/cgi-bin/luci-upload\"\n    const { t } = useTranslation()\n    let pattern = /^[a-zA-Z0-9.]+$/\n    let pattern1 = /^([-]?[1-9][0-9]*|0)$/\n    let patternIpv4 = /^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/\n    let check1: any\n    let check2: any\n    const abc = t('error_fill')\n    const { item,optionSubnetmask, onDone, optionsEncryption } = props\n    const [crtlist, setCrt] = React.useState([])\n    const [keylist, setKey] = React.useState([])\n    const [calist, setCa] = React.useState([])\n    const [form] = Form.useForm()\n    let tokenString = sessionStorage.getItem('token');\n    const listCA = async () => {\n        const crt = await ubusApi.show_network_openvpn_list('cert')\n        const key = await ubusApi.show_network_openvpn_list('key')\n        const ca = await ubusApi.show_network_openvpn_list('ca')\n        setCrt(crt['list_folders'])\n        setKey(key['list_folders'])\n        setCa(ca['list_folders'])\n    }\n    React.useEffect(() => {\n        listCA()\n    }, [])\n\n    const refreshData = async () => {\n        const {id, dev, mode, enabled, ca, cert, key, server, port, push, remote } = item\n        if (item) {\n            if (mode === \"server\") {\n                form.setFieldsValue({\n                    name: dev.split(\"tun_\")[1],\n                    mode: mode,\n                    status: (enabled === \"1\") ? \"enable\" : \"disable\",\n                    port: port,\n                    subnet: server.split(\" \")[0],\n                    netmask: server.split(\" \")[1],\n                    client_access: (push[0] === \"redirect-gateway def1\") ? \"internet\" : \"home\",\n                    crt_local: cert.split(\"/etc/sample-keys/openvpn_cert/cert/\")[1],\n                    key_local: key.split(\"/etc/sample-keys/openvpn_cert/key/\")[1],\n                    ca_local: ca.split(\"/etc/sample-keys/openvpn_cert/ca/\")[1],\n                })\n            } else {\n                form.setFieldsValue({\n                    name: dev.split(\"tun_\")[1],\n                    mode: \"client\",\n                    status: (enabled === \"1\") ? \"enable\" : \"disable\",\n                    server_ip: remote.split(\" \")[0],\n                    server_port: remote.split(\" \")[1],\n                    crt_local: cert.split(\"/etc/sample-keys/openvpn_cert/cert/\")[1],\n                    key_local: key.split(\"/etc/sample-keys/openvpn_cert/key/\")[1],\n                    ca_local: ca.split(\"/etc/sample-keys/openvpn_cert/ca/\")[1],\n                })\n            }\n        }\n    }\n    React.useEffect(() => {\n        refreshData()\n    }, [])\n    function randomName(length: number) {\n        let result = ''\n        const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n        const charactersLength = characters.length\n        for (let i = 0; i < length; i++) {\n          result += characters.charAt(Math.floor(Math.random() * charactersLength))\n        }\n        return result\n    }\n\n    const onFinish = async (values: any) => {\n        if (values.crt) {\n            const data = new FormData();\n            values.token = tokenString;\n            data.append(\"sessionid\", values.token)\n            data.append(\"filename\", \"/etc/sample-keys/openvpn_cert/cert/\" + values.crt.file.name)\n            data.append(\"filedata\", values.crt.file.originFileObj)\n            axios.post(URL, data, {\n                headers: {\n                    'Access-Control-Allow-Origin': '*',\n                    \"Content-Type\": \"multipart/form-data\"\n                }\n            }).then(response => {\n                console.log(\"success: \", response.data.message)\n            }).catch(error => {\n                console.log(\"Fail: \", error)\n            })\n        } else {\n            console.log(\"chua vao crt\")\n        }\n\n        if (values.key) {\n            const data1 = new FormData();\n            values.token = tokenString;\n            data1.append(\"sessionid\", values.token)\n            data1.append(\"filename\", \"/etc/sample-keys/openvpn_cert/key/\" + values.key.file.name)\n            data1.append(\"filedata\", values.key.file.originFileObj)\n            axios.post(URL, data1, {\n                headers: {\n                    'Access-Control-Allow-Origin': '*',\n                    \"Content-Type\": \"multipart/form-data\"\n                }\n            }).then(response => {\n                console.log(\"success: \", response)\n            }).catch(error => {\n                console.log(\"Fail: \", error)\n            })\n        } else {\n            console.log(\"chua vao key\")\n        }\n\n        if (values.ca) {\n            const data2 = new FormData();\n            values.token = tokenString;\n            data2.append(\"sessionid\", values.token)\n            data2.append(\"filename\", \"/etc/sample-keys/openvpn_cert/ca/\" + values.ca.file.name)\n            data2.append(\"filedata\", values.ca.file.originFileObj)\n            axios.post(URL, data2, {\n                headers: {\n                    'Access-Control-Allow-Origin': '*',\n                    \"Content-Type\": \"multipart/form-data\"\n                }\n            }).then(response => {\n                console.log(\"success: \", response.data.message)\n            }).catch(error => {\n                console.log(\"Fail: \", error)\n            })\n        } else {\n            console.log(\"chua vao ca\")\n        }\n        \n        if(values.crt_local == null && values.ca_local == null && values.key_local == null && values.crt == null && values.ca == null && values.key == null ){\n            message.error(t('error_openvpn'))\n        }\n        if(values.name == null){\n\n            if (values.mode === \"server\") {\n\n                if (values.crt_local == null && values.ca_local == null && values.key_local == null) {\n                    await ubusApi.config_network_openvpn_server(\"add\",randomName(4), values.status, \"server\", values.port, values.subnet, values.netmask, values.client_access, values.crt.file.name, values.key.file.name, values.ca.file.name)\n                }\n                if (values.crt == null && values.ca == null && values.key == null) {\n                    await ubusApi.config_network_openvpn_server(\"add\", randomName(4), values.status, \"server\", values.port, values.subnet, values.netmask, values.client_access, values.crt_local, values.key_local, values.ca_local)\n                }\n            }\n            else {\n\n                if (values.crt_local == null && values.ca_local == null && values.key_local == null) {\n                    await ubusApi.config_network_openvpn_client(\"add\", randomName(4), values.status, \"client\", values.server_ip, values.server_port, values.crt.file.name, values.key.file.name, values.ca.file.name)\n                }\n                if (values.crt == null && values.ca == null && values.key == null) {\n                    await ubusApi.config_network_openvpn_client(\"add\",  randomName(4), values.status, \"client\", values.server_ip, values.server_port, values.crt_local, values.key_local, values.ca_local)\n                }\n            }\n            const key = 'updatable';\n            message.loading({ content: t('loading'), key });\n            setTimeout(() => {\n                message.success({ content: t('success'), key, duration: 2 });\n            }, 1000);\n            setTimeout(() => {\n                window.location.reload()\n            }, 1500);\n        \n        }\n        else{\n\n            if (values.mode === \"server\") {\n\n                if (values.crt_local == null && values.ca_local == null && values.key_local == null) {\n                    await ubusApi.config_network_openvpn_server(\"add\", values.name, values.status, \"server\", values.port, values.subnet, values.netmask, values.client_access, values.crt.file.name, values.key.file.name, values.ca.file.name)\n                }\n                if (values.crt == null && values.ca == null && values.key == null) {\n                    await ubusApi.config_network_openvpn_server(\"add\", values.name, values.status, \"server\", values.port, values.subnet, values.netmask, values.client_access, values.crt_local, values.key_local, values.ca_local)\n                }\n            }\n            else {\n                \n                if (values.crt_local == null && values.ca_local == null && values.key_local == null) {\n                    await ubusApi.config_network_openvpn_client(\"add\", values.name, values.status, \"client\", values.server_ip, values.server_port, values.crt.file.name, values.key.file.name, values.ca.file.name)\n                }\n                if (values.crt == null && values.ca == null && values.key == null) {\n                    await ubusApi.config_network_openvpn_client(\"add\", values.name, values.status, \"client\", values.server_ip, values.server_port, values.crt_local, values.key_local, values.ca_local)\n                }\n            }\n            const key = 'updatable';\n            message.loading({ content: t('loading'), key });\n            setTimeout(() => {\n                message.success({ content: t('success'), key, duration: 2 });\n            }, 1000);\n            setTimeout(() => {\n                window.location.reload()\n            }, 1500);\n        }\n    }\n    const [value, setValue] = React.useState('')\n    const handleChangeCrt = (value: any) => {\n        setValue(value)\n    }\n    const handleChange = (value: any) => {\n        setValue(value)\n    }\n    const handleChangeCa = (value: any) => {\n        setValue(value)\n    }\n    const handleChangeKey = (value: any) => {\n        setValue(value)\n    }\n    return (\n        <Form\n            form={form}\n            labelCol={{ span: 6 }}\n            wrapperCol={{ span: 16 }}\n            onFinish={onFinish}\n        >\n            <Form.Item label={t('mode')} name=\"mode\" rules={[{ required: true, message: String(t(\"error_fill\")) }]}\n            >\n                <Select\n                    onChange={handleChange}\n                    // value={value}\n                    options={[\n                        {\n                            value: \"server\",\n                            label: t('server')\n                        },\n                        {\n                            value: \"client\",\n                            label: t('client')\n                        },\n                    ]}\n                ></Select>\n            </Form.Item>\n            <Form.Item label={t('name')} name=\"name\" hidden\n            >\n                <Input></Input>\n            </Form.Item>\n            <Form.Item\n                noStyle\n                shouldUpdate={(prevValues, currentValues) => prevValues.gender !== currentValues.gender}\n            >\n                {\n                    ({ getFieldValue }) =>\n                        getFieldValue('mode') ==\n                            \"server\" ? (\n                            <>\n                                <Form.Item label={t('status')} name=\"status\">\n                                    <Select\n                                        defaultValue={t('select_status')}\n                                        options={[\n                                            {\n                                                value: \"enable\",\n                                                label: t('enable')\n                                            },\n                                            {\n                                                value: \"disable\",\n                                                label: t('disable')\n                                            },\n                                        ]}\n                                    ></Select>\n                                </Form.Item>\n                                <Form.Item label={t('port')} name=\"port\"\n                                    rules={[\n                                        { required: true, message: String(t(\"error_fill\")) },\n                                        {\n                                            validator: (_, values) =>\n                                                values > 65535 || values < 1 ? Promise.reject(t('Port_could_not_be_larger_than_65535')) : Promise.resolve()\n                                        },\n                                        {\n                                            validator: (_, value) =>\n                                            pattern1.test(value) ? Promise.resolve() : Promise.reject()\n                                        }\n                                    ]}\n                                >\n                                    <Input allowClear placeholder=\"Between 1 and 65535\"></Input>\n                                </Form.Item>\n                                <Form.Item label={t('subnet')} name=\"subnet\"\n                                    rules={[\n                                        { required: true, message: String(t(\"error_fill\")) },\n                                        {    \n                                        validator: (_, value, callback) => {\n                                            if(value=== undefined){\n                                                callback();\n                                            }\n                                            else{\n                                            check1 = value.split(\".\")\n                                            check2 = check1[check1.length - 1]\n                                            return Number(check2) < 256 && patternIpv4.test(value) ? Promise.resolve() : Promise.reject(t('Error_Ip_address'))\n                                            }\n                                        }\n                                        }\n                                    ]}\n                                >\n                                    <Input allowClear placeholder=\"10.20.30.0\" ></Input>\n                                </Form.Item>\n                                <Form.Item label={t('Netmask')} name=\"netmask\"\n                                    \n                                >\n                                        <Select\n                                            defaultValue={t(\"Netmask\")}\n                                            options={optionSubnetmask}\n                                        ></Select>\n                                </Form.Item>\n                                <Form.Item label={t('type_access')} name=\"client_access\">\n                                    <Select\n\n                                        options={[\n                                            {\n                                                value: \"home\",\n                                                label: \"Home\"\n                                            },\n                                            {\n                                                value: \"internet\",\n                                                label: \"Internet\"\n                                            },\n                                        ]}\n                                    ></Select>\n                                </Form.Item>\n                                <Form.Item label=\"Certificate File\">\n                                    <Row gutter={8}>\n                                        <Col span={12}>\n                                            <Form.Item\n                                                noStyle\n                                                name=\"crt_local\"\n                                            >\n                                                <Select\n                                                    onChange={handleChange}\n                                                    value={value}\n                                                    options={crtlist}\n                                                ></Select>\n                                            </Form.Item>\n                                        </Col>\n                                        <Col span={12}>\n                                            <Form.Item name=\"crt\">\n                                                <Upload\n                                                    maxCount={1}\n                                                >\n                                                    <Button icon={<UploadOutlined />} >{t('upload')}</Button>\n                                                </Upload>\n                                            </Form.Item>\n                                        </Col>\n                                    </Row>\n                                </Form.Item>\n\n                                <Form.Item label=\"Key File\">\n                                    <Row gutter={8}>\n                                        <Col span={12}>\n                                            <Form.Item\n                                                name=\"key_local\"\n                                                noStyle\n                                            >\n                                                <Select\n                                                    onChange={handleChange}\n                                                    value={value}\n                                                    options={keylist}\n                                                ></Select>\n                                            </Form.Item>\n                                        </Col>\n                                        <Col span={12}>\n                                            <Form.Item name=\"key\">\n                                                <Upload\n                                                    maxCount={1}\n                                                >\n                                                    <Button icon={<UploadOutlined />} >{t('upload')}</Button>\n                                                </Upload>\n                                            </Form.Item>\n                                        </Col>\n                                    </Row>\n                                </Form.Item>\n\n                                <Form.Item label=\"Certificate CA File\">\n                                    <Row gutter={8}>\n                                        <Col span={12}>\n                                            <Form.Item\n                                                name=\"ca_local\"\n                                                noStyle\n                                            >\n                                                <Select\n                                                    onChange={handleChange}\n                                                    value={value}\n                                                    options={calist}\n                                                ></Select>\n                                            </Form.Item>\n                                        </Col>\n                                        <Col span={12}>\n                                            <Form.Item name=\"ca\">\n                                                <Upload\n                                                    maxCount={1}\n                                                >\n                                                    <Button icon={<UploadOutlined />} >{t('upload')}</Button>\n                                                </Upload>\n                                            </Form.Item>\n                                        </Col>\n                                    </Row>\n                                </Form.Item>\n                            </>\n                        ) : null}\n            </Form.Item>\n\n\n            <Form.Item\n                noStyle\n                shouldUpdate={(prevValues, currentValues) => prevValues.gender !== currentValues.gender}\n            >\n                {\n                    ({ getFieldValue }) =>\n                        getFieldValue('mode') ==\n                            \"client\" ? (\n                            <>\n                                <Form.Item label=\"Status\" name=\"status\">\n                                    <Select\n                                        defaultValue=\"Select Status\"\n                                        options={[\n                                            {\n                                                value: \"enable\",\n                                                label: \"Enable\"\n                                            },\n                                            {\n                                                value: \"disable\",\n                                                label: \"Disable\"\n                                            },\n                                        ]}\n                                    ></Select>\n                                </Form.Item>\n                                <Form.Item label=\"Server IP\" name=\"server_ip\"\n                                    rules={[\n                                        { required: true, message: String(t(\"error_fill\")) },\n                                        {    \n                                        validator: (_, value, callback) => {\n                                            if(value=== undefined){\n                                                callback();\n                                            }\n                                            else{\n                                            check1 = value.split(\".\")\n                                            check2 = check1[check1.length - 1]\n                                            return Number(check2) < 256 && patternIpv4.test(value) ? Promise.resolve() : Promise.reject(t('Error_Ip_address'))\n                                            }\n                                        }\n                                        }\n                                    ]}\n                                >\n                                    <Input allowClear ></Input>\n                                </Form.Item>\n                                <Form.Item label=\"Server Port\" name=\"server_port\"\n                                    rules={[\n                                        { required: true, message: \"\" },\n                                        {\n                                            validator: (_, values) =>\n                                                values > 65535 ? Promise.reject(t('Port_could_not_be_larger_than_65535')) : Promise.resolve()\n                                        }\n                                    ]}\n                                >\n                                    <Input allowClear placeholder=\"Between 1 and 65535\"></Input>\n                                </Form.Item>\n\n                                <Form.Item label=\"Certificate File\">\n                                    <Row gutter={8}>\n                                        <Col span={12}>\n                                            <Form.Item\n                                                noStyle\n                                                name=\"crt_local\"\n                                            >\n                                                <Select\n                                                    onChange={handleChange}\n                                                    value={value}\n                                                    options={crtlist}\n                                                ></Select>\n                                            </Form.Item>\n                                        </Col>\n                                        <Col span={12}>\n                                            <Form.Item name=\"crt\">\n                                                <Upload\n                                                    maxCount={1}\n                                                >\n                                                    <Button icon={<UploadOutlined />} >{t('upload')}</Button>\n                                                </Upload>\n                                            </Form.Item>\n                                        </Col>\n                                    </Row>\n                                </Form.Item>\n\n                                <Form.Item label=\"Key File\">\n                                    <Row gutter={8}>\n                                        <Col span={12}>\n                                            <Form.Item\n                                                name=\"key_local\"\n                                                noStyle\n                                            >\n                                                <Select\n                                                    onChange={handleChange}\n                                                    value={value}\n                                                    options={keylist}\n                                                ></Select>\n                                            </Form.Item>\n                                        </Col>\n                                        <Col span={12}>\n                                            <Form.Item name=\"key\">\n                                                <Upload\n                                                    maxCount={1}\n                                                >\n                                                    <Button icon={<UploadOutlined />} >{t('upload')}</Button>\n                                                </Upload>\n                                            </Form.Item>\n                                        </Col>\n                                    </Row>\n                                </Form.Item>\n\n                                <Form.Item label=\"Certificate CA File\">\n                                    <Row gutter={8}>\n                                        <Col span={12}>\n                                            <Form.Item\n                                                name=\"ca_local\"\n                                                noStyle\n                                            >\n                                                <Select\n                                                    onChange={handleChange}\n                                                    value={value}\n                                                    options={calist}\n                                                ></Select>\n                                            </Form.Item>\n                                        </Col>\n                                        <Col span={12}>\n                                            <Form.Item name=\"ca\">\n                                                <Upload\n                                                    maxCount={1}\n                                                >\n                                                    <Button icon={<UploadOutlined />} >{t('upload')}</Button>\n                                                </Upload>\n                                            </Form.Item>\n                                        </Col>\n                                    </Row>\n                                </Form.Item>\n                            </>\n                        ) : null}\n            </Form.Item>\n\n            <Form.Item wrapperCol={{ offset: 6, span: 16 }}>\n                <Button\n                    type='primary'\n                    htmlType=\"submit\"\n                >\n                    {t('submit')}\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}