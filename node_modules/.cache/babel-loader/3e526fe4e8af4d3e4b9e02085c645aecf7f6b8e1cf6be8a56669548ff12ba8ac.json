{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Action, Util } from '@antv/g2';\nimport { isEqual } from '@antv/util';\nimport { transform } from '../../../../utils/matrix';\n/**\n * 饼图 图例激活 action\n */\nvar PieLegendAction = /** @class */function (_super) {\n  __extends(PieLegendAction, _super);\n  function PieLegendAction() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * 获取激活的图形元素\n   */\n  PieLegendAction.prototype.getActiveElements = function () {\n    var delegateObject = Util.getDelegationObject(this.context);\n    if (delegateObject) {\n      var view = this.context.view;\n      var component = delegateObject.component,\n        item_1 = delegateObject.item;\n      var field_1 = component.get('field');\n      if (field_1) {\n        var elements = view.geometries[0].elements;\n        return elements.filter(function (ele) {\n          return ele.getModel().data[field_1] === item_1.value;\n        });\n      }\n    }\n    return [];\n  };\n  /**\n   * 获取激活的标签\n   */\n  PieLegendAction.prototype.getActiveElementLabels = function () {\n    var view = this.context.view;\n    var elements = this.getActiveElements();\n    var labels = view.geometries[0].labelsContainer.getChildren();\n    return labels.filter(function (label) {\n      return elements.find(function (ele) {\n        return isEqual(ele.getData(), label.get('data'));\n      });\n    });\n  };\n  PieLegendAction.prototype.transfrom = function (offset) {\n    if (offset === void 0) {\n      offset = 7.5;\n    }\n    var elements = this.getActiveElements();\n    var elementLabels = this.getActiveElementLabels();\n    elements.forEach(function (element, idx) {\n      var labelShape = elementLabels[idx];\n      var coordinate = element.geometry.coordinate;\n      if (coordinate.isPolar && coordinate.isTransposed) {\n        var _a = Util.getAngle(element.getModel(), coordinate),\n          startAngle = _a.startAngle,\n          endAngle = _a.endAngle;\n        var middleAngle = (startAngle + endAngle) / 2;\n        var r = offset;\n        var x = r * Math.cos(middleAngle);\n        var y = r * Math.sin(middleAngle);\n        element.shape.setMatrix(transform([['t', x, y]]));\n        labelShape.setMatrix(transform([['t', x, y]]));\n      }\n    });\n  };\n  PieLegendAction.prototype.active = function () {\n    this.transfrom();\n  };\n  /**\n   * 激活态还原\n   */\n  PieLegendAction.prototype.reset = function () {\n    this.transfrom(0);\n  };\n  return PieLegendAction;\n}(Action);\nexport { PieLegendAction };","map":{"version":3,"mappings":"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","names":["Action","Util","isEqual","transform","__extends","PieLegendAction","delegateObject","getDelegationObject","context","view","item_1","field_1","component","get","elements","geometries","filter","ele","getModel","data","value","getActiveElements","labels","labelsContainer","getChildren","label","find","getData","offset","elementLabels","getActiveElementLabels","forEach","element","idx","labelShape","coordinate","geometry","isPolar","isTransposed","getAngle","startAngle","endAngle","middleAngle","r","x","Math","cos","y","sin","shape","setMatrix","transfrom"],"sources":["/home/iam/Documents/network/node_modules/@antv/g2plot/src/plots/pie/interactions/actions/legend-active.ts"],"sourcesContent":["import { IElement, IGroup } from '@antv/g-base';\nimport { Action, Element, Util } from '@antv/g2';\nimport { isEqual } from '@antv/util';\nimport { transform } from '../../../../utils/matrix';\n\n/**\n * 饼图 图例激活 action\n */\nexport class PieLegendAction extends Action {\n  /**\n   * 获取激活的图形元素\n   */\n  private getActiveElements(): Element[] {\n    const delegateObject = Util.getDelegationObject(this.context);\n    if (delegateObject) {\n      const view = this.context.view;\n      const { component, item } = delegateObject;\n      const field = component.get('field');\n      if (field) {\n        const elements = view.geometries[0].elements;\n        return elements.filter((ele) => ele.getModel().data[field] === item.value);\n      }\n    }\n    return [];\n  }\n\n  /**\n   * 获取激活的标签\n   */\n  private getActiveElementLabels(): (IElement | IGroup)[] {\n    const view = this.context.view;\n    const elements = this.getActiveElements();\n    const labels = view.geometries[0].labelsContainer.getChildren();\n    return labels.filter((label) => elements.find((ele) => isEqual(ele.getData(), label.get('data'))));\n  }\n\n  protected transfrom(offset: number = 7.5) {\n    const elements = this.getActiveElements();\n    const elementLabels = this.getActiveElementLabels();\n    elements.forEach((element, idx) => {\n      const labelShape = elementLabels[idx];\n      const coordinate = element.geometry.coordinate;\n      if (coordinate.isPolar && coordinate.isTransposed) {\n        const { startAngle, endAngle } = Util.getAngle(element.getModel(), coordinate);\n        const middleAngle = (startAngle + endAngle) / 2;\n        const r = offset;\n        const x = r * Math.cos(middleAngle);\n        const y = r * Math.sin(middleAngle);\n        element.shape.setMatrix(transform([['t', x, y]]));\n        labelShape.setMatrix(transform([['t', x, y]]));\n      }\n    });\n  }\n\n  public active() {\n    this.transfrom();\n  }\n\n  /**\n   * 激活态还原\n   */\n  public reset() {\n    this.transfrom(0);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}