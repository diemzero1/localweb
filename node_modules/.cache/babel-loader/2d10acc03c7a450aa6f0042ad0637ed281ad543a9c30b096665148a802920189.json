{"ast":null,"code":"import { __assign, __extends, __values } from \"tslib\";\nimport ColorUtil from '@antv/color-util';\nimport { get, isNumber } from '@antv/util';\nimport { FIELD_ORIGIN } from '../constant';\nimport Geometry from './base';\n/**\n * 用于绘制热力图。\n */\nvar Heatmap = /** @class */function (_super) {\n  __extends(Heatmap, _super);\n  function Heatmap() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = 'heatmap';\n    _this.paletteCache = {};\n    return _this;\n  }\n  Heatmap.prototype.updateElements = function (mappingDataArray, isUpdate) {\n    if (isUpdate === void 0) {\n      isUpdate = false;\n    }\n    for (var i = 0; i < mappingDataArray.length; i++) {\n      var mappingData = mappingDataArray[i];\n      var range = this.prepareRange(mappingData);\n      var radius = this.prepareSize();\n      var blur_1 = get(this.styleOption, ['cfg', 'shadowBlur']);\n      if (!isNumber(blur_1)) {\n        blur_1 = radius / 2;\n      }\n      this.prepareGreyScaleBlurredCircle(radius, blur_1);\n      this.drawWithRange(mappingData, range, radius, blur_1);\n    }\n  };\n  /** 热力图暂时不支持 callback 回调（文档需要说明下） */\n  Heatmap.prototype.color = function (field, cfg) {\n    this.createAttrOption('color', field, typeof cfg !== 'function' ? cfg : '');\n    return this;\n  };\n  /**\n   * clear\n   */\n  Heatmap.prototype.clear = function () {\n    _super.prototype.clear.call(this);\n    this.clearShadowCanvasCtx();\n    this.paletteCache = {};\n  };\n  Heatmap.prototype.prepareRange = function (data) {\n    var colorAttr = this.getAttribute('color');\n    var colorField = colorAttr.getFields()[0];\n    var min = Infinity;\n    var max = -Infinity;\n    data.forEach(function (row) {\n      var value = row[FIELD_ORIGIN][colorField];\n      if (value > max) {\n        max = value;\n      }\n      if (value < min) {\n        min = value;\n      }\n    });\n    if (min === max) {\n      min = max - 1;\n    }\n    return [min, max];\n  };\n  Heatmap.prototype.prepareSize = function () {\n    var radius = this.getDefaultValue('size');\n    if (!isNumber(radius)) {\n      radius = this.getDefaultSize();\n    }\n    return radius;\n  };\n  Heatmap.prototype.prepareGreyScaleBlurredCircle = function (radius, blur) {\n    var grayScaleBlurredCanvas = this.getGrayScaleBlurredCanvas();\n    var r2 = radius + blur;\n    var ctx = grayScaleBlurredCanvas.getContext('2d');\n    grayScaleBlurredCanvas.width = grayScaleBlurredCanvas.height = r2 * 2;\n    ctx.clearRect(0, 0, grayScaleBlurredCanvas.width, grayScaleBlurredCanvas.height);\n    ctx.shadowOffsetX = ctx.shadowOffsetY = r2 * 2;\n    ctx.shadowBlur = blur;\n    ctx.shadowColor = 'black';\n    ctx.beginPath();\n    ctx.arc(-r2, -r2, radius, 0, Math.PI * 2, true);\n    ctx.closePath();\n    ctx.fill();\n  };\n  Heatmap.prototype.drawWithRange = function (data, range, radius, blur) {\n    var e_1, _a;\n    // canvas size\n    var _b = this.coordinate,\n      start = _b.start,\n      end = _b.end;\n    var width = this.coordinate.getWidth();\n    var height = this.coordinate.getHeight();\n    // value, range, etc\n    var colorAttr = this.getAttribute('color');\n    var valueField = colorAttr.getFields()[0];\n    // prepare shadow canvas context\n    this.clearShadowCanvasCtx();\n    var ctx = this.getShadowCanvasCtx();\n    // filter data\n    if (range) {\n      data = data.filter(function (row) {\n        return row[FIELD_ORIGIN][valueField] <= range[1] && row[FIELD_ORIGIN][valueField] >= range[0];\n      });\n    }\n    // step1. draw points with shadow\n    var scale = this.scales[valueField];\n    try {\n      for (var data_1 = __values(data), data_1_1 = data_1.next(); !data_1_1.done; data_1_1 = data_1.next()) {\n        var obj = data_1_1.value;\n        var _c = this.getDrawCfg(obj),\n          x = _c.x,\n          y = _c.y;\n        var alpha = scale.scale(obj[FIELD_ORIGIN][valueField]);\n        this.drawGrayScaleBlurredCircle(x - start.x, y - end.y, radius + blur, alpha, ctx);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (data_1_1 && !data_1_1.done && (_a = data_1.return)) _a.call(data_1);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n    // step2. convert pixels\n    var colored = ctx.getImageData(0, 0, width, height);\n    this.clearShadowCanvasCtx();\n    this.colorize(colored);\n    ctx.putImageData(colored, 0, 0);\n    var imageShape = this.getImageShape();\n    imageShape.attr('x', start.x);\n    imageShape.attr('y', end.y);\n    imageShape.attr('width', width);\n    imageShape.attr('height', height);\n    imageShape.attr('img', ctx.canvas);\n    imageShape.set('origin', this.getShapeInfo(data)); // 存储绘图信息数据\n  };\n\n  Heatmap.prototype.getDefaultSize = function () {\n    var position = this.getAttribute('position');\n    var coordinate = this.coordinate;\n    return Math.min(coordinate.getWidth() / (position.scales[0].ticks.length * 4), coordinate.getHeight() / (position.scales[1].ticks.length * 4));\n  };\n  Heatmap.prototype.clearShadowCanvasCtx = function () {\n    var ctx = this.getShadowCanvasCtx();\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n  };\n  Heatmap.prototype.getShadowCanvasCtx = function () {\n    var canvas = this.shadowCanvas;\n    if (!canvas) {\n      canvas = document.createElement('canvas');\n      this.shadowCanvas = canvas;\n    }\n    canvas.width = this.coordinate.getWidth();\n    canvas.height = this.coordinate.getHeight();\n    return canvas.getContext('2d');\n  };\n  Heatmap.prototype.getGrayScaleBlurredCanvas = function () {\n    if (!this.grayScaleBlurredCanvas) {\n      this.grayScaleBlurredCanvas = document.createElement('canvas');\n    }\n    return this.grayScaleBlurredCanvas;\n  };\n  Heatmap.prototype.drawGrayScaleBlurredCircle = function (x, y, r, alpha, ctx) {\n    var grayScaleBlurredCanvas = this.getGrayScaleBlurredCanvas();\n    ctx.globalAlpha = alpha;\n    ctx.drawImage(grayScaleBlurredCanvas, x - r, y - r);\n  };\n  Heatmap.prototype.colorize = function (img) {\n    var colorAttr = this.getAttribute('color');\n    var pixels = img.data;\n    var paletteCache = this.paletteCache;\n    for (var i = 3; i < pixels.length; i += 4) {\n      var alpha = pixels[i]; // get gradient color from opacity value\n      if (isNumber(alpha)) {\n        var palette = paletteCache[alpha] ? paletteCache[alpha] : ColorUtil.rgb2arr(colorAttr.gradient(alpha / 256));\n        pixels[i - 3] = palette[0];\n        pixels[i - 2] = palette[1];\n        pixels[i - 1] = palette[2];\n        pixels[i] = alpha;\n      }\n    }\n  };\n  Heatmap.prototype.getImageShape = function () {\n    var imageShape = this.imageShape;\n    if (imageShape) {\n      return imageShape;\n    }\n    var container = this.container;\n    imageShape = container.addShape({\n      type: 'image',\n      attrs: {}\n    });\n    this.imageShape = imageShape;\n    return imageShape;\n  };\n  Heatmap.prototype.getShapeInfo = function (mappingData) {\n    var shapeCfg = this.getDrawCfg(mappingData[0]);\n    var data = mappingData.map(function (obj) {\n      return obj[FIELD_ORIGIN];\n    });\n    return __assign(__assign({}, shapeCfg), {\n      mappingData: mappingData,\n      data: data\n    });\n  };\n  return Heatmap;\n}(Geometry);\nexport default Heatmap;","map":{"version":3,"mappings":";AAAA,OAAOA,SAAS,MAAM,kBAAkB;AACxC,SAASC,GAAG,EAAEC,QAAQ,QAAQ,YAAY;AAC1C,SAASC,YAAY,QAAQ,aAAa;AAG1C,OAAOC,QAAQ,MAAM,QAAQ;AAE7B;;;AAGA;EAAqCC;EAArC;IAAA;IACkBC,UAAI,GAAW,SAAS;IAEhCA,kBAAY,GAA2B,EAAE;;EAiNnD;EA5MYC,gCAAc,GAAxB,UAAyBC,gBAAkC,EAAEC,QAAyB;IAAzB;MAAAA,gBAAyB;IAAA;IACpF,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,gBAAgB,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;MAChD,IAAME,WAAW,GAAGJ,gBAAgB,CAACE,CAAC,CAAC;MACvC,IAAMG,KAAK,GAAG,IAAI,CAACC,YAAY,CAACF,WAAW,CAAC;MAC5C,IAAMG,MAAM,GAAG,IAAI,CAACC,WAAW,EAAE;MAEjC,IAAIC,MAAI,GAAGhB,GAAG,CAAC,IAAI,CAACiB,WAAW,EAAE,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;MACvD,IAAI,CAAChB,QAAQ,CAACe,MAAI,CAAC,EAAE;QACnBA,MAAI,GAAGF,MAAM,GAAG,CAAC;;MAGnB,IAAI,CAACI,6BAA6B,CAACJ,MAAM,EAAEE,MAAI,CAAC;MAChD,IAAI,CAACG,aAAa,CAACR,WAAW,EAAEC,KAAK,EAAEE,MAAM,EAAEE,MAAI,CAAC;;EAExD,CAAC;EAED;EACOV,uBAAK,GAAZ,UAAac,KAA+B,EAAEC,GAA2C;IACvF,IAAI,CAACC,gBAAgB,CAAC,OAAO,EAAEF,KAAK,EAAE,OAAOC,GAAG,KAAK,UAAU,GAAGA,GAAG,GAAG,EAAE,CAAC;IAE3E,OAAO,IAAI;EACb,CAAC;EAED;;;EAGOf,uBAAK,GAAZ;IACEiB,iBAAMC,KAAK,WAAE;IACb,IAAI,CAACC,oBAAoB,EAAE;IAC3B,IAAI,CAACC,YAAY,GAAG,EAAE;EACxB,CAAC;EAEOpB,8BAAY,GAApB,UAAqBqB,IAAoB;IACvC,IAAMC,SAAS,GAAG,IAAI,CAACC,YAAY,CAAC,OAAO,CAAC;IAC5C,IAAMC,UAAU,GAAGF,SAAS,CAACG,SAAS,EAAE,CAAC,CAAC,CAAC;IAE3C,IAAIC,GAAG,GAAGC,QAAQ;IAClB,IAAIC,GAAG,GAAG,CAACD,QAAQ;IACnBN,IAAI,CAACQ,OAAO,CAAC,UAACC,GAAG;MACf,IAAMC,KAAK,GAAGD,GAAG,CAAClC,YAAY,CAAC,CAAC4B,UAAU,CAAC;MAC3C,IAAIO,KAAK,GAAGH,GAAG,EAAE;QACfA,GAAG,GAAGG,KAAK;;MAEb,IAAIA,KAAK,GAAGL,GAAG,EAAE;QACfA,GAAG,GAAGK,KAAK;;IAEf,CAAC,CAAC;IAEF,IAAIL,GAAG,KAAKE,GAAG,EAAE;MACfF,GAAG,GAAGE,GAAG,GAAG,CAAC;;IAGf,OAAO,CAACF,GAAG,EAAEE,GAAG,CAAC;EACnB,CAAC;EAEO5B,6BAAW,GAAnB;IACE,IAAIQ,MAAM,GAAG,IAAI,CAACwB,eAAe,CAAC,MAAM,CAAC;IACzC,IAAI,CAACrC,QAAQ,CAACa,MAAM,CAAC,EAAE;MACrBA,MAAM,GAAG,IAAI,CAACyB,cAAc,EAAE;;IAGhC,OAAOzB,MAAM;EACf,CAAC;EAEOR,+CAA6B,GAArC,UAAsCQ,MAAc,EAAE0B,IAAY;IAChE,IAAMC,sBAAsB,GAAG,IAAI,CAACC,yBAAyB,EAAE;IAC/D,IAAMC,EAAE,GAAG7B,MAAM,GAAG0B,IAAI;IACxB,IAAMI,GAAG,GAAGH,sBAAsB,CAACI,UAAU,CAAC,IAAI,CAAC;IACnDJ,sBAAsB,CAACK,KAAK,GAAGL,sBAAsB,CAACM,MAAM,GAAGJ,EAAE,GAAG,CAAC;IACrEC,GAAG,CAACI,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEP,sBAAsB,CAACK,KAAK,EAAEL,sBAAsB,CAACM,MAAM,CAAC;IAChFH,GAAG,CAACK,aAAa,GAAGL,GAAG,CAACM,aAAa,GAAGP,EAAE,GAAG,CAAC;IAC9CC,GAAG,CAACO,UAAU,GAAGX,IAAI;IACrBI,GAAG,CAACQ,WAAW,GAAG,OAAO;IAEzBR,GAAG,CAACS,SAAS,EAAE;IACfT,GAAG,CAACU,GAAG,CAAC,CAACX,EAAE,EAAE,CAACA,EAAE,EAAE7B,MAAM,EAAE,CAAC,EAAEyC,IAAI,CAACC,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC;IAC/CZ,GAAG,CAACa,SAAS,EAAE;IACfb,GAAG,CAACc,IAAI,EAAE;EACZ,CAAC;EAEOpD,+BAAa,GAArB,UAAsBqB,IAAoB,EAAEf,KAAe,EAAEE,MAAc,EAAE0B,IAAY;;IACvF;IACM,SAAiB,IAAI,CAACmB,UAAU;MAA9BC,KAAK;MAAEC,GAAG,SAAoB;IACtC,IAAMf,KAAK,GAAG,IAAI,CAACa,UAAU,CAACG,QAAQ,EAAE;IACxC,IAAMf,MAAM,GAAG,IAAI,CAACY,UAAU,CAACI,SAAS,EAAE;IAE1C;IACA,IAAMnC,SAAS,GAAG,IAAI,CAACC,YAAY,CAAC,OAAO,CAAC;IAC5C,IAAMmC,UAAU,GAAGpC,SAAS,CAACG,SAAS,EAAE,CAAC,CAAC,CAAC;IAE3C;IACA,IAAI,CAACN,oBAAoB,EAAE;IAC3B,IAAMmB,GAAG,GAAG,IAAI,CAACqB,kBAAkB,EAAE;IACrC;IACA,IAAIrD,KAAK,EAAE;MACTe,IAAI,GAAGA,IAAI,CAACuC,MAAM,CAAC,UAAC9B,GAAG;QACrB,OAAOA,GAAG,CAAClC,YAAY,CAAC,CAAC8D,UAAU,CAAC,IAAIpD,KAAK,CAAC,CAAC,CAAC,IAAIwB,GAAG,CAAClC,YAAY,CAAC,CAAC8D,UAAU,CAAC,IAAIpD,KAAK,CAAC,CAAC,CAAC;MAC/F,CAAC,CAAC;;IAGJ;IACA,IAAMuD,KAAK,GAAG,IAAI,CAACC,MAAM,CAACJ,UAAU,CAAC;;MACrC,KAAkB,0BAAI,uEAAE;QAAnB,IAAMK,GAAG;QACN,SAAW,IAAI,CAACC,UAAU,CAACD,GAAG,CAAC;UAA7BE,CAAC;UAAEC,CAAC,OAAyB;QACrC,IAAMC,KAAK,GAAGN,KAAK,CAACA,KAAK,CAACE,GAAG,CAACnE,YAAY,CAAC,CAAC8D,UAAU,CAAC,CAAC;QACxD,IAAI,CAACU,0BAA0B,CAAEH,CAAY,GAAGX,KAAK,CAACW,CAAC,EAAGC,CAAY,GAAGX,GAAG,CAACW,CAAC,EAAE1D,MAAM,GAAG0B,IAAI,EAAEiC,KAAK,EAAE7B,GAAG,CAAC;;;;;;;;;;;;;IAG5G;IACA,IAAM+B,OAAO,GAAG/B,GAAG,CAACgC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE9B,KAAK,EAAEC,MAAM,CAAC;IACrD,IAAI,CAACtB,oBAAoB,EAAE;IAC3B,IAAI,CAACoD,QAAQ,CAACF,OAAO,CAAC;IACtB/B,GAAG,CAACkC,YAAY,CAACH,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;IAC/B,IAAMI,UAAU,GAAG,IAAI,CAACC,aAAa,EAAE;IACvCD,UAAU,CAACE,IAAI,CAAC,GAAG,EAAErB,KAAK,CAACW,CAAC,CAAC;IAC7BQ,UAAU,CAACE,IAAI,CAAC,GAAG,EAAEpB,GAAG,CAACW,CAAC,CAAC;IAC3BO,UAAU,CAACE,IAAI,CAAC,OAAO,EAAEnC,KAAK,CAAC;IAC/BiC,UAAU,CAACE,IAAI,CAAC,QAAQ,EAAElC,MAAM,CAAC;IACjCgC,UAAU,CAACE,IAAI,CAAC,KAAK,EAAErC,GAAG,CAACsC,MAAM,CAAC;IAClCH,UAAU,CAACI,GAAG,CAAC,QAAQ,EAAE,IAAI,CAACC,YAAY,CAACzD,IAAI,CAAC,CAAC,CAAC,CAAC;EACrD,CAAC;;EAEOrB,gCAAc,GAAtB;IACE,IAAM+E,QAAQ,GAAG,IAAI,CAACxD,YAAY,CAAC,UAAU,CAAC;IAC9C,IAAM8B,UAAU,GAAG,IAAI,CAACA,UAAU;IAClC,OAAOJ,IAAI,CAACvB,GAAG,CACb2B,UAAU,CAACG,QAAQ,EAAE,IAAIuB,QAAQ,CAACjB,MAAM,CAAC,CAAC,CAAC,CAACkB,KAAK,CAAC5E,MAAM,GAAG,CAAC,CAAC,EAC7DiD,UAAU,CAACI,SAAS,EAAE,IAAIsB,QAAQ,CAACjB,MAAM,CAAC,CAAC,CAAC,CAACkB,KAAK,CAAC5E,MAAM,GAAG,CAAC,CAAC,CAC/D;EACH,CAAC;EAEOJ,sCAAoB,GAA5B;IACE,IAAMsC,GAAG,GAAG,IAAI,CAACqB,kBAAkB,EAAE;IACrCrB,GAAG,CAACI,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEJ,GAAG,CAACsC,MAAM,CAACpC,KAAK,EAAEF,GAAG,CAACsC,MAAM,CAACnC,MAAM,CAAC;EAC1D,CAAC;EAEOzC,oCAAkB,GAA1B;IACE,IAAI4E,MAAM,GAAG,IAAI,CAACK,YAAY;IAC9B,IAAI,CAACL,MAAM,EAAE;MACXA,MAAM,GAAGM,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;MACzC,IAAI,CAACF,YAAY,GAAGL,MAAM;;IAE5BA,MAAM,CAACpC,KAAK,GAAG,IAAI,CAACa,UAAU,CAACG,QAAQ,EAAE;IACzCoB,MAAM,CAACnC,MAAM,GAAG,IAAI,CAACY,UAAU,CAACI,SAAS,EAAE;IAC3C,OAAOmB,MAAM,CAACrC,UAAU,CAAC,IAAI,CAAC;EAChC,CAAC;EAEOvC,2CAAyB,GAAjC;IACE,IAAI,CAAC,IAAI,CAACmC,sBAAsB,EAAE;MAChC,IAAI,CAACA,sBAAsB,GAAG+C,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;;IAGhE,OAAO,IAAI,CAAChD,sBAAsB;EACpC,CAAC;EAEOnC,4CAA0B,GAAlC,UAAmCiE,CAAS,EAAEC,CAAS,EAAEkB,CAAS,EAAEjB,KAAa,EAAE7B,GAA6B;IAC9G,IAAMH,sBAAsB,GAAG,IAAI,CAACC,yBAAyB,EAAE;IAC/DE,GAAG,CAAC+C,WAAW,GAAGlB,KAAK;IACvB7B,GAAG,CAACgD,SAAS,CAACnD,sBAAsB,EAAE8B,CAAC,GAAGmB,CAAC,EAAElB,CAAC,GAAGkB,CAAC,CAAC;EACrD,CAAC;EAEOpF,0BAAQ,GAAhB,UAAiBuF,GAAc;IAC7B,IAAMjE,SAAS,GAAG,IAAI,CAACC,YAAY,CAAC,OAAO,CAAU;IACrD,IAAMiE,MAAM,GAAGD,GAAG,CAAClE,IAAI;IACvB,IAAMD,YAAY,GAAG,IAAI,CAACA,YAAY;IACtC,KAAK,IAAIjB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqF,MAAM,CAACpF,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;MACzC,IAAMgE,KAAK,GAAGqB,MAAM,CAACrF,CAAC,CAAC,CAAC,CAAC;MACzB,IAAIR,QAAQ,CAACwE,KAAK,CAAC,EAAE;QACnB,IAAMsB,OAAO,GAAGrE,YAAY,CAAC+C,KAAK,CAAC,GAAG/C,YAAY,CAAC+C,KAAK,CAAC,GAAG1E,SAAS,CAACiG,OAAO,CAACpE,SAAS,CAACqE,QAAQ,CAACxB,KAAK,GAAG,GAAG,CAAC,CAAC;QAC9GqB,MAAM,CAACrF,CAAC,GAAG,CAAC,CAAC,GAAGsF,OAAO,CAAC,CAAC,CAAC;QAC1BD,MAAM,CAACrF,CAAC,GAAG,CAAC,CAAC,GAAGsF,OAAO,CAAC,CAAC,CAAC;QAC1BD,MAAM,CAACrF,CAAC,GAAG,CAAC,CAAC,GAAGsF,OAAO,CAAC,CAAC,CAAC;QAC1BD,MAAM,CAACrF,CAAC,CAAC,GAAGgE,KAAK;;;EAGvB,CAAC;EAEOnE,+BAAa,GAArB;IACE,IAAIyE,UAAU,GAAG,IAAI,CAACA,UAAU;IAChC,IAAIA,UAAU,EAAE;MACd,OAAOA,UAAU;;IAEnB,IAAMmB,SAAS,GAAG,IAAI,CAACA,SAAS;IAChCnB,UAAU,GAAGmB,SAAS,CAACC,QAAQ,CAAC;MAC9BC,IAAI,EAAE,OAAO;MACbC,KAAK,EAAE;KACR,CAAC;IACF,IAAI,CAACtB,UAAU,GAAGA,UAAU;IAC5B,OAAOA,UAAU;EACnB,CAAC;EAEOzE,8BAAY,GAApB,UAAqBK,WAA2B;IAC9C,IAAM2F,QAAQ,GAAG,IAAI,CAAChC,UAAU,CAAC3D,WAAW,CAAC,CAAC,CAAC,CAAC;IAEhD,IAAMgB,IAAI,GAAGhB,WAAW,CAAC4F,GAAG,CAAC,UAAClC,GAAU;MACtC,OAAOA,GAAG,CAACnE,YAAY,CAAC;IAC1B,CAAC,CAAC;IAEF,6BACKoG,QAAQ;MACX3F,WAAW;MACXgB,IAAI;IAAA;EAER,CAAC;EACH,cAAC;AAAD,CAAC,CApNoCxB,QAAQ","names":["ColorUtil","get","isNumber","FIELD_ORIGIN","Geometry","__extends","_this","Heatmap","mappingDataArray","isUpdate","i","length","mappingData","range","prepareRange","radius","prepareSize","blur_1","styleOption","prepareGreyScaleBlurredCircle","drawWithRange","field","cfg","createAttrOption","_super","clear","clearShadowCanvasCtx","paletteCache","data","colorAttr","getAttribute","colorField","getFields","min","Infinity","max","forEach","row","value","getDefaultValue","getDefaultSize","blur","grayScaleBlurredCanvas","getGrayScaleBlurredCanvas","r2","ctx","getContext","width","height","clearRect","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","beginPath","arc","Math","PI","closePath","fill","coordinate","start","end","getWidth","getHeight","valueField","getShadowCanvasCtx","filter","scale","scales","obj","getDrawCfg","x","y","alpha","drawGrayScaleBlurredCircle","colored","getImageData","colorize","putImageData","imageShape","getImageShape","attr","canvas","set","getShapeInfo","position","ticks","shadowCanvas","document","createElement","r","globalAlpha","drawImage","img","pixels","palette","rgb2arr","gradient","container","addShape","type","attrs","shapeCfg","map"],"sources":["/home/iam/Documents/LocalWeb-master/node_modules/@antv/g2/src/geometry/heatmap.ts"],"sourcesContent":["import ColorUtil from '@antv/color-util';\nimport { get, isNumber } from '@antv/util';\nimport { FIELD_ORIGIN } from '../constant';\nimport { Color, IShape } from '../dependents';\nimport { Data, Datum, MappingDatum, ShapeInfo, AttributeOption, ColorAttrCallback } from '../interface';\nimport Geometry from './base';\n\n/**\n * 用于绘制热力图。\n */\nexport default class Heatmap extends Geometry {\n  public readonly type: string = 'heatmap';\n\n  private paletteCache: Record<number, number> = {};\n  private grayScaleBlurredCanvas: HTMLCanvasElement;\n  private shadowCanvas: HTMLCanvasElement;\n  private imageShape: IShape;\n\n  protected updateElements(mappingDataArray: MappingDatum[][], isUpdate: boolean = false) {\n    for (let i = 0; i < mappingDataArray.length; i++) {\n      const mappingData = mappingDataArray[i];\n      const range = this.prepareRange(mappingData);\n      const radius = this.prepareSize();\n\n      let blur = get(this.styleOption, ['cfg', 'shadowBlur']);\n      if (!isNumber(blur)) {\n        blur = radius / 2;\n      }\n\n      this.prepareGreyScaleBlurredCircle(radius, blur);\n      this.drawWithRange(mappingData, range, radius, blur);\n    }\n  }\n\n  /** 热力图暂时不支持 callback 回调（文档需要说明下） */\n  public color(field: AttributeOption | string, cfg?: string | string[] | ColorAttrCallback): Geometry {\n    this.createAttrOption('color', field, typeof cfg !== 'function' ? cfg : '');\n\n    return this;\n  }\n\n  /**\n   * clear\n   */\n  public clear() {\n    super.clear();\n    this.clearShadowCanvasCtx();\n    this.paletteCache = {};\n  }\n\n  private prepareRange(data: MappingDatum[]) {\n    const colorAttr = this.getAttribute('color');\n    const colorField = colorAttr.getFields()[0];\n\n    let min = Infinity;\n    let max = -Infinity;\n    data.forEach((row) => {\n      const value = row[FIELD_ORIGIN][colorField];\n      if (value > max) {\n        max = value;\n      }\n      if (value < min) {\n        min = value;\n      }\n    });\n\n    if (min === max) {\n      min = max - 1;\n    }\n\n    return [min, max];\n  }\n\n  private prepareSize() {\n    let radius = this.getDefaultValue('size');\n    if (!isNumber(radius)) {\n      radius = this.getDefaultSize();\n    }\n\n    return radius;\n  }\n\n  private prepareGreyScaleBlurredCircle(radius: number, blur: number) {\n    const grayScaleBlurredCanvas = this.getGrayScaleBlurredCanvas();\n    const r2 = radius + blur;\n    const ctx = grayScaleBlurredCanvas.getContext('2d');\n    grayScaleBlurredCanvas.width = grayScaleBlurredCanvas.height = r2 * 2;\n    ctx.clearRect(0, 0, grayScaleBlurredCanvas.width, grayScaleBlurredCanvas.height);\n    ctx.shadowOffsetX = ctx.shadowOffsetY = r2 * 2;\n    ctx.shadowBlur = blur;\n    ctx.shadowColor = 'black';\n\n    ctx.beginPath();\n    ctx.arc(-r2, -r2, radius, 0, Math.PI * 2, true);\n    ctx.closePath();\n    ctx.fill();\n  }\n\n  private drawWithRange(data: MappingDatum[], range: number[], radius: number, blur: number) {\n    // canvas size\n    const { start, end } = this.coordinate;\n    const width = this.coordinate.getWidth();\n    const height = this.coordinate.getHeight();\n\n    // value, range, etc\n    const colorAttr = this.getAttribute('color');\n    const valueField = colorAttr.getFields()[0];\n\n    // prepare shadow canvas context\n    this.clearShadowCanvasCtx();\n    const ctx = this.getShadowCanvasCtx();\n    // filter data\n    if (range) {\n      data = data.filter((row) => {\n        return row[FIELD_ORIGIN][valueField] <= range[1] && row[FIELD_ORIGIN][valueField] >= range[0];\n      });\n    }\n\n    // step1. draw points with shadow\n    const scale = this.scales[valueField];\n    for (const obj of data) {\n      const { x, y } = this.getDrawCfg(obj);\n      const alpha = scale.scale(obj[FIELD_ORIGIN][valueField]);\n      this.drawGrayScaleBlurredCircle((x as number) - start.x, (y as number) - end.y, radius + blur, alpha, ctx);\n    }\n\n    // step2. convert pixels\n    const colored = ctx.getImageData(0, 0, width, height);\n    this.clearShadowCanvasCtx();\n    this.colorize(colored);\n    ctx.putImageData(colored, 0, 0);\n    const imageShape = this.getImageShape();\n    imageShape.attr('x', start.x);\n    imageShape.attr('y', end.y);\n    imageShape.attr('width', width);\n    imageShape.attr('height', height);\n    imageShape.attr('img', ctx.canvas);\n    imageShape.set('origin', this.getShapeInfo(data)); // 存储绘图信息数据\n  }\n\n  private getDefaultSize() {\n    const position = this.getAttribute('position');\n    const coordinate = this.coordinate;\n    return Math.min(\n      coordinate.getWidth() / (position.scales[0].ticks.length * 4),\n      coordinate.getHeight() / (position.scales[1].ticks.length * 4)\n    );\n  }\n\n  private clearShadowCanvasCtx() {\n    const ctx = this.getShadowCanvasCtx();\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n  }\n\n  private getShadowCanvasCtx() {\n    let canvas = this.shadowCanvas;\n    if (!canvas) {\n      canvas = document.createElement('canvas');\n      this.shadowCanvas = canvas;\n    }\n    canvas.width = this.coordinate.getWidth();\n    canvas.height = this.coordinate.getHeight();\n    return canvas.getContext('2d');\n  }\n\n  private getGrayScaleBlurredCanvas() {\n    if (!this.grayScaleBlurredCanvas) {\n      this.grayScaleBlurredCanvas = document.createElement('canvas');\n    }\n\n    return this.grayScaleBlurredCanvas;\n  }\n\n  private drawGrayScaleBlurredCircle(x: number, y: number, r: number, alpha: number, ctx: CanvasRenderingContext2D) {\n    const grayScaleBlurredCanvas = this.getGrayScaleBlurredCanvas();\n    ctx.globalAlpha = alpha;\n    ctx.drawImage(grayScaleBlurredCanvas, x - r, y - r);\n  }\n\n  private colorize(img: ImageData) {\n    const colorAttr = this.getAttribute('color') as Color;\n    const pixels = img.data;\n    const paletteCache = this.paletteCache;\n    for (let i = 3; i < pixels.length; i += 4) {\n      const alpha = pixels[i]; // get gradient color from opacity value\n      if (isNumber(alpha)) {\n        const palette = paletteCache[alpha] ? paletteCache[alpha] : ColorUtil.rgb2arr(colorAttr.gradient(alpha / 256));\n        pixels[i - 3] = palette[0];\n        pixels[i - 2] = palette[1];\n        pixels[i - 1] = palette[2];\n        pixels[i] = alpha;\n      }\n    }\n  }\n\n  private getImageShape() {\n    let imageShape = this.imageShape;\n    if (imageShape) {\n      return imageShape;\n    }\n    const container = this.container;\n    imageShape = container.addShape({\n      type: 'image',\n      attrs: {},\n    });\n    this.imageShape = imageShape;\n    return imageShape;\n  }\n\n  private getShapeInfo(mappingData: MappingDatum[]): ShapeInfo {\n    const shapeCfg = this.getDrawCfg(mappingData[0]);\n\n    const data = mappingData.map((obj: Datum) => {\n      return obj[FIELD_ORIGIN];\n    });\n\n    return {\n      ...shapeCfg,\n      mappingData,\n      data,\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}