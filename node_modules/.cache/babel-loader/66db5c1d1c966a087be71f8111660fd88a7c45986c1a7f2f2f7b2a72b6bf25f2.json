{"ast":null,"code":"import { BBox } from '../../../util/bbox';\nimport { isContrastColorWhite } from '../../../util/color';\nexport function adjustColor(items, labels, shapes) {\n  if (shapes.length === 0) {\n    return;\n  }\n  var element = shapes[0].get('element');\n  var theme = element.geometry.theme;\n  var _a = theme.labels || {},\n    fillColorLight = _a.fillColorLight,\n    fillColorDark = _a.fillColorDark;\n  shapes.forEach(function (shape, index) {\n    var label = labels[index];\n    var textShape = label.find(function (el) {\n      return el.get('type') === 'text';\n    });\n    var shapeBBox = BBox.fromObject(shape.getBBox());\n    var textBBox = BBox.fromObject(textShape.getCanvasBBox());\n    var overflow = !shapeBBox.contains(textBBox);\n    var bgColor = shape.attr('fill');\n    var fillWhite = isContrastColorWhite(bgColor);\n    if (!overflow) {\n      if (fillWhite) {\n        if (fillColorLight) {\n          textShape.attr('fill', fillColorLight);\n        }\n      } else {\n        if (fillColorDark) {\n          textShape.attr('fill', fillColorDark);\n        }\n      }\n    } else {\n      // 出现溢出直接应用 overflowLabel 样式\n      textShape.attr(theme.overflowLabels.style);\n    }\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,IAAI,QAAQ,oBAAoB;AACzC,SAASC,oBAAoB,QAAQ,qBAAqB;AAI1D,OAAM,SAAUC,WAAW,CAACC,KAAkB,EAAEC,MAAgB,EAAEC,MAA2B;EAC3F,IAAIA,MAAM,CAACC,MAAM,KAAK,CAAC,EAAE;IACvB;;EAEF,IAAMC,OAAO,GAAYF,MAAM,CAAC,CAAC,CAAC,CAACG,GAAG,CAAC,SAAS,CAAC;EACjD,IAAMC,KAAK,GAAGF,OAAO,CAACG,QAAQ,CAACD,KAAK;EAC9B,SAAoCA,KAAK,CAACL,MAAM,IAAI,EAAE;IAApDO,cAAc;IAAEC,aAAa,mBAAuB;EAE5DP,MAAM,CAACQ,OAAO,CAAC,UAACC,KAAsB,EAAEC,KAAa;IACnD,IAAMC,KAAK,GAAGZ,MAAM,CAACW,KAAK,CAAC;IAC3B,IAAME,SAAS,GAAGD,KAAK,CAACE,IAAI,CAAC,UAACC,EAAE;MAAK,SAAE,CAACX,GAAG,CAAC,MAAM,CAAC,KAAK,MAAM;IAAzB,CAAyB,CAAC;IAC/D,IAAMY,SAAS,GAAGpB,IAAI,CAACqB,UAAU,CAACP,KAAK,CAACQ,OAAO,EAAE,CAAC;IAClD,IAAMC,QAAQ,GAAGvB,IAAI,CAACqB,UAAU,CAACJ,SAAS,CAACO,aAAa,EAAE,CAAC;IAC3D,IAAMC,QAAQ,GAAG,CAACL,SAAS,CAACM,QAAQ,CAACH,QAAQ,CAAC;IAE9C,IAAMI,OAAO,GAAGb,KAAK,CAACc,IAAI,CAAC,MAAM,CAAC;IAClC,IAAMC,SAAS,GAAG5B,oBAAoB,CAAC0B,OAAO,CAAC;IAE/C,IAAI,CAACF,QAAQ,EAAE;MACb,IAAII,SAAS,EAAE;QACb,IAAIlB,cAAc,EAAE;UAClBM,SAAS,CAACW,IAAI,CAAC,MAAM,EAAEjB,cAAc,CAAC;;OAEzC,MAAM;QACL,IAAIC,aAAa,EAAE;UACjBK,SAAS,CAACW,IAAI,CAAC,MAAM,EAAEhB,aAAa,CAAC;;;KAG1C,MAAM;MACL;MACAK,SAAS,CAACW,IAAI,CAACnB,KAAK,CAACqB,cAAc,CAACC,KAAK,CAAC;;EAE9C,CAAC,CAAC;AACJ","names":["BBox","isContrastColorWhite","adjustColor","items","labels","shapes","length","element","get","theme","geometry","fillColorLight","fillColorDark","forEach","shape","index","label","textShape","find","el","shapeBBox","fromObject","getBBox","textBBox","getCanvasBBox","overflow","contains","bgColor","attr","fillWhite","overflowLabels","style"],"sources":["/home/iam/Documents/network/node_modules/@antv/g2/src/geometry/label/layout/adjust-color.ts"],"sourcesContent":["import { IGroup, IShape } from '../../../dependents';\nimport { BBox } from '../../../util/bbox';\nimport { isContrastColorWhite } from '../../../util/color';\nimport Element from '../../element';\nimport { LabelItem } from '../interface';\n\nexport function adjustColor(items: LabelItem[], labels: IGroup[], shapes: IShape[] | IGroup[]) {\n  if (shapes.length === 0) {\n    return;\n  }\n  const element: Element = shapes[0].get('element');\n  const theme = element.geometry.theme;\n  const { fillColorLight, fillColorDark } = theme.labels || {};\n\n  shapes.forEach((shape: IShape | IGroup, index: number) => {\n    const label = labels[index];\n    const textShape = label.find((el) => el.get('type') === 'text');\n    const shapeBBox = BBox.fromObject(shape.getBBox());\n    const textBBox = BBox.fromObject(textShape.getCanvasBBox());\n    const overflow = !shapeBBox.contains(textBBox);\n\n    const bgColor = shape.attr('fill');\n    const fillWhite = isContrastColorWhite(bgColor);\n\n    if (!overflow) {\n      if (fillWhite) {\n        if (fillColorLight) {\n          textShape.attr('fill', fillColorLight);\n        }\n      } else {\n        if (fillColorDark) {\n          textShape.attr('fill', fillColorDark);\n        }\n      }\n    } else {\n      // 出现溢出直接应用 overflowLabel 样式\n      textShape.attr(theme.overflowLabels.style);\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}