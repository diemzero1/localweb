{"ast":null,"code":"import { animation, annotation, pattern, theme, tooltip } from '../../adaptor/common';\nimport { interval } from '../../adaptor/geometries';\nimport { deepAssign, flow } from '../../utils';\nimport { meta } from '../tiny-area/adaptor';\nimport { X_FIELD, Y_FIELD } from '../tiny-line/constants';\nimport { getTinyData } from '../tiny-line/utils';\nexport { meta };\n/**\n * 字段\n * @param params\n */\nfunction geometry(params) {\n  var chart = params.chart,\n    options = params.options;\n  var data = options.data,\n    color = options.color,\n    columnStyle = options.columnStyle,\n    columnWidthRatio = options.columnWidthRatio;\n  var seriesData = getTinyData(data);\n  chart.data(seriesData);\n  var p = deepAssign({}, params, {\n    options: {\n      xField: X_FIELD,\n      yField: Y_FIELD,\n      widthRatio: columnWidthRatio,\n      interval: {\n        style: columnStyle,\n        color: color\n      }\n    }\n  });\n  interval(p);\n  chart.axis(false);\n  chart.legend(false);\n  chart.interaction('element-active');\n  return params;\n}\n/**\n * 迷你柱形图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params) {\n  return flow(theme, pattern('columnStyle'), geometry, meta, tooltip, animation, annotation())(params);\n}","map":{"version":3,"mappings":"AAAA,SAASA,SAAS,EAAEC,UAAU,EAAEC,OAAO,EAAEC,KAAK,EAAEC,OAAO,QAAQ,sBAAsB;AACrF,SAASC,QAAQ,QAAQ,0BAA0B;AAEnD,SAASC,UAAU,EAAEC,IAAI,QAAQ,aAAa;AAC9C,SAASC,IAAI,QAAQ,sBAAsB;AAC3C,SAASC,OAAO,EAAEC,OAAO,QAAQ,wBAAwB;AACzD,SAASC,WAAW,QAAQ,oBAAoB;AAGhD,SAASH,IAAI;AAEb;;;;AAIA,SAASI,QAAQ,CAACC,MAAiC;EACzC,SAAK,GAAcA,MAAM,MAApB;IAAEC,OAAO,GAAKD,MAAM,QAAX;EACd,QAAI,GAA2CC,OAAO,KAAlD;IAAEC,KAAK,GAAoCD,OAAO,MAA3C;IAAEE,WAAW,GAAuBF,OAAO,YAA9B;IAAEG,gBAAgB,GAAKH,OAAO,iBAAZ;EAElD,IAAMI,UAAU,GAAGP,WAAW,CAACQ,IAAI,CAAC;EAEpCC,KAAK,CAACD,IAAI,CAACD,UAAU,CAAC;EAEtB,IAAMG,CAAC,GAAGf,UAAU,CAAC,EAAE,EAAEO,MAAM,EAAE;IAC/BC,OAAO,EAAE;MACPQ,MAAM,EAAEb,OAAO;MACfc,MAAM,EAAEb,OAAO;MACfc,UAAU,EAAEP,gBAAgB;MAC5BZ,QAAQ,EAAE;QACRoB,KAAK,EAAET,WAAW;QAClBD,KAAK;;;GAGV,CAAC;EACFV,QAAQ,CAACgB,CAAC,CAAC;EAEXD,KAAK,CAACM,IAAI,CAAC,KAAK,CAAC;EACjBN,KAAK,CAACO,MAAM,CAAC,KAAK,CAAC;EACnBP,KAAK,CAACQ,WAAW,CAAC,gBAAgB,CAAC;EACnC,OAAOf,MAAM;AACf;AAEA;;;;;AAKA,OAAM,SAAUgB,OAAO,CAAChB,MAAiC;EACvD,OAAON,IAAI,CAACJ,KAAK,EAAED,OAAO,CAAC,aAAa,CAAC,EAAEU,QAAQ,EAAEJ,IAAI,EAAEJ,OAAO,EAAEJ,SAAS,EAAEC,UAAU,EAAE,CAAC,CAACY,MAAM,CAAC;AACtG","names":["animation","annotation","pattern","theme","tooltip","interval","deepAssign","flow","meta","X_FIELD","Y_FIELD","getTinyData","geometry","params","options","color","columnStyle","columnWidthRatio","seriesData","data","chart","p","xField","yField","widthRatio","style","axis","legend","interaction","adaptor"],"sources":["/home/iam/Documents/LocalWeb-master/node_modules/@antv/g2plot/src/plots/tiny-column/adaptor.ts"],"sourcesContent":["import { animation, annotation, pattern, theme, tooltip } from '../../adaptor/common';\nimport { interval } from '../../adaptor/geometries';\nimport { Params } from '../../core/adaptor';\nimport { deepAssign, flow } from '../../utils';\nimport { meta } from '../tiny-area/adaptor';\nimport { X_FIELD, Y_FIELD } from '../tiny-line/constants';\nimport { getTinyData } from '../tiny-line/utils';\nimport { TinyColumnOptions } from './types';\n\nexport { meta };\n\n/**\n * 字段\n * @param params\n */\nfunction geometry(params: Params<TinyColumnOptions>): Params<TinyColumnOptions> {\n  const { chart, options } = params;\n  const { data, color, columnStyle, columnWidthRatio } = options;\n\n  const seriesData = getTinyData(data);\n\n  chart.data(seriesData);\n\n  const p = deepAssign({}, params, {\n    options: {\n      xField: X_FIELD,\n      yField: Y_FIELD,\n      widthRatio: columnWidthRatio,\n      interval: {\n        style: columnStyle,\n        color,\n      },\n    },\n  });\n  interval(p);\n\n  chart.axis(false);\n  chart.legend(false);\n  chart.interaction('element-active');\n  return params;\n}\n\n/**\n * 迷你柱形图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<TinyColumnOptions>) {\n  return flow(theme, pattern('columnStyle'), geometry, meta, tooltip, animation, annotation())(params);\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}