{"ast":null,"code":"var _jsxFileName = \"/home/iam/Documents/LocalWeb-master/src/components/antd/system/settings/authen.tsx\",\n  _s = $RefreshSig$();\nimport { message as antdMessage, Form, Input, Button, Space, Row, Card, Col } from 'antd';\nimport React from 'react';\nimport ubusApi from '../../../../service/api/ubus-api';\nimport { useTranslation } from \"react-i18next\";\nimport \"../../../../translations/i18n\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EditPassword = props => {\n  _s();\n  const {\n    item\n  } = props;\n  const [form] = Form.useForm();\n  const [passwordVisible, setPasswordVisible] = React.useState(false);\n  const {\n    t\n  } = useTranslation();\n  const abc = t('error_fill');\n  if (item) {\n    const {\n      account_type\n    } = item;\n    form.setFieldsValue({\n      type: account_type\n    });\n  }\n  const onFinish = async values => {\n    const param = {\n      current_password: values.current_password,\n      new_password: values.new_password\n    };\n    if (values.new_password !== values.confim_password) {\n      antdMessage.error(t(\"wrong_confirm_password\"));\n    } else {\n      const key = 'updatable';\n      antdMessage.loading({\n        content: t(\"loading\"),\n        key\n      });\n      setTimeout(() => {\n        antdMessage.success({\n          content: t(\"success\"),\n          key,\n          duration: 2\n        });\n      }, 1000);\n      let result = await ubusApi.config_system_password(param);\n      const {\n        code,\n        status\n      } = result;\n      if (code === 1) antdMessage.error(t(\"wrong_current_password\"));else antdMessage.success(t(\"change_password_ok\"));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      span: 4\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      span: 16,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        title: t(\"change_password\"),\n        type: \"inner\",\n        headStyle: {\n          background: \"linear-gradient(109.6deg, rgb(44, 83, 131), rgb(44, 83, 131) 18.9%, rgb(68, 124, 143), rgb(44, 83, 131) 91.1%, rgb(44, 83, 131))\",\n          color: 'white'\n        },\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          labelCol: {\n            span: 6\n          },\n          wrapperCol: {\n            span: 20\n          },\n          form: form,\n          onFinish: onFinish,\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"current_password\",\n            label: t(\"current_password\"),\n            rules: [{\n              required: true,\n              message: String(t(\"error_fill\"))\n            }],\n            children: /*#__PURE__*/_jsxDEV(Space, {\n              direction: \"horizontal\",\n              children: /*#__PURE__*/_jsxDEV(Input.Password, {\n                visibilityToggle: {\n                  visible: passwordVisible,\n                  onVisibleChange: setPasswordVisible\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"new_password\",\n            label: t(\"new_password\"),\n            rules: [{\n              required: true,\n              message: String(t(\"error_fill\"))\n            }],\n            children: /*#__PURE__*/_jsxDEV(Space, {\n              direction: \"horizontal\",\n              children: /*#__PURE__*/_jsxDEV(Input.Password, {\n                visibilityToggle: {\n                  visible: passwordVisible,\n                  onVisibleChange: setPasswordVisible\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"confim_password\",\n            label: t(\"confirm_new_password\"),\n            rules: [{\n              required: true,\n              message: String(t(\"error_fill\"))\n            }],\n            children: /*#__PURE__*/_jsxDEV(Space, {\n              direction: \"horizontal\",\n              children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            wrapperCol: {\n              offset: 6,\n              span: 16\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              htmlType: \"submit\",\n              type: \"primary\",\n              children: t(\"submit\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(EditPassword, \"6V0n/o8Iqh5YMS5bQMGYfp22AJc=\", false, function () {\n  return [Form.useForm, useTranslation];\n});\n_c = EditPassword;\nvar _c;\n$RefreshReg$(_c, \"EditPassword\");","map":{"version":3,"names":["message","antdMessage","Form","Input","Button","Space","Row","Card","Col","React","ubusApi","useTranslation","EditPassword","props","item","form","useForm","passwordVisible","setPasswordVisible","useState","t","abc","account_type","setFieldsValue","type","onFinish","values","param","current_password","new_password","confim_password","error","key","loading","content","setTimeout","success","duration","result","config_system_password","code","status","background","color","span","required","String","visible","onVisibleChange","offset"],"sources":["/home/iam/Documents/LocalWeb-master/src/components/antd/system/settings/authen.tsx"],"sourcesContent":["import { message as antdMessage, Form, Input, Button, Space, Row, Card, Col } from 'antd'\nimport React from 'react'\nimport ubusApi from '../../../../service/api/ubus-api'\nimport { useTranslation } from \"react-i18next\";\nimport \"../../../../translations/i18n\";\n\nexport const EditPassword = (props: any) => {\n    const { item } = props\n    const [form] = Form.useForm()\n    const [passwordVisible, setPasswordVisible] = React.useState(false);\n    const { t } = useTranslation();\n    const abc = t('error_fill')\n\n    if (item) {\n        const { account_type } = item\n        form.setFieldsValue({ type: account_type })\n    }\n    const onFinish = async (values: any) => {\n        const param = {\n            current_password: values.current_password, new_password: values.new_password,\n        }\n        if (values.new_password !== values.confim_password) {\n            antdMessage.error(t(\"wrong_confirm_password\"))\n        } else {\n            const key = 'updatable';\n            antdMessage.loading({ content: t(\"loading\"), key });\n            setTimeout(() => {\n                antdMessage.success({ content: t(\"success\"), key, duration: 2 });\n            }, 1000);\n            let result = await ubusApi.config_system_password(param)\n\n            const { code, status } = result\n\n            if (code === 1)\n                antdMessage.error(t(\"wrong_current_password\"))\n            else\n                antdMessage.success(t(\"change_password_ok\"))\n        }\n    }\n    return (\n        <Row>\n            <Col span={4}></Col>\n            <Col span={16}>\n                <Card title={t(\"change_password\")} type=\"inner\" headStyle={{background:\"linear-gradient(109.6deg, rgb(44, 83, 131), rgb(44, 83, 131) 18.9%, rgb(68, 124, 143), rgb(44, 83, 131) 91.1%, rgb(44, 83, 131))\",color: 'white'}}>\n                    <Form labelCol={{ span: 6 }}\n                        wrapperCol={{ span: 20 }} form={form} onFinish={onFinish}>\n                        <Form.Item name=\"current_password\" label={t(\"current_password\")} rules={[{ required: true, message: String(t(\"error_fill\")) }]}>\n                            <Space direction=\"horizontal\">\n                                <Input.Password\n                                    visibilityToggle={{ visible: passwordVisible, onVisibleChange: setPasswordVisible }}\n                                />\n                            </Space>\n                        </Form.Item>\n                        <Form.Item name=\"new_password\" label={t(\"new_password\")} rules={[{ required: true, message: String(t(\"error_fill\")) }]}>\n                            <Space direction=\"horizontal\">\n                                <Input.Password \n                                    visibilityToggle={{ visible: passwordVisible, onVisibleChange: setPasswordVisible }}\n                                />\n                            </Space>\n                        </Form.Item>\n                        <Form.Item name=\"confim_password\" label={t(\"confirm_new_password\")} rules={[{ required: true, message: String(t(\"error_fill\")) }]}>\n                            <Space direction=\"horizontal\">\n                                <Input.Password />\n                            </Space>\n                        </Form.Item>\n                        <Form.Item wrapperCol={{ offset: 6, span: 16 }}>\n                            <Button htmlType=\"submit\" type=\"primary\" >{t(\"submit\")}</Button>\n                        </Form.Item>\n                    </Form>\n                </Card>\n            </Col>\n        </Row>\n    )\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}