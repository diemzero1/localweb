{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport { each, get, isArray, isEmpty, isFunction, isNil, isNumber, isString, toString } from '@antv/util';\nimport { animation, annotation, legend, state, theme } from '../../adaptor/common';\nimport { interval } from '../../adaptor/geometries';\nimport { getMappingFunction } from '../../adaptor/geometries/base';\nimport { pattern } from '../../adaptor/pattern';\nimport { getLocale } from '../../core/locale';\nimport { deepAssign, flow, processIllegalData, renderStatistic, template, transformLabel } from '../../utils';\nimport { DEFAULT_OPTIONS } from './contants';\nimport { PIE_STATISTIC } from './interactions';\nimport { adaptOffset, getTotalValue, isAllZero } from './utils';\n/**\n * 字段\n * @param params\n */\nfunction geometry(params) {\n  var chart = params.chart,\n    options = params.options;\n  var data = options.data,\n    angleField = options.angleField,\n    colorField = options.colorField,\n    color = options.color,\n    pieStyle = options.pieStyle,\n    shape = options.shape;\n  // 处理不合法的数据\n  var processData = processIllegalData(data, angleField);\n  if (isAllZero(processData, angleField)) {\n    // 数据全 0 处理，调整 position 映射\n    var percentageField_1 = '$$percentage$$';\n    processData = processData.map(function (d) {\n      var _a;\n      return __assign(__assign({}, d), (_a = {}, _a[percentageField_1] = 1 / processData.length, _a));\n    });\n    chart.data(processData);\n    var p = deepAssign({}, params, {\n      options: {\n        xField: '1',\n        yField: percentageField_1,\n        seriesField: colorField,\n        isStack: true,\n        interval: {\n          color: color,\n          shape: shape,\n          style: pieStyle\n        },\n        args: {\n          zIndexReversed: true,\n          sortZIndex: true\n        }\n      }\n    });\n    interval(p);\n  } else {\n    chart.data(processData);\n    var p = deepAssign({}, params, {\n      options: {\n        xField: '1',\n        yField: angleField,\n        seriesField: colorField,\n        isStack: true,\n        interval: {\n          color: color,\n          shape: shape,\n          style: pieStyle\n        },\n        args: {\n          zIndexReversed: true,\n          sortZIndex: true\n        }\n      }\n    });\n    interval(p);\n  }\n  return params;\n}\n/**\n * meta 配置\n * @param params\n */\nfunction meta(params) {\n  var _a;\n  var chart = params.chart,\n    options = params.options;\n  var meta = options.meta,\n    colorField = options.colorField;\n  // meta 直接是 scale 的信息\n  var scales = deepAssign({}, meta);\n  chart.scale(scales, (_a = {}, _a[colorField] = {\n    type: 'cat'\n  }, _a));\n  return params;\n}\n/**\n * coord 配置\n * @param params\n */\nfunction coordinate(params) {\n  var chart = params.chart,\n    options = params.options;\n  var radius = options.radius,\n    innerRadius = options.innerRadius,\n    startAngle = options.startAngle,\n    endAngle = options.endAngle;\n  chart.coordinate({\n    type: 'theta',\n    cfg: {\n      radius: radius,\n      innerRadius: innerRadius,\n      startAngle: startAngle,\n      endAngle: endAngle\n    }\n  });\n  return params;\n}\n/**\n * label 配置\n * @param params\n */\nfunction label(params) {\n  var chart = params.chart,\n    options = params.options;\n  var label = options.label,\n    colorField = options.colorField,\n    angleField = options.angleField;\n  var geometry = chart.geometries[0];\n  // label 为 false, 空 则不显示 label\n  if (!label) {\n    geometry.label(false);\n  } else {\n    var callback = label.callback,\n      cfg = __rest(label, [\"callback\"]);\n    var labelCfg = transformLabel(cfg);\n    // ① 提供模板字符串的 label content 配置\n    if (labelCfg.content) {\n      var content_1 = labelCfg.content;\n      labelCfg.content = function (data, dataum, index) {\n        var name = data[colorField];\n        var value = data[angleField];\n        // dymatic get scale, scale is ready this time\n        var angleScale = chart.getScaleByField(angleField);\n        var percent = angleScale === null || angleScale === void 0 ? void 0 : angleScale.scale(value);\n        return isFunction(content_1) ?\n        // append percent (number) to data, users can get origin data from `dataum._origin`\n        content_1(__assign(__assign({}, data), {\n          percent: percent\n        }), dataum, index) : isString(content_1) ? template(content_1, {\n          value: value,\n          name: name,\n          // percentage (string), default keep 2\n          percentage: isNumber(percent) && !isNil(value) ? (percent * 100).toFixed(2) + \"%\" : null\n        }) : content_1;\n      };\n    }\n    var LABEL_LAYOUT_TYPE_MAP = {\n      inner: '',\n      outer: 'pie-outer',\n      spider: 'pie-spider'\n    };\n    var labelLayoutType = labelCfg.type ? LABEL_LAYOUT_TYPE_MAP[labelCfg.type] : 'pie-outer';\n    var labelLayoutCfg = labelCfg.layout ? !isArray(labelCfg.layout) ? [labelCfg.layout] : labelCfg.layout : [];\n    labelCfg.layout = (labelLayoutType ? [{\n      type: labelLayoutType\n    }] : []).concat(labelLayoutCfg);\n    geometry.label({\n      // fix: could not create scale, when field is undefined（attributes 中的 fields 定义都会被用来创建 scale）\n      fields: colorField ? [angleField, colorField] : [angleField],\n      callback: callback,\n      cfg: __assign(__assign({}, labelCfg), {\n        offset: adaptOffset(labelCfg.type, labelCfg.offset),\n        type: 'pie'\n      })\n    });\n  }\n  return params;\n}\n/**\n * statistic options 处理\n * 1. 默认继承 default options 的样式\n * 2. 默认使用 meta 的 formatter\n */\nexport function transformStatisticOptions(options) {\n  var innerRadius = options.innerRadius,\n    statistic = options.statistic,\n    angleField = options.angleField,\n    colorField = options.colorField,\n    meta = options.meta,\n    locale = options.locale;\n  var i18n = getLocale(locale);\n  if (innerRadius && statistic) {\n    var _a = deepAssign({}, DEFAULT_OPTIONS.statistic, statistic),\n      titleOpt_1 = _a.title,\n      contentOpt_1 = _a.content;\n    if (titleOpt_1 !== false) {\n      titleOpt_1 = deepAssign({}, {\n        formatter: function formatter(datum) {\n          // 交互中, datum existed.\n          var text = datum ? datum[colorField] : !isNil(titleOpt_1.content) ? titleOpt_1.content : i18n.get(['statistic', 'total']);\n          var metaFormatter = get(meta, [colorField, 'formatter']) || function (v) {\n            return v;\n          };\n          return metaFormatter(text);\n        }\n      }, titleOpt_1);\n    }\n    if (contentOpt_1 !== false) {\n      contentOpt_1 = deepAssign({}, {\n        formatter: function formatter(datum, data) {\n          var dataValue = datum ? datum[angleField] : getTotalValue(data, angleField);\n          var metaFormatter = get(meta, [angleField, 'formatter']) || function (v) {\n            return v;\n          };\n          // 交互中\n          if (datum) {\n            return metaFormatter(dataValue);\n          }\n          return !isNil(contentOpt_1.content) ? contentOpt_1.content : metaFormatter(dataValue);\n        }\n      }, contentOpt_1);\n    }\n    return deepAssign({}, {\n      statistic: {\n        title: titleOpt_1,\n        content: contentOpt_1\n      }\n    }, options);\n  }\n  return options;\n}\n/**\n * statistic 中心文本配置\n * @param params\n */\nexport function pieAnnotation(params) {\n  var chart = params.chart,\n    options = params.options;\n  var _a = transformStatisticOptions(options),\n    innerRadius = _a.innerRadius,\n    statistic = _a.statistic;\n  // 先清空标注，再重新渲染\n  chart.getController('annotation').clear(true);\n  // 先进行其他 annotations，再去渲染统计文本\n  flow(annotation())(params);\n  /** 中心文本 指标卡 */\n  if (innerRadius && statistic) {\n    renderStatistic(chart, {\n      statistic: statistic,\n      plotType: 'pie'\n    });\n  }\n  return params;\n}\n/**\n * 饼图 tooltip 配置\n * 1. 强制 tooltip.shared 为 false\n * @param params\n */\nfunction tooltip(params) {\n  var chart = params.chart,\n    options = params.options;\n  var tooltip = options.tooltip,\n    colorField = options.colorField,\n    angleField = options.angleField,\n    data = options.data;\n  if (tooltip === false) {\n    chart.tooltip(tooltip);\n  } else {\n    chart.tooltip(deepAssign({}, tooltip, {\n      shared: false\n    }));\n    // 主要解决 all zero， 对于非 all zero 不再适用\n    if (isAllZero(data, angleField)) {\n      var fields = get(tooltip, 'fields');\n      var formatter = get(tooltip, 'formatter');\n      if (isEmpty(get(tooltip, 'fields'))) {\n        fields = [colorField, angleField];\n        formatter = formatter || function (datum) {\n          return {\n            name: datum[colorField],\n            value: toString(datum[angleField])\n          };\n        };\n      }\n      chart.geometries[0].tooltip(fields.join('*'), getMappingFunction(fields, formatter));\n    }\n  }\n  return params;\n}\n/**\n * Interaction 配置 (饼图特殊的 interaction, 中心文本变更的时候，需要将一些配置参数传进去）\n * @param params\n */\nexport function interaction(params) {\n  var chart = params.chart,\n    options = params.options;\n  var _a = transformStatisticOptions(options),\n    interactions = _a.interactions,\n    statistic = _a.statistic,\n    annotations = _a.annotations;\n  each(interactions, function (i) {\n    var _a, _b;\n    if (i.enable === false) {\n      chart.removeInteraction(i.type);\n    } else if (i.type === 'pie-statistic-active') {\n      // 只针对 start 阶段的配置，进行添加参数信息\n      var startStages_1 = [];\n      if (!((_a = i.cfg) === null || _a === void 0 ? void 0 : _a.start)) {\n        startStages_1 = [{\n          trigger: 'element:mouseenter',\n          action: PIE_STATISTIC + \":change\",\n          arg: {\n            statistic: statistic,\n            annotations: annotations\n          }\n        }];\n      }\n      each((_b = i.cfg) === null || _b === void 0 ? void 0 : _b.start, function (stage) {\n        startStages_1.push(__assign(__assign({}, stage), {\n          arg: {\n            statistic: statistic,\n            annotations: annotations\n          }\n        }));\n      });\n      chart.interaction(i.type, deepAssign({}, i.cfg, {\n        start: startStages_1\n      }));\n    } else {\n      chart.interaction(i.type, i.cfg || {});\n    }\n  });\n  return params;\n}\n/**\n * 饼图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(pattern('pieStyle'), geometry, meta, theme, coordinate, legend, tooltip, label, state, /** 指标卡中心文本 放在下层 */\n  pieAnnotation, interaction, animation)(params);\n}","map":{"version":3,"mappings":"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","names":["each","get","isArray","isEmpty","isFunction","isNil","isNumber","isString","toString","animation","annotation","legend","state","theme","interval","getMappingFunction","pattern","getLocale","deepAssign","flow","processIllegalData","renderStatistic","template","transformLabel","DEFAULT_OPTIONS","PIE_STATISTIC","adaptOffset","getTotalValue","isAllZero","geometry","params","options","angleField","colorField","color","pieStyle","shape","processData","data","percentageField_1","map","d","length","chart","p","xField","yField","seriesField","isStack","style","args","zIndexReversed","sortZIndex","meta","scales","scale","_a","type","coordinate","innerRadius","startAngle","endAngle","cfg","radius","label","geometries","labelCfg","content","dataum","index","name","value","angleScale","getScaleByField","percent","content_1","percentage","toFixed","LABEL_LAYOUT_TYPE_MAP","inner","outer","spider","labelLayoutType","labelLayoutCfg","layout","concat","fields","callback","offset","transformStatisticOptions","statistic","locale","i18n","titleOpt_1","contentOpt_1","formatter","datum","text","metaFormatter","v","dataValue","title","pieAnnotation","getController","clear","plotType","tooltip","shared","join","interaction","interactions","annotations","i","enable","removeInteraction","startStages_1","start","trigger","action","arg","stage","push","adaptor"],"sources":["/home/iam/Documents/network/node_modules/@antv/g2plot/src/plots/pie/adaptor.ts"],"sourcesContent":["import { each, get, isArray, isEmpty, isFunction, isNil, isNumber, isString, toString } from '@antv/util';\nimport { animation, annotation, legend, state, theme } from '../../adaptor/common';\nimport { interval } from '../../adaptor/geometries';\nimport { getMappingFunction } from '../../adaptor/geometries/base';\nimport { pattern } from '../../adaptor/pattern';\nimport { Params } from '../../core/adaptor';\nimport { getLocale } from '../../core/locale';\nimport { Data, Datum } from '../../types';\nimport { Interaction } from '../../types/interaction';\nimport { deepAssign, flow, processIllegalData, renderStatistic, template, transformLabel } from '../../utils';\nimport { DEFAULT_OPTIONS } from './contants';\nimport { PIE_STATISTIC } from './interactions';\nimport { PieOptions } from './types';\nimport { adaptOffset, getTotalValue, isAllZero } from './utils';\n\n/**\n * 字段\n * @param params\n */\nfunction geometry(params: Params<PieOptions>): Params<PieOptions> {\n  const { chart, options } = params;\n  const { data, angleField, colorField, color, pieStyle, shape } = options;\n\n  // 处理不合法的数据\n  let processData = processIllegalData(data, angleField);\n\n  if (isAllZero(processData, angleField)) {\n    // 数据全 0 处理，调整 position 映射\n    const percentageField = '$$percentage$$';\n    processData = processData.map((d) => ({ ...d, [percentageField]: 1 / processData.length }));\n    chart.data(processData);\n\n    const p = deepAssign({}, params, {\n      options: {\n        xField: '1',\n        yField: percentageField,\n        seriesField: colorField,\n        isStack: true,\n        interval: {\n          color,\n          shape,\n          style: pieStyle,\n        },\n        args: {\n          zIndexReversed: true,\n          sortZIndex: true,\n        },\n      },\n    });\n\n    interval(p);\n  } else {\n    chart.data(processData);\n\n    const p = deepAssign({}, params, {\n      options: {\n        xField: '1',\n        yField: angleField,\n        seriesField: colorField,\n        isStack: true,\n        interval: {\n          color,\n          shape,\n          style: pieStyle,\n        },\n        args: {\n          zIndexReversed: true,\n          sortZIndex: true,\n        },\n      },\n    });\n\n    interval(p);\n  }\n\n  return params;\n}\n\n/**\n * meta 配置\n * @param params\n */\nfunction meta(params: Params<PieOptions>): Params<PieOptions> {\n  const { chart, options } = params;\n  const { meta, colorField } = options;\n\n  // meta 直接是 scale 的信息\n  const scales = deepAssign({}, meta);\n  chart.scale(scales, {\n    [colorField]: { type: 'cat' },\n  });\n\n  return params;\n}\n\n/**\n * coord 配置\n * @param params\n */\nfunction coordinate(params: Params<PieOptions>): Params<PieOptions> {\n  const { chart, options } = params;\n  const { radius, innerRadius, startAngle, endAngle } = options;\n\n  chart.coordinate({\n    type: 'theta',\n    cfg: {\n      radius,\n      innerRadius,\n      startAngle,\n      endAngle,\n    },\n  });\n\n  return params;\n}\n\n/**\n * label 配置\n * @param params\n */\nfunction label(params: Params<PieOptions>): Params<PieOptions> {\n  const { chart, options } = params;\n  const { label, colorField, angleField } = options;\n\n  const geometry = chart.geometries[0];\n  // label 为 false, 空 则不显示 label\n  if (!label) {\n    geometry.label(false);\n  } else {\n    const { callback, ...cfg } = label;\n    const labelCfg = transformLabel(cfg);\n\n    // ① 提供模板字符串的 label content 配置\n    if (labelCfg.content) {\n      const { content } = labelCfg;\n      labelCfg.content = (data: object, dataum: any, index: number) => {\n        const name = data[colorField];\n        const value = data[angleField];\n        // dymatic get scale, scale is ready this time\n        const angleScale = chart.getScaleByField(angleField);\n        const percent = angleScale?.scale(value);\n        return isFunction(content)\n          ? // append percent (number) to data, users can get origin data from `dataum._origin`\n            content({ ...data, percent }, dataum, index)\n          : isString(content)\n          ? template(content as string, {\n              value,\n              name,\n              // percentage (string), default keep 2\n              percentage: isNumber(percent) && !isNil(value) ? `${(percent * 100).toFixed(2)}%` : null,\n            })\n          : content;\n      };\n    }\n\n    const LABEL_LAYOUT_TYPE_MAP = {\n      inner: '',\n      outer: 'pie-outer',\n      spider: 'pie-spider',\n    };\n    const labelLayoutType = labelCfg.type ? LABEL_LAYOUT_TYPE_MAP[labelCfg.type] : 'pie-outer';\n    const labelLayoutCfg = labelCfg.layout ? (!isArray(labelCfg.layout) ? [labelCfg.layout] : labelCfg.layout) : [];\n    labelCfg.layout = (labelLayoutType ? [{ type: labelLayoutType }] : []).concat(labelLayoutCfg);\n\n    geometry.label({\n      // fix: could not create scale, when field is undefined（attributes 中的 fields 定义都会被用来创建 scale）\n      fields: colorField ? [angleField, colorField] : [angleField],\n      callback,\n      cfg: {\n        ...labelCfg,\n        offset: adaptOffset(labelCfg.type, labelCfg.offset),\n        type: 'pie',\n      },\n    });\n  }\n  return params;\n}\n\n/**\n * statistic options 处理\n * 1. 默认继承 default options 的样式\n * 2. 默认使用 meta 的 formatter\n */\nexport function transformStatisticOptions(options: PieOptions): PieOptions {\n  const { innerRadius, statistic, angleField, colorField, meta, locale } = options;\n\n  const i18n = getLocale(locale);\n\n  if (innerRadius && statistic) {\n    let { title: titleOpt, content: contentOpt } = deepAssign({}, DEFAULT_OPTIONS.statistic, statistic);\n    if (titleOpt !== false) {\n      titleOpt = deepAssign(\n        {},\n        {\n          formatter: (datum: Datum) => {\n            // 交互中, datum existed.\n            const text = datum\n              ? datum[colorField]\n              : !isNil(titleOpt.content)\n              ? titleOpt.content\n              : i18n.get(['statistic', 'total']);\n            const metaFormatter = get(meta, [colorField, 'formatter']) || ((v) => v);\n            return metaFormatter(text);\n          },\n        },\n        titleOpt\n      );\n    }\n    if (contentOpt !== false) {\n      contentOpt = deepAssign(\n        {},\n        {\n          formatter: (datum: Datum, data: Data) => {\n            const dataValue = datum ? datum[angleField] : getTotalValue(data, angleField);\n            const metaFormatter = get(meta, [angleField, 'formatter']) || ((v) => v);\n            // 交互中\n            if (datum) {\n              return metaFormatter(dataValue);\n            }\n            return !isNil(contentOpt.content) ? contentOpt.content : metaFormatter(dataValue);\n          },\n        },\n        contentOpt\n      );\n    }\n\n    return deepAssign({}, { statistic: { title: titleOpt, content: contentOpt } }, options);\n  }\n  return options;\n}\n\n/**\n * statistic 中心文本配置\n * @param params\n */\nexport function pieAnnotation(params: Params<PieOptions>): Params<PieOptions> {\n  const { chart, options } = params;\n  const { innerRadius, statistic } = transformStatisticOptions(options);\n  // 先清空标注，再重新渲染\n  chart.getController('annotation').clear(true);\n\n  // 先进行其他 annotations，再去渲染统计文本\n  flow(annotation())(params);\n\n  /** 中心文本 指标卡 */\n  if (innerRadius && statistic) {\n    renderStatistic(chart, { statistic, plotType: 'pie' });\n  }\n\n  return params;\n}\n\n/**\n * 饼图 tooltip 配置\n * 1. 强制 tooltip.shared 为 false\n * @param params\n */\nfunction tooltip(params: Params<PieOptions>): Params<PieOptions> {\n  const { chart, options } = params;\n  const { tooltip, colorField, angleField, data } = options;\n\n  if (tooltip === false) {\n    chart.tooltip(tooltip);\n  } else {\n    chart.tooltip(deepAssign({}, tooltip, { shared: false }));\n\n    // 主要解决 all zero， 对于非 all zero 不再适用\n    if (isAllZero(data, angleField)) {\n      let fields = get(tooltip, 'fields');\n      let formatter = get(tooltip, 'formatter');\n\n      if (isEmpty(get(tooltip, 'fields'))) {\n        fields = [colorField, angleField];\n        formatter = formatter || ((datum) => ({ name: datum[colorField], value: toString(datum[angleField]) }));\n      }\n      chart.geometries[0].tooltip(fields.join('*'), getMappingFunction(fields, formatter));\n    }\n  }\n\n  return params;\n}\n\n/**\n * Interaction 配置 (饼图特殊的 interaction, 中心文本变更的时候，需要将一些配置参数传进去）\n * @param params\n */\nexport function interaction(params: Params<PieOptions>): Params<PieOptions> {\n  const { chart, options } = params;\n  const { interactions, statistic, annotations } = transformStatisticOptions(options);\n\n  each(interactions, (i: Interaction) => {\n    if (i.enable === false) {\n      chart.removeInteraction(i.type);\n    } else if (i.type === 'pie-statistic-active') {\n      // 只针对 start 阶段的配置，进行添加参数信息\n      let startStages = [];\n      if (!i.cfg?.start) {\n        startStages = [\n          {\n            trigger: 'element:mouseenter',\n            action: `${PIE_STATISTIC}:change`,\n            arg: { statistic, annotations },\n          },\n        ];\n      }\n      each(i.cfg?.start, (stage) => {\n        startStages.push({ ...stage, arg: { statistic, annotations } });\n      });\n      chart.interaction(i.type, deepAssign({}, i.cfg, { start: startStages }));\n    } else {\n      chart.interaction(i.type, i.cfg || {});\n    }\n  });\n\n  return params;\n}\n\n/**\n * 饼图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<PieOptions>) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow<Params<PieOptions>>(\n    pattern('pieStyle'),\n    geometry,\n    meta,\n    theme,\n    coordinate,\n    legend,\n    tooltip,\n    label,\n    state,\n    /** 指标卡中心文本 放在下层 */\n    pieAnnotation,\n    interaction,\n    animation\n  )(params);\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}