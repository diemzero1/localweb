{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { TOOLTIP_CSS_CONST } from '@antv/component';\nimport { deepMix } from '@antv/util';\nimport { HtmlTooltip } from '../../../../dependents';\nimport Action from '../../base';\nimport { getDelegationObject } from '../../util';\nvar AXIS_DESCRIPTION_TOOLTIP = 'aixs-description-tooltip';\nvar AxisDescription = /** @class */function (_super) {\n  __extends(AxisDescription, _super);\n  function AxisDescription() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  AxisDescription.prototype.show = function () {\n    var context = this.context;\n    var axis = getDelegationObject(context).axis;\n    var _a = axis.cfg.title,\n      description = _a.description,\n      text = _a.text,\n      descriptionTooltipStyle = _a.descriptionTooltipStyle;\n    var _b = context.event,\n      x = _b.x,\n      y = _b.y;\n    if (!this.tooltip) {\n      this.renderTooltip();\n    }\n    this.tooltip.update({\n      title: text || '',\n      customContent: function customContent() {\n        return \"\\n          <div class=\\\"\".concat(TOOLTIP_CSS_CONST.CONTAINER_CLASS, \"\\\" style={\").concat(descriptionTooltipStyle, \"}>\\n            <div class=\\\"\").concat(TOOLTIP_CSS_CONST.TITLE_CLASS, \"\\\">\\n              \\u5B57\\u6BB5\\u8BF4\\u660E\\uFF1A\").concat(description, \"\\n            </div>\\n          </div>\\n        \");\n      },\n      x: x,\n      y: y\n    });\n    this.tooltip.show();\n  };\n  AxisDescription.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n    this.tooltip && this.tooltip.destroy();\n  };\n  AxisDescription.prototype.hide = function () {\n    this.tooltip && this.tooltip.hide();\n  };\n  AxisDescription.prototype.renderTooltip = function () {\n    var _a;\n    var view = this.context.view;\n    var canvas = view.canvas;\n    var region = {\n      start: {\n        x: 0,\n        y: 0\n      },\n      end: {\n        x: canvas.get('width'),\n        y: canvas.get('height')\n      }\n    };\n    var tooltip = new HtmlTooltip({\n      parent: canvas.get('el').parentNode,\n      region: region,\n      visible: false,\n      containerId: AXIS_DESCRIPTION_TOOLTIP,\n      domStyles: __assign({}, deepMix({}, (_a = {},\n      // 超长的时候，tooltip tip 最大宽度为 50%，然后可以换行\n      _a[TOOLTIP_CSS_CONST.CONTAINER_CLASS] = {\n        'max-width': '50%',\n        padding: '10px',\n        'line-height': '15px',\n        'font-size': '12px',\n        color: 'rgba(0, 0, 0, .65)'\n      }, _a[TOOLTIP_CSS_CONST.TITLE_CLASS] = {\n        'word-break': 'break-all',\n        'margin-bottom': '3px'\n      }, _a)))\n    });\n    tooltip.init();\n    tooltip.setCapture(false);\n    this.tooltip = tooltip;\n  };\n  return AxisDescription;\n}(Action);\nexport default AxisDescription;","map":{"version":3,"mappings":";AAAA,SAASA,iBAAiB,QAAQ,iBAAiB;AACnD,SAASC,OAAO,QAAQ,YAAY;AACpC,SAASC,WAAW,QAAQ,wBAAwB;AACpD,OAAOC,MAAM,MAAM,YAAY;AAC/B,SAASC,mBAAmB,QAAQ,YAAY;AAGhD,IAAMC,wBAAwB,GAAG,0BAA0B;AAE3D;EAA8BC;EAA9B;;EAyEA;EAtESC,8BAAI,GAAX;IACE,IAAMC,OAAO,GAAG,IAAI,CAACA,OAAO;IACpB,QAAI,GAAKJ,mBAAmB,CAACI,OAAO,CAAC,KAAjC;IACN,SAAiDC,IAAI,CAACC,GAAG,CAACC,KAAK;MAA7DC,WAAW;MAAEC,IAAI;MAAEC,uBAAuB,6BAAmB;IAC/D,SAAWN,OAAO,CAACO,KAAK;MAAtBC,CAAC;MAAEC,CAAC,OAAkB;IAC9B,IAAI,CAAC,IAAI,CAACC,OAAO,EAAE;MACjB,IAAI,CAACC,aAAa,EAAE;;IAEtB,IAAI,CAACD,OAAO,CAACE,MAAM,CAAC;MAClBT,KAAK,EAAEE,IAAI,IAAI,EAAE;MACjBQ,aAAa,EAAE;QACb,OAAO,mCACSrB,iBAAiB,CAACsB,eAAe,uBAAYR,uBAAuB,0CAClEd,iBAAiB,CAACuB,WAAW,8DAClCX,WAAW,qDAGvB;MACH,CAAC;MACDI,CAAC;MACDC,CAAC;KACF,CAAC;IACF,IAAI,CAACC,OAAO,CAACM,IAAI,EAAE;EACrB,CAAC;EAEMjB,iCAAO,GAAd;IACEkB,iBAAMC,OAAO,WAAE;IACf,IAAI,CAACR,OAAO,IAAI,IAAI,CAACA,OAAO,CAACQ,OAAO,EAAE;EACxC,CAAC;EAEMnB,8BAAI,GAAX;IACE,IAAI,CAACW,OAAO,IAAI,IAAI,CAACA,OAAO,CAACS,IAAI,EAAE;EACrC,CAAC;EAEMpB,uCAAa,GAApB;;IACE,IAAMqB,IAAI,GAAG,IAAI,CAACpB,OAAO,CAACoB,IAAI;IAC9B,IAAMC,MAAM,GAAGD,IAAI,CAACC,MAAM;IAC1B,IAAMC,MAAM,GAAG;MACbC,KAAK,EAAE;QAAEf,CAAC,EAAE,CAAC;QAAEC,CAAC,EAAE;MAAC,CAAE;MACrBe,GAAG,EAAE;QAAEhB,CAAC,EAAEa,MAAM,CAACI,GAAG,CAAC,OAAO,CAAC;QAAEhB,CAAC,EAAEY,MAAM,CAACI,GAAG,CAAC,QAAQ;MAAC;KACvD;IACD,IAAMf,OAAO,GAAG,IAAIhB,WAAW,CAAC;MAC9BgC,MAAM,EAAEL,MAAM,CAACI,GAAG,CAAC,IAAI,CAAC,CAACE,UAAU;MACnCL,MAAM;MACNM,OAAO,EAAE,KAAK;MACdC,WAAW,EAAEhC,wBAAwB;MACrCiC,SAAS,eACJrC,OAAO,CACR,EAAE;MAEA;MACAsC,GAACvC,iBAAiB,CAACsB,eAAe,IAAG;QACnC,WAAW,EAAE,KAAK;QAClBkB,OAAO,EAAE,MAAM;QACf,aAAa,EAAE,MAAM;QACrB,WAAW,EAAE,MAAM;QACnBC,KAAK,EAAE;OACR,EACDF,GAACvC,iBAAiB,CAACuB,WAAW,IAAG;QAC/B,YAAY,EAAE,WAAW;QACzB,eAAe,EAAE;OAClB,MAEJ;KAEJ,CAAC;IACFL,OAAO,CAACwB,IAAI,EAAE;IACdxB,OAAO,CAACyB,UAAU,CAAC,KAAK,CAAC;IACzB,IAAI,CAACzB,OAAO,GAAGA,OAAO;EACxB,CAAC;EACH,sBAAC;AAAD,CAAC,CAzE6Bf,MAAM;AA0EpC,eAAeI,eAAe","names":["TOOLTIP_CSS_CONST","deepMix","HtmlTooltip","Action","getDelegationObject","AXIS_DESCRIPTION_TOOLTIP","__extends","AxisDescription","context","axis","cfg","title","description","text","descriptionTooltipStyle","event","x","y","tooltip","renderTooltip","update","customContent","CONTAINER_CLASS","TITLE_CLASS","show","_super","destroy","hide","view","canvas","region","start","end","get","parent","parentNode","visible","containerId","domStyles","_a","padding","color","init","setCapture"],"sources":["/home/iam/Documents/network/node_modules/@antv/g2/src/interaction/action/component/axis/axis-description.ts"],"sourcesContent":["import { TOOLTIP_CSS_CONST } from '@antv/component';\nimport { deepMix } from '@antv/util';\nimport { HtmlTooltip } from '../../../../dependents';\nimport Action from '../../base';\nimport { getDelegationObject } from '../../util';\nimport cx from 'classnames';\n\nconst AXIS_DESCRIPTION_TOOLTIP = 'aixs-description-tooltip';\n\nclass AxisDescription extends Action {\n  private tooltip;\n\n  public show() {\n    const context = this.context;\n    const { axis } = getDelegationObject(context);\n    const { description, text, descriptionTooltipStyle } = axis.cfg.title;\n    const { x, y } = context.event;\n    if (!this.tooltip) {\n      this.renderTooltip();\n    }\n    this.tooltip.update({\n      title: text || '',\n      customContent: () => {\n        return `\n          <div class=\"${TOOLTIP_CSS_CONST.CONTAINER_CLASS}\" style={${descriptionTooltipStyle}}>\n            <div class=\"${TOOLTIP_CSS_CONST.TITLE_CLASS}\">\n              字段说明：${description}\n            </div>\n          </div>\n        `;\n      },\n      x,\n      y,\n    });\n    this.tooltip.show();\n  }\n\n  public destroy() {\n    super.destroy();\n    this.tooltip && this.tooltip.destroy();\n  }\n\n  public hide() {\n    this.tooltip && this.tooltip.hide();\n  }\n\n  public renderTooltip() {\n    const view = this.context.view;\n    const canvas = view.canvas;\n    const region = {\n      start: { x: 0, y: 0 },\n      end: { x: canvas.get('width'), y: canvas.get('height') },\n    };\n    const tooltip = new HtmlTooltip({\n      parent: canvas.get('el').parentNode,\n      region,\n      visible: false,\n      containerId: AXIS_DESCRIPTION_TOOLTIP,\n      domStyles: {\n        ...deepMix(\n          {},\n          {\n            // 超长的时候，tooltip tip 最大宽度为 50%，然后可以换行\n            [TOOLTIP_CSS_CONST.CONTAINER_CLASS]: {\n              'max-width': '50%',\n              padding: '10px',\n              'line-height': '15px',\n              'font-size': '12px',\n              color: 'rgba(0, 0, 0, .65)',\n            },\n            [TOOLTIP_CSS_CONST.TITLE_CLASS]: {\n              'word-break': 'break-all',\n              'margin-bottom': '3px',\n            },\n          }\n        ),\n      },\n    });\n    tooltip.init();\n    tooltip.setCapture(false);\n    this.tooltip = tooltip;\n  }\n}\nexport default AxisDescription;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}