{"ast":null,"code":"import { __assign, __extends, __rest } from \"tslib\";\nimport { get } from '@antv/util';\nimport GroupComponent from '../abstract/group-component';\nimport { renderTag } from '../util/graphic';\nimport { applyTranslate } from '../util/matrix';\nimport Theme from '../util/theme';\nvar DataMarkerAnnotation = /** @class */function (_super) {\n  __extends(DataMarkerAnnotation, _super);\n  function DataMarkerAnnotation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * 默认的配置项\n   * @returns {object} 默认的配置项\n   */\n  DataMarkerAnnotation.prototype.getDefaultCfg = function () {\n    var cfg = _super.prototype.getDefaultCfg.call(this);\n    return __assign(__assign({}, cfg), {\n      name: 'annotation',\n      type: 'dataMarker',\n      locationType: 'point',\n      x: 0,\n      y: 0,\n      point: {},\n      line: {},\n      text: {},\n      direction: 'upward',\n      autoAdjust: true,\n      coordinateBBox: null,\n      defaultCfg: {\n        point: {\n          display: true,\n          style: {\n            r: 3,\n            fill: '#FFFFFF',\n            stroke: '#1890FF',\n            lineWidth: 2\n          }\n        },\n        line: {\n          display: true,\n          length: 20,\n          style: {\n            stroke: Theme.lineColor,\n            lineWidth: 1\n          }\n        },\n        text: {\n          content: '',\n          display: true,\n          style: {\n            fill: Theme.textColor,\n            opacity: 0.65,\n            fontSize: 12,\n            textAlign: 'start',\n            fontFamily: Theme.fontFamily\n          }\n        }\n      }\n    });\n  };\n  DataMarkerAnnotation.prototype.renderInner = function (group) {\n    if (get(this.get('line'), 'display')) {\n      this.renderLine(group);\n    }\n    if (get(this.get('text'), 'display')) {\n      this.renderText(group);\n    }\n    if (get(this.get('point'), 'display')) {\n      this.renderPoint(group);\n    }\n    if (this.get('autoAdjust')) {\n      this.autoAdjust(group);\n    }\n  };\n  DataMarkerAnnotation.prototype.applyOffset = function () {\n    this.moveElementTo(this.get('group'), {\n      x: this.get('x') + this.get('offsetX'),\n      y: this.get('y') + this.get('offsetY')\n    });\n  };\n  DataMarkerAnnotation.prototype.renderPoint = function (group) {\n    var point = this.getShapeAttrs().point;\n    this.addShape(group, {\n      type: 'circle',\n      id: this.getElementId('point'),\n      name: 'annotation-point',\n      attrs: point\n    });\n  };\n  DataMarkerAnnotation.prototype.renderLine = function (group) {\n    var line = this.getShapeAttrs().line;\n    this.addShape(group, {\n      type: 'path',\n      id: this.getElementId('line'),\n      name: 'annotation-line',\n      attrs: line\n    });\n  };\n  DataMarkerAnnotation.prototype.renderText = function (group) {\n    var textAttrs = this.getShapeAttrs().text;\n    var x = textAttrs.x,\n      y = textAttrs.y,\n      text = textAttrs.text,\n      style = __rest(textAttrs, [\"x\", \"y\", \"text\"]);\n    var _a = this.get('text'),\n      background = _a.background,\n      maxLength = _a.maxLength,\n      autoEllipsis = _a.autoEllipsis,\n      isVertival = _a.isVertival,\n      ellipsisPosition = _a.ellipsisPosition;\n    var tagCfg = {\n      x: x,\n      y: y,\n      id: this.getElementId('text'),\n      name: 'annotation-text',\n      content: text,\n      style: style,\n      background: background,\n      maxLength: maxLength,\n      autoEllipsis: autoEllipsis,\n      isVertival: isVertival,\n      ellipsisPosition: ellipsisPosition\n    };\n    renderTag(group, tagCfg);\n  };\n  DataMarkerAnnotation.prototype.autoAdjust = function (group) {\n    var direction = this.get('direction');\n    var x = this.get('x');\n    var y = this.get('y');\n    var lineLength = get(this.get('line'), 'length', 0);\n    var coordinateBBox = this.get('coordinateBBox');\n    var _a = group.getBBox(),\n      minX = _a.minX,\n      maxX = _a.maxX,\n      minY = _a.minY,\n      maxY = _a.maxY;\n    var textGroup = group.findById(this.getElementId('text-group'));\n    var textShape = group.findById(this.getElementId('text'));\n    var lineShape = group.findById(this.getElementId('line'));\n    if (!coordinateBBox) {\n      return;\n    }\n    if (textGroup) {\n      if (x + minX <= coordinateBBox.minX) {\n        // 左侧超出\n        var overflow = coordinateBBox.minX - (x + minX);\n        applyTranslate(textGroup, textGroup.attr('x') + overflow, textGroup.attr('y'));\n      }\n      if (x + maxX >= coordinateBBox.maxX) {\n        // 右侧超出\n        var overflow = x + maxX - coordinateBBox.maxX;\n        applyTranslate(textGroup, textGroup.attr('x') - overflow, textGroup.attr('y'));\n      }\n    }\n    if (direction === 'upward' && y + minY <= coordinateBBox.minY || direction !== 'upward' && y + maxY >= coordinateBBox.maxY) {\n      // 上方或者下方超出\n      var textBaseline = void 0;\n      var factor = void 0;\n      if (direction === 'upward' && y + minY <= coordinateBBox.minY) {\n        textBaseline = 'top';\n        factor = 1;\n      } else {\n        textBaseline = 'bottom';\n        factor = -1;\n      }\n      textShape.attr('textBaseline', textBaseline);\n      if (lineShape) {\n        lineShape.attr('path', [['M', 0, 0], ['L', 0, lineLength * factor]]);\n      }\n      applyTranslate(textGroup, textGroup.attr('x'), (lineLength + 2) * factor);\n    }\n  };\n  DataMarkerAnnotation.prototype.getShapeAttrs = function () {\n    var lineDisplay = get(this.get('line'), 'display');\n    var pointStyle = get(this.get('point'), 'style', {});\n    var lineStyle = get(this.get('line'), 'style', {});\n    var textStyle = get(this.get('text'), 'style', {});\n    var direction = this.get('direction');\n    var lineLength = lineDisplay ? get(this.get('line'), 'length', 0) : 0;\n    var factor = direction === 'upward' ? -1 : 1;\n    return {\n      point: __assign({\n        x: 0,\n        y: 0\n      }, pointStyle),\n      line: __assign({\n        path: [['M', 0, 0], ['L', 0, lineLength * factor]]\n      }, lineStyle),\n      text: __assign({\n        x: 0,\n        y: (lineLength + 2) * factor,\n        text: get(this.get('text'), 'content', ''),\n        textBaseline: direction === 'upward' ? 'bottom' : 'top'\n      }, textStyle)\n    };\n  };\n  return DataMarkerAnnotation;\n}(GroupComponent);\nexport default DataMarkerAnnotation;","map":{"version":3,"mappings":"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","names":["get","GroupComponent","renderTag","applyTranslate","Theme","__extends","DataMarkerAnnotation","cfg","_super","getDefaultCfg","name","type","locationType","x","y","point","line","text","direction","autoAdjust","coordinateBBox","defaultCfg","display","style","r","fill","stroke","lineWidth","length","lineColor","content","textColor","opacity","fontSize","textAlign","fontFamily","group","renderLine","renderText","renderPoint","moveElementTo","getShapeAttrs","addShape","id","getElementId","attrs","textAttrs","background","maxLength","autoEllipsis","isVertival","ellipsisPosition","tagCfg","lineLength","getBBox","minX","maxX","minY","maxY","textGroup","findById","textShape","lineShape","overflow","attr","textBaseline","factor","lineDisplay","pointStyle","lineStyle","textStyle","path"],"sources":["/home/iam/Documents/LocalWeb-master/node_modules/@antv/component/src/annotation/data-marker.ts"],"sourcesContent":["import { IGroup } from '@antv/g-base';\nimport { get } from '@antv/util';\nimport GroupComponent from '../abstract/group-component';\nimport { ILocation } from '../interfaces';\nimport { DataMarkerAnnotationCfg, PointLocationCfg } from '../types';\nimport { renderTag } from '../util/graphic';\nimport { applyTranslate } from '../util/matrix';\nimport Theme from '../util/theme';\n\nclass DataMarkerAnnotation extends GroupComponent<DataMarkerAnnotationCfg> implements ILocation<PointLocationCfg> {\n  /**\n   * 默认的配置项\n   * @returns {object} 默认的配置项\n   */\n  public getDefaultCfg() {\n    const cfg = super.getDefaultCfg();\n    return {\n      ...cfg,\n      name: 'annotation',\n      type: 'dataMarker',\n      locationType: 'point',\n      x: 0,\n      y: 0,\n      point: {},\n      line: {},\n      text: {},\n      direction: 'upward',\n      autoAdjust: true,\n      coordinateBBox: null,\n      defaultCfg: {\n        point: {\n          display: true,\n          style: {\n            r: 3,\n            fill: '#FFFFFF',\n            stroke: '#1890FF',\n            lineWidth: 2,\n          },\n        },\n        line: {\n          display: true,\n          length: 20,\n          style: {\n            stroke: Theme.lineColor,\n            lineWidth: 1,\n          },\n        },\n        text: {\n          content: '',\n          display: true,\n          style: {\n            fill: Theme.textColor,\n            opacity: 0.65,\n            fontSize: 12,\n            textAlign: 'start',\n            fontFamily: Theme.fontFamily,\n          },\n        },\n      },\n    };\n  }\n\n  protected renderInner(group: IGroup) {\n    if (get(this.get('line'), 'display')) {\n      this.renderLine(group);\n    }\n    if (get(this.get('text'), 'display')) {\n      this.renderText(group);\n    }\n    if (get(this.get('point'), 'display')) {\n      this.renderPoint(group);\n    }\n\n    if (this.get('autoAdjust')) {\n      this.autoAdjust(group);\n    }\n  }\n\n  protected applyOffset() {\n    this.moveElementTo(this.get('group'), {\n      x: this.get('x') + this.get('offsetX'),\n      y: this.get('y') + this.get('offsetY'),\n    });\n  }\n\n  private renderPoint(group: IGroup) {\n    const { point } = this.getShapeAttrs();\n\n    this.addShape(group, {\n      type: 'circle',\n      id: this.getElementId('point'),\n      name: 'annotation-point',\n      attrs: point,\n    });\n  }\n\n  private renderLine(group: IGroup) {\n    const { line } = this.getShapeAttrs();\n\n    this.addShape(group, {\n      type: 'path',\n      id: this.getElementId('line'),\n      name: 'annotation-line',\n      attrs: line,\n    });\n  }\n\n  private renderText(group: IGroup) {\n    const { text: textAttrs } = this.getShapeAttrs();\n\n    const { x, y, text, ...style } = textAttrs;\n    const { background, maxLength, autoEllipsis, isVertival, ellipsisPosition } = this.get('text');\n    const tagCfg = {\n      x,\n      y,\n      id: this.getElementId('text'),\n      name: 'annotation-text',\n      content: text,\n      style,\n      background,\n      maxLength,\n      autoEllipsis,\n      isVertival,\n      ellipsisPosition,\n    };\n\n    renderTag(group, tagCfg);\n  }\n\n  private autoAdjust(group: IGroup) {\n    const direction: string = this.get('direction');\n    const x: number = this.get('x');\n    const y: number = this.get('y');\n    const lineLength: number = get(this.get('line'), 'length', 0);\n    const coordinateBBox = this.get('coordinateBBox');\n    const { minX, maxX, minY, maxY } = group.getBBox();\n\n    const textGroup = group.findById(this.getElementId('text-group'));\n    const textShape = group.findById(this.getElementId('text'));\n    const lineShape = group.findById(this.getElementId('line'));\n\n    if (!coordinateBBox) {\n      return;\n    }\n\n    if (textGroup) {\n      if (x + minX <= coordinateBBox.minX) {\n        // 左侧超出\n        const overflow = coordinateBBox.minX - (x + minX);\n        applyTranslate(textGroup, textGroup.attr('x') + overflow, textGroup.attr('y'));\n      }\n      if (x + maxX >= coordinateBBox.maxX) {\n        // 右侧超出\n        const overflow = x + maxX - coordinateBBox.maxX;\n        applyTranslate(textGroup, textGroup.attr('x') - overflow, textGroup.attr('y'));\n      }\n    }\n\n    if (\n      (direction === 'upward' && y + minY <= coordinateBBox.minY) ||\n      (direction !== 'upward' && y + maxY >= coordinateBBox.maxY)\n    ) {\n      // 上方或者下方超出\n      let textBaseline;\n      let factor;\n      if (direction === 'upward' && y + minY <= coordinateBBox.minY) {\n        textBaseline = 'top';\n        factor = 1;\n      } else {\n        textBaseline = 'bottom';\n        factor = -1;\n      }\n      textShape.attr('textBaseline', textBaseline);\n      if (lineShape) {\n        lineShape.attr('path', [\n          ['M', 0, 0],\n          ['L', 0, lineLength * factor],\n        ]);\n      }\n      applyTranslate(textGroup, textGroup.attr('x'), (lineLength + 2) * factor)\n    }\n  }\n\n  private getShapeAttrs() {\n    const lineDisplay = get(this.get('line'), 'display');\n    const pointStyle = get(this.get('point'), 'style', {});\n    const lineStyle = get(this.get('line'), 'style', {});\n    const textStyle = get(this.get('text'), 'style', {});\n    const direction = this.get('direction');\n    const lineLength = lineDisplay ? get(this.get('line'), 'length', 0) : 0;\n    const factor = direction === 'upward' ? -1 : 1;\n    return {\n      point: {\n        x: 0,\n        y: 0,\n        ...pointStyle,\n      },\n      line: {\n        path: [\n          ['M', 0, 0],\n          ['L', 0, lineLength * factor],\n        ],\n        ...lineStyle,\n      },\n      text: {\n        x: 0,\n        y: (lineLength + 2) * factor,\n        text: get(this.get('text'), 'content', ''),\n        textBaseline: direction === 'upward' ? 'bottom' : 'top',\n        ...textStyle,\n      },\n    };\n  }\n}\n\nexport default DataMarkerAnnotation;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}