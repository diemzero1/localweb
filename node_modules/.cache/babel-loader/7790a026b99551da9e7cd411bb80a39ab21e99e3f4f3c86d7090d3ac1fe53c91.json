{"ast":null,"code":"var _jsxFileName = \"/home/iam/Documents/LocalWeb-master/src/components/antd/network/mesh/mesh_topo.tsx\",\n  _s = $RefreshSig$();\nimport ubusApi from 'service/api/ubus-api';\nimport React from 'react';\nimport \"../../../../translations/i18n\";\nimport { DecompositionTreeGraph } from '@ant-design/graphs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const MeshTopo = () => {\n  _s();\n  const [data, setData] = React.useState({\n    hits: []\n  });\n  const [data1, setData1] = React.useState();\n  React.useEffect(() => {\n    const fetchData = async () => {\n      const result1 = await ubusApi.show_mesh_config();\n      setData1(result1.enabled_mode);\n      const result = await ubusApi.show_mesh_topology();\n      setData(result);\n    };\n    const interval = setInterval(() => {\n      fetchData();\n    }, 5000);\n    return () => clearInterval(interval);\n  }, []);\n  const config = {\n    data,\n    data1,\n    width: 1500,\n    height: 750,\n    behaviors: ['drag-canvas', 'zoom-canvas', 'drag-node'],\n    layout: {\n      type: 'indented',\n      direction: 'LR',\n      dropCap: false,\n      indent: 500,\n      getHeight: () => {\n        return 200;\n      },\n      getWidth: () => {\n        return 500;\n      }\n    },\n    nodeCfg: {\n      autoWidth: true,\n      size: [150, 40],\n      title: {\n        containerStyle: {\n          fill: '#0e4778'\n        },\n        style: cfg => {\n          var _cfg$value;\n          return {\n            fill: (cfg === null || cfg === void 0 ? void 0 : (_cfg$value = cfg.value) === null || _cfg$value === void 0 ? void 0 : _cfg$value.title) === '青年' ? 'yellow' : '#fff'\n          };\n        }\n      },\n      items: {\n        containerStyle: {\n          fill: '#fff'\n        },\n        style: (cfg, group, type) => {\n          const styles = {\n            value: {\n              fill: '#000'\n            },\n            text: {\n              fill: '#000'\n            },\n            icon: {\n              width: 20,\n              height: 20\n            }\n          };\n          return styles[type];\n        }\n      },\n      nodeStateStyles: {\n        hover: {\n          stroke: '#1890ff',\n          lineWidth: 2\n        }\n      },\n      style: {\n        radius: [5, 5, 5, 5]\n      }\n    },\n    markerCfg: cfg => {\n      const {\n        children\n      } = cfg;\n      return {\n        show: children === null || children === void 0 ? void 0 : children.length\n      };\n    }\n  };\n  const config1 = {};\n  if (data1 === \"controller\") {\n    return /*#__PURE__*/_jsxDEV(DecompositionTreeGraph, {\n      ...config\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n};\n_s(MeshTopo, \"41wE6KGz341rk40PIfiFo7aPYuU=\");\n_c = MeshTopo;\nexport default MeshTopo;\nvar _c;\n$RefreshReg$(_c, \"MeshTopo\");","map":{"version":3,"names":["ubusApi","React","DecompositionTreeGraph","MeshTopo","data","setData","useState","hits","data1","setData1","useEffect","fetchData","result1","show_mesh_config","enabled_mode","result","show_mesh_topology","interval","setInterval","clearInterval","config","width","height","behaviors","layout","type","direction","dropCap","indent","getHeight","getWidth","nodeCfg","autoWidth","size","title","containerStyle","fill","style","cfg","value","items","group","styles","text","icon","nodeStateStyles","hover","stroke","lineWidth","radius","markerCfg","children","show","length","config1"],"sources":["/home/iam/Documents/LocalWeb-master/src/components/antd/network/mesh/mesh_topo.tsx"],"sourcesContent":["import ubusApi from 'service/api/ubus-api'\nimport React, { Component, useReducer } from 'react';\nimport { message, Space, Table, Tag } from 'antd';\nimport { useTranslation } from \"react-i18next\";\nimport \"../../../../translations/i18n\";\nimport { render } from '@testing-library/react';\nimport { DecompositionTreeGraph, RadialTreeGraph } from '@ant-design/graphs';\nimport { t } from 'i18next';\nimport { escape } from 'querystring';\nexport const MeshTopo = () => {   \n    const [data, setData] = React.useState({ hits: [] });\n    const [data1, setData1] = React.useState();\n    React.useEffect(() => {\n        const fetchData = async () => {\n            const result1= await ubusApi.show_mesh_config()\n            setData1(result1.enabled_mode)\n            const result = await ubusApi.show_mesh_topology()\n            setData(result);\n        };\n        const interval = setInterval(() => {\n            fetchData();\n        }, 5000);\n        return () => clearInterval(interval);\n    },[]);\n    const config: any = {\n        data,\n        data1,\n        width: 1500,\n        height: 750,\n        behaviors: ['drag-canvas', 'zoom-canvas', 'drag-node'],\n        layout: {\n            type: 'indented',\n            direction: 'LR',\n            dropCap: false,\n            indent: 500,\n            getHeight: () => {\n                return 200;\n            },\n            getWidth: () => {   \n                return 500;\n            },\n        },\n        nodeCfg: {\n            autoWidth: true,\n            size: [150, 40],\n            title: {\n                containerStyle: {\n                    fill: '#0e4778',\n                },\n                style: (cfg: any) => {\n                    return {\n                        fill: cfg?.value?.title === '青年' ? 'yellow' : '#fff',\n                    };\n                },\n            },\n            items: {    \n                containerStyle: {\n                    fill: '#fff',\n                },\n                style: (cfg: any, group: any, type: any) => {\n                    const styles: any = {\n                        value: {\n                            fill: '#000',\n                        },\n                        text: {\n                            fill: '#000',\n                        },\n                        icon: {\n                            width: 20,\n                            height: 20,\n                        },\n                    };\n                    return styles[type];\n                },\n            },\n            nodeStateStyles: {\n                hover: {\n                    stroke: '#1890ff',\n                    lineWidth: 2,\n                },\n            },\n            style: {\n                radius: [5, 5, 5, 5],\n            },\n        },\n        markerCfg: (cfg: any) => {\n            const { children } = cfg;\n            return {\n                show: children?.length,\n            };\n        },\n    };\n    const config1: any = {}\n    if(data1 === \"controller\"){\n    return <DecompositionTreeGraph {...config} />;\n    }\n    else{\n        return <></>;\n    }\n}\nexport default MeshTopo;"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,KAAK,MAAiC,OAAO;AAGpD,OAAO,+BAA+B;AAEtC,SAASC,sBAAsB,QAAyB,oBAAoB;AAAC;AAAA;AAG7E,OAAO,MAAMC,QAAQ,GAAG,MAAM;EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,KAAK,CAACK,QAAQ,CAAC;IAAEC,IAAI,EAAE;EAAG,CAAC,CAAC;EACpD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,KAAK,CAACK,QAAQ,EAAE;EAC1CL,KAAK,CAACS,SAAS,CAAC,MAAM;IAClB,MAAMC,SAAS,GAAG,YAAY;MAC1B,MAAMC,OAAO,GAAE,MAAMZ,OAAO,CAACa,gBAAgB,EAAE;MAC/CJ,QAAQ,CAACG,OAAO,CAACE,YAAY,CAAC;MAC9B,MAAMC,MAAM,GAAG,MAAMf,OAAO,CAACgB,kBAAkB,EAAE;MACjDX,OAAO,CAACU,MAAM,CAAC;IACnB,CAAC;IACD,MAAME,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/BP,SAAS,EAAE;IACf,CAAC,EAAE,IAAI,CAAC;IACR,OAAO,MAAMQ,aAAa,CAACF,QAAQ,CAAC;EACxC,CAAC,EAAC,EAAE,CAAC;EACL,MAAMG,MAAW,GAAG;IAChBhB,IAAI;IACJI,KAAK;IACLa,KAAK,EAAE,IAAI;IACXC,MAAM,EAAE,GAAG;IACXC,SAAS,EAAE,CAAC,aAAa,EAAE,aAAa,EAAE,WAAW,CAAC;IACtDC,MAAM,EAAE;MACJC,IAAI,EAAE,UAAU;MAChBC,SAAS,EAAE,IAAI;MACfC,OAAO,EAAE,KAAK;MACdC,MAAM,EAAE,GAAG;MACXC,SAAS,EAAE,MAAM;QACb,OAAO,GAAG;MACd,CAAC;MACDC,QAAQ,EAAE,MAAM;QACZ,OAAO,GAAG;MACd;IACJ,CAAC;IACDC,OAAO,EAAE;MACLC,SAAS,EAAE,IAAI;MACfC,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC;MACfC,KAAK,EAAE;QACHC,cAAc,EAAE;UACZC,IAAI,EAAE;QACV,CAAC;QACDC,KAAK,EAAGC,GAAQ,IAAK;UAAA;UACjB,OAAO;YACHF,IAAI,EAAE,CAAAE,GAAG,aAAHA,GAAG,qCAAHA,GAAG,CAAEC,KAAK,+CAAV,WAAYL,KAAK,MAAK,IAAI,GAAG,QAAQ,GAAG;UAClD,CAAC;QACL;MACJ,CAAC;MACDM,KAAK,EAAE;QACHL,cAAc,EAAE;UACZC,IAAI,EAAE;QACV,CAAC;QACDC,KAAK,EAAE,CAACC,GAAQ,EAAEG,KAAU,EAAEhB,IAAS,KAAK;UACxC,MAAMiB,MAAW,GAAG;YAChBH,KAAK,EAAE;cACHH,IAAI,EAAE;YACV,CAAC;YACDO,IAAI,EAAE;cACFP,IAAI,EAAE;YACV,CAAC;YACDQ,IAAI,EAAE;cACFvB,KAAK,EAAE,EAAE;cACTC,MAAM,EAAE;YACZ;UACJ,CAAC;UACD,OAAOoB,MAAM,CAACjB,IAAI,CAAC;QACvB;MACJ,CAAC;MACDoB,eAAe,EAAE;QACbC,KAAK,EAAE;UACHC,MAAM,EAAE,SAAS;UACjBC,SAAS,EAAE;QACf;MACJ,CAAC;MACDX,KAAK,EAAE;QACHY,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;MACvB;IACJ,CAAC;IACDC,SAAS,EAAGZ,GAAQ,IAAK;MACrB,MAAM;QAAEa;MAAS,CAAC,GAAGb,GAAG;MACxB,OAAO;QACHc,IAAI,EAAED,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEE;MACpB,CAAC;IACL;EACJ,CAAC;EACD,MAAMC,OAAY,GAAG,CAAC,CAAC;EACvB,IAAG9C,KAAK,KAAK,YAAY,EAAC;IAC1B,oBAAO,QAAC,sBAAsB;MAAA,GAAKY;IAAM;MAAA;MAAA;MAAA;IAAA,QAAI;EAC7C,CAAC,MACG;IACA,oBAAO,qCAAK;EAChB;AACJ,CAAC;AAAA,GA1FYjB,QAAQ;AAAA,KAARA,QAAQ;AA2FrB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}