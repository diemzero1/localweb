{"ast":null,"code":"import { __assign, __extends, __read, __rest, __spreadArray } from \"tslib\";\nimport { Controller } from './base';\nimport { Scrollbar as ScrollbarComponent } from '../../dependents';\nimport { BBox } from '../../util/bbox';\nimport { directionToPosition } from '../../util/direction';\nimport { COMPONENT_TYPE, DIRECTION, LAYER, VIEW_LIFE_CIRCLE } from '../../constant';\nimport { isObject, clamp, size, throttle, noop, get, valuesOfKey, deepMix } from '@antv/util';\nimport { isBetween } from '../../util/helper';\nvar DEFAULT_PADDING = 0;\nvar DEFAULT_SIZE = 8;\nvar DEFAULT_CATEGORY_SIZE = 32;\nvar MIN_THUMB_LENGTH = 20;\nvar Scrollbar = /** @class */function (_super) {\n  __extends(Scrollbar, _super);\n  function Scrollbar(view) {\n    var _this = _super.call(this, view) || this;\n    _this.onChangeFn = noop;\n    _this.resetMeasure = function () {\n      _this.clear();\n    };\n    _this.onValueChange = function (_a) {\n      var ratio = _a.ratio;\n      var animate = _this.getValidScrollbarCfg().animate;\n      _this.ratio = clamp(ratio, 0, 1);\n      var originalAnimate = _this.view.getOptions().animate;\n      if (!animate) {\n        _this.view.animate(false);\n      }\n      _this.changeViewData(_this.getScrollRange(), true);\n      _this.view.animate(originalAnimate);\n    };\n    _this.container = _this.view.getLayer(LAYER.FORE).addGroup();\n    _this.onChangeFn = throttle(_this.onValueChange, 20, {\n      leading: true\n    });\n    _this.trackLen = 0;\n    _this.thumbLen = 0;\n    _this.ratio = 0;\n    _this.view.on(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA, _this.resetMeasure);\n    _this.view.on(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_SIZE, _this.resetMeasure);\n    return _this;\n  }\n  Object.defineProperty(Scrollbar.prototype, \"name\", {\n    get: function get() {\n      return 'scrollbar';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Scrollbar.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n    this.view.off(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA, this.resetMeasure);\n    this.view.off(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_SIZE, this.resetMeasure);\n  };\n  Scrollbar.prototype.init = function () {};\n  /**\n   * 渲染\n   */\n  Scrollbar.prototype.render = function () {\n    this.option = this.view.getOptions().scrollbar;\n    if (this.option) {\n      if (this.scrollbar) {\n        // exist, update\n        this.scrollbar = this.updateScrollbar();\n      } else {\n        // not exist, create\n        this.scrollbar = this.createScrollbar();\n        this.scrollbar.component.on('scrollchange', this.onChangeFn);\n      }\n    } else {\n      if (this.scrollbar) {\n        // exist, destroy\n        this.scrollbar.component.destroy();\n        this.scrollbar = undefined;\n      }\n    }\n  };\n  /**\n   * 布局\n   */\n  Scrollbar.prototype.layout = function () {\n    var _this = this;\n    if (this.option && !this.trackLen) {\n      this.measureScrollbar();\n      setTimeout(function () {\n        if (!_this.view.destroyed) {\n          _this.changeViewData(_this.getScrollRange(), true);\n        }\n      });\n    }\n    if (this.scrollbar) {\n      var width = this.view.coordinateBBox.width;\n      var padding = this.scrollbar.component.get('padding');\n      var bboxObject = this.scrollbar.component.getLayoutBBox();\n      var bbox = new BBox(bboxObject.x, bboxObject.y, Math.min(bboxObject.width, width), bboxObject.height).expand(padding);\n      var cfg = this.getScrollbarComponentCfg();\n      var x = void 0;\n      var y = void 0;\n      if (cfg.isHorizontal) {\n        var _a = __read(directionToPosition(this.view.viewBBox, bbox, DIRECTION.BOTTOM), 2),\n          x1 = _a[0],\n          y1 = _a[1];\n        var _b = __read(directionToPosition(this.view.coordinateBBox, bbox, DIRECTION.BOTTOM), 2),\n          x2 = _b[0],\n          y2 = _b[1];\n        x = x2;\n        y = y1;\n      } else {\n        var _c = __read(directionToPosition(this.view.viewBBox, bbox, DIRECTION.RIGHT), 2),\n          x1 = _c[0],\n          y1 = _c[1];\n        var _d = __read(directionToPosition(this.view.viewBBox, bbox, DIRECTION.RIGHT), 2),\n          x2 = _d[0],\n          y2 = _d[1];\n        x = x2;\n        y = y1;\n      }\n      x += padding[3];\n      y += padding[0];\n      // 默认放在 bottom\n      if (this.trackLen) {\n        this.scrollbar.component.update(__assign(__assign({}, cfg), {\n          x: x,\n          y: y,\n          trackLen: this.trackLen,\n          thumbLen: this.thumbLen,\n          thumbOffset: (this.trackLen - this.thumbLen) * this.ratio\n        }));\n      } else {\n        this.scrollbar.component.update(__assign(__assign({}, cfg), {\n          x: x,\n          y: y\n        }));\n      }\n      this.view.viewBBox = this.view.viewBBox.cut(bbox, cfg.isHorizontal ? DIRECTION.BOTTOM : DIRECTION.RIGHT);\n    }\n  };\n  /**\n   * 更新\n   */\n  Scrollbar.prototype.update = function () {\n    // 逻辑和 render 保持一致\n    this.render();\n  };\n  Scrollbar.prototype.getComponents = function () {\n    return this.scrollbar ? [this.scrollbar] : [];\n  };\n  Scrollbar.prototype.clear = function () {\n    if (this.scrollbar) {\n      this.scrollbar.component.destroy();\n      this.scrollbar = undefined;\n    }\n    this.trackLen = 0;\n    this.thumbLen = 0;\n    this.ratio = 0;\n    this.cnt = 0;\n    this.step = 0;\n    this.data = undefined;\n    this.xScaleCfg = undefined;\n    this.yScalesCfg = [];\n  };\n  /** 设置滚动条位置  */\n  Scrollbar.prototype.setValue = function (ratio) {\n    this.onValueChange({\n      ratio: ratio\n    });\n  };\n  /** 获得滚动条位置  */\n  Scrollbar.prototype.getValue = function () {\n    return this.ratio;\n  };\n  /**\n   * 获取 scrollbar 的主题配置\n   */\n  Scrollbar.prototype.getThemeOptions = function () {\n    var theme = this.view.getTheme();\n    return get(theme, ['components', 'scrollbar', 'common'], {});\n  };\n  /**\n   * 获取 scrollbar 组件的主题样式\n   */\n  Scrollbar.prototype.getScrollbarTheme = function (style) {\n    var theme = get(this.view.getTheme(), ['components', 'scrollbar']);\n    var _a = style || {},\n      thumbHighlightColor = _a.thumbHighlightColor,\n      restStyles = __rest(_a, [\"thumbHighlightColor\"]);\n    return {\n      default: deepMix({}, get(theme, ['default', 'style'], {}), restStyles),\n      hover: deepMix({}, get(theme, ['hover', 'style'], {}), {\n        thumbColor: thumbHighlightColor\n      })\n    };\n  };\n  Scrollbar.prototype.measureScrollbar = function () {\n    var xScale = this.view.getXScale();\n    var yScales = this.view.getYScales().slice();\n    this.data = this.getScrollbarData();\n    this.step = this.getStep();\n    this.cnt = this.getCnt();\n    var _a = this.getScrollbarComponentCfg(),\n      trackLen = _a.trackLen,\n      thumbLen = _a.thumbLen;\n    this.trackLen = trackLen;\n    this.thumbLen = thumbLen;\n    this.xScaleCfg = {\n      field: xScale.field,\n      values: xScale.values || []\n    };\n    this.yScalesCfg = yScales;\n  };\n  Scrollbar.prototype.getScrollRange = function () {\n    var startIdx = Math.floor((this.cnt - this.step) * clamp(this.ratio, 0, 1));\n    var endIdx = Math.min(startIdx + this.step - 1, this.cnt - 1);\n    return [startIdx, endIdx];\n  };\n  Scrollbar.prototype.changeViewData = function (_a, render) {\n    var _this = this;\n    var _b = __read(_a, 2),\n      startIdx = _b[0],\n      endIdx = _b[1];\n    var type = this.getValidScrollbarCfg().type;\n    var isHorizontal = type !== 'vertical';\n    var values = valuesOfKey(this.data, this.xScaleCfg.field);\n    // 如果是 xScale 数值类型，则进行排序\n    var xScaleValues = this.view.getXScale().isLinear ? values.sort(function (a, b) {\n      return Number(a) - Number(b);\n    }) : values;\n    var xValues = isHorizontal ? xScaleValues : xScaleValues.reverse();\n    this.yScalesCfg.forEach(function (cfg) {\n      _this.view.scale(cfg.field, {\n        formatter: cfg.formatter,\n        type: cfg.type,\n        min: cfg.min,\n        max: cfg.max,\n        tickMethod: cfg.tickMethod\n      });\n    });\n    this.view.filter(this.xScaleCfg.field, function (val) {\n      var idx = xValues.indexOf(val);\n      return idx > -1 ? isBetween(idx, startIdx, endIdx) : true;\n    });\n    this.view.render(true);\n  };\n  Scrollbar.prototype.createScrollbar = function () {\n    var type = this.getValidScrollbarCfg().type;\n    var isHorizontal = type !== 'vertical';\n    var component = new ScrollbarComponent(__assign(__assign({\n      container: this.container\n    }, this.getScrollbarComponentCfg()), {\n      x: 0,\n      y: 0\n    }));\n    component.init();\n    return {\n      component: component,\n      layer: LAYER.FORE,\n      direction: isHorizontal ? DIRECTION.BOTTOM : DIRECTION.RIGHT,\n      type: COMPONENT_TYPE.SCROLLBAR\n    };\n  };\n  Scrollbar.prototype.updateScrollbar = function () {\n    var config = this.getScrollbarComponentCfg();\n    var realConfig = this.trackLen ? __assign(__assign({}, config), {\n      trackLen: this.trackLen,\n      thumbLen: this.thumbLen,\n      thumbOffset: (this.trackLen - this.thumbLen) * this.ratio\n    }) : __assign({}, config);\n    this.scrollbar.component.update(realConfig);\n    return this.scrollbar;\n  };\n  Scrollbar.prototype.getStep = function () {\n    if (this.step) {\n      return this.step;\n    }\n    var coordinateBBox = this.view.coordinateBBox;\n    var _a = this.getValidScrollbarCfg(),\n      type = _a.type,\n      categorySize = _a.categorySize;\n    var isHorizontal = type !== 'vertical';\n    return Math.floor((isHorizontal ? coordinateBBox.width : coordinateBBox.height) / categorySize);\n  };\n  Scrollbar.prototype.getCnt = function () {\n    if (this.cnt) {\n      return this.cnt;\n    }\n    var xScale = this.view.getXScale();\n    var data = this.getScrollbarData();\n    var values = valuesOfKey(data, xScale.field);\n    return size(values);\n  };\n  Scrollbar.prototype.getScrollbarComponentCfg = function () {\n    var _a = this.view,\n      coordinateBBox = _a.coordinateBBox,\n      viewBBox = _a.viewBBox;\n    var _b = this.getValidScrollbarCfg(),\n      type = _b.type,\n      padding = _b.padding,\n      width = _b.width,\n      height = _b.height,\n      style = _b.style;\n    var isHorizontal = type !== 'vertical';\n    var _c = __read(padding, 4),\n      paddingTop = _c[0],\n      paddingRight = _c[1],\n      paddingBottom = _c[2],\n      paddingLeft = _c[3];\n    var position = isHorizontal ? {\n      x: coordinateBBox.minX + paddingLeft,\n      y: viewBBox.maxY - height - paddingBottom\n    } : {\n      x: viewBBox.maxX - width - paddingRight,\n      y: coordinateBBox.minY + paddingTop\n    };\n    var step = this.getStep();\n    var cnt = this.getCnt();\n    var trackLen = isHorizontal ? coordinateBBox.width - paddingLeft - paddingRight : coordinateBBox.height - paddingTop - paddingBottom;\n    var thumbLen = Math.max(trackLen * clamp(step / cnt, 0, 1), MIN_THUMB_LENGTH);\n    return __assign(__assign({}, this.getThemeOptions()), {\n      x: position.x,\n      y: position.y,\n      size: isHorizontal ? height : width,\n      isHorizontal: isHorizontal,\n      trackLen: trackLen,\n      thumbLen: thumbLen,\n      thumbOffset: 0,\n      theme: this.getScrollbarTheme(style)\n    });\n  };\n  /**\n   * 填充一些默认的配置项目\n   */\n  Scrollbar.prototype.getValidScrollbarCfg = function () {\n    var cfg = {\n      type: 'horizontal',\n      categorySize: DEFAULT_CATEGORY_SIZE,\n      width: DEFAULT_SIZE,\n      height: DEFAULT_SIZE,\n      padding: [0, 0, 0, 0],\n      animate: true,\n      style: {}\n    };\n    if (isObject(this.option)) {\n      cfg = __assign(__assign({}, cfg), this.option);\n    }\n    if (!isObject(this.option) || !this.option.padding) {\n      cfg.padding = cfg.type === 'horizontal' ? [DEFAULT_PADDING, 0, DEFAULT_PADDING, 0] : [0, DEFAULT_PADDING, 0, DEFAULT_PADDING];\n    }\n    return cfg;\n  };\n  /**\n   * 获取数据\n   */\n  Scrollbar.prototype.getScrollbarData = function () {\n    var coordinate = this.view.getCoordinate();\n    var cfg = this.getValidScrollbarCfg();\n    var data = this.view.getOptions().data || [];\n    // 纵向做了 y 轴镜像之后，数据也需要镜像反转\n    if (coordinate.isReflect('y') && cfg.type === 'vertical') {\n      data = __spreadArray([], __read(data), false).reverse();\n    }\n    return data;\n  };\n  return Scrollbar;\n}(Controller);\nexport default Scrollbar;","map":{"version":3,"mappings":"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","names":["Controller","Scrollbar","ScrollbarComponent","BBox","directionToPosition","COMPONENT_TYPE","DIRECTION","LAYER","VIEW_LIFE_CIRCLE","isObject","clamp","size","throttle","noop","get","valuesOfKey","deepMix","isBetween","DEFAULT_PADDING","DEFAULT_SIZE","DEFAULT_CATEGORY_SIZE","MIN_THUMB_LENGTH","__extends","view","_super","_this","clear","_a","ratio","getValidScrollbarCfg","originalAnimate","getOptions","animate","changeViewData","getScrollRange","container","getLayer","FORE","addGroup","onChangeFn","onValueChange","leading","trackLen","thumbLen","on","BEFORE_CHANGE_DATA","resetMeasure","BEFORE_CHANGE_SIZE","Object","destroy","off","option","scrollbar","updateScrollbar","createScrollbar","component","undefined","measureScrollbar","setTimeout","destroyed","width","coordinateBBox","padding","bboxObject","getLayoutBBox","bbox","x","y","Math","min","height","expand","cfg","getScrollbarComponentCfg","isHorizontal","viewBBox","BOTTOM","x1","y1","x2","y2","RIGHT","update","thumbOffset","cut","render","cnt","step","data","xScaleCfg","yScalesCfg","theme","getTheme","style","thumbHighlightColor","restStyles","default","hover","thumbColor","xScale","getXScale","yScales","getYScales","slice","getScrollbarData","getStep","getCnt","field","values","startIdx","floor","endIdx","_b","type","xScaleValues","isLinear","sort","a","b","Number","xValues","reverse","forEach","scale","formatter","max","tickMethod","filter","val","idx","indexOf","init","layer","direction","SCROLLBAR","config","realConfig","__assign","categorySize","paddingTop","paddingRight","paddingBottom","paddingLeft","position","minX","maxY","maxX","minY","getThemeOptions","getScrollbarTheme","coordinate","getCoordinate","isReflect","__spreadArray"],"sources":["/home/iam/Documents/LocalWeb-master/node_modules/@antv/g2/src/chart/controller/scrollbar.ts"],"sourcesContent":["import { Controller } from './base';\nimport { IGroup, Scrollbar as ScrollbarComponent, Scale } from '../../dependents';\nimport { ScrollbarOption, ComponentOption, ScrollbarCfg, Data, ScaleOption, Padding } from '../../interface';\nimport View from '../view';\nimport { BBox } from '../../util/bbox';\nimport { directionToPosition } from '../../util/direction';\nimport { COMPONENT_TYPE, DIRECTION, LAYER, VIEW_LIFE_CIRCLE } from '../../constant';\nimport { isObject, clamp, size, throttle, noop, get, valuesOfKey, deepMix } from '@antv/util';\nimport { isBetween } from '../../util/helper';\n\nconst DEFAULT_PADDING: number = 0;\nconst DEFAULT_SIZE: number = 8;\nconst DEFAULT_CATEGORY_SIZE: number = 32;\nconst MIN_THUMB_LENGTH: number = 20;\n\nexport default class Scrollbar extends Controller<ScrollbarOption> {\n  private scrollbar: ComponentOption;\n  private container: IGroup;\n\n  private trackLen: number;\n  private thumbLen: number;\n  private cnt: number;\n  private step: number;\n  private ratio: number;\n  private data: Data;\n  private xScaleCfg: {\n    field: string;\n    values: string[];\n  };\n  private yScalesCfg: Scale[];\n\n  private onChangeFn: (evt: {}) => void = noop;\n\n  constructor(view: View) {\n    super(view);\n    this.container = this.view.getLayer(LAYER.FORE).addGroup();\n    this.onChangeFn = throttle(this.onValueChange, 20, {\n      leading: true,\n    }) as (evt: {}) => void;\n    this.trackLen = 0;\n    this.thumbLen = 0;\n    this.ratio = 0;\n\n    this.view.on(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA, this.resetMeasure);\n    this.view.on(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_SIZE, this.resetMeasure);\n  }\n\n  get name(): string {\n    return 'scrollbar';\n  }\n\n  public destroy() {\n    super.destroy();\n    this.view.off(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA, this.resetMeasure);\n    this.view.off(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_SIZE, this.resetMeasure);\n  }\n\n  public init() { }\n\n  /**\n   * 渲染\n   */\n  public render() {\n    this.option = this.view.getOptions().scrollbar;\n\n    if (this.option) {\n      if (this.scrollbar) {\n        // exist, update\n        this.scrollbar = this.updateScrollbar();\n      } else {\n        // not exist, create\n        this.scrollbar = this.createScrollbar();\n        this.scrollbar.component.on('scrollchange', this.onChangeFn);\n      }\n    } else {\n      if (this.scrollbar) {\n        // exist, destroy\n        this.scrollbar.component.destroy();\n        this.scrollbar = undefined;\n      }\n    }\n  }\n\n  /**\n   * 布局\n   */\n  public layout() {\n    if (this.option && !this.trackLen) {\n      this.measureScrollbar();\n      setTimeout(() => {\n        if (!this.view.destroyed) {\n          this.changeViewData(this.getScrollRange(), true);\n        }\n      });\n    }\n    if (this.scrollbar) {\n      const width = this.view.coordinateBBox.width;\n      const padding: Padding = this.scrollbar.component.get('padding') as Padding;\n      const bboxObject = this.scrollbar.component.getLayoutBBox();\n      const bbox = new BBox(bboxObject.x, bboxObject.y, Math.min(bboxObject.width, width), bboxObject.height).expand(\n        padding\n      );\n      const cfg = this.getScrollbarComponentCfg();\n\n      let x: number;\n      let y: number;\n\n      if (cfg.isHorizontal) {\n        const [x1, y1] = directionToPosition(this.view.viewBBox, bbox, DIRECTION.BOTTOM);\n        const [x2, y2] = directionToPosition(this.view.coordinateBBox, bbox, DIRECTION.BOTTOM);\n        x = x2;\n        y = y1;\n      } else {\n        const [x1, y1] = directionToPosition(this.view.viewBBox, bbox, DIRECTION.RIGHT);\n        const [x2, y2] = directionToPosition(this.view.viewBBox, bbox, DIRECTION.RIGHT);\n        x = x2;\n        y = y1;\n      }\n\n      x += padding[3];\n      y += padding[0];\n\n      // 默认放在 bottom\n      if (this.trackLen) {\n        this.scrollbar.component.update({\n          ...cfg,\n          x,\n          y,\n          trackLen: this.trackLen,\n          thumbLen: this.thumbLen,\n          thumbOffset: (this.trackLen - this.thumbLen) * this.ratio,\n        });\n      } else {\n        this.scrollbar.component.update({\n          ...cfg,\n          x,\n          y,\n        });\n      }\n\n      this.view.viewBBox = this.view.viewBBox.cut(bbox, cfg.isHorizontal ? DIRECTION.BOTTOM : DIRECTION.RIGHT);\n    }\n  }\n\n  /**\n   * 更新\n   */\n  public update() {\n    // 逻辑和 render 保持一致\n    this.render();\n  }\n\n  public getComponents() {\n    return this.scrollbar ? [this.scrollbar] : [];\n  }\n\n  public clear() {\n    if (this.scrollbar) {\n      this.scrollbar.component.destroy();\n      this.scrollbar = undefined;\n    }\n    this.trackLen = 0;\n    this.thumbLen = 0;\n    this.ratio = 0;\n    this.cnt = 0;\n    this.step = 0;\n    this.data = undefined;\n    this.xScaleCfg = undefined;\n    this.yScalesCfg = [];\n  }\n\n  /** 设置滚动条位置  */\n  public setValue(ratio: number) {\n    this.onValueChange({ ratio });\n  }\n\n  /** 获得滚动条位置  */\n  public getValue() {\n    return this.ratio;\n  }\n\n  /**\n   * 获取 scrollbar 的主题配置\n   */\n  private getThemeOptions() {\n    const theme = this.view.getTheme();\n    return get(theme, ['components', 'scrollbar', 'common'], {});\n  }\n\n  /**\n   * 获取 scrollbar 组件的主题样式\n   */\n  private getScrollbarTheme(style?: ScrollbarCfg['style']) {\n    const theme = get(this.view.getTheme(), ['components', 'scrollbar']);\n    const { thumbHighlightColor, ...restStyles } = style || {};\n    return {\n      default: deepMix({}, get(theme, ['default', 'style'], {}), restStyles),\n      hover: deepMix({}, get(theme, ['hover', 'style'], {}), { thumbColor: thumbHighlightColor }),\n    };\n  }\n\n  private resetMeasure = () => {\n    this.clear();\n  };\n\n  private onValueChange = ({ ratio }: { ratio: number }) => {\n    const { animate } = this.getValidScrollbarCfg();\n    this.ratio = clamp(ratio, 0, 1);\n    const originalAnimate = this.view.getOptions().animate;\n    if (!animate) {\n      this.view.animate(false);\n    }\n    this.changeViewData(this.getScrollRange(), true);\n    this.view.animate(originalAnimate);\n  };\n\n  private measureScrollbar(): void {\n    const xScale = this.view.getXScale();\n    const yScales = this.view.getYScales().slice();\n    this.data = this.getScrollbarData();\n    this.step = this.getStep();\n    this.cnt = this.getCnt();\n    const { trackLen, thumbLen } = this.getScrollbarComponentCfg();\n    this.trackLen = trackLen;\n    this.thumbLen = thumbLen;\n    this.xScaleCfg = {\n      field: xScale.field,\n      values: xScale.values || [],\n    };\n    this.yScalesCfg = yScales;\n  }\n\n  private getScrollRange(): [number, number] {\n    const startIdx: number = Math.floor((this.cnt - this.step) * clamp(this.ratio, 0, 1));\n    const endIdx: number = Math.min(startIdx + this.step - 1, this.cnt - 1);\n    return [startIdx, endIdx];\n  }\n\n  private changeViewData([startIdx, endIdx]: [number, number], render?: boolean): void {\n    const { type } = this.getValidScrollbarCfg();\n    const isHorizontal = type !== 'vertical';\n    const values = valuesOfKey(this.data, this.xScaleCfg.field);\n\n    // 如果是 xScale 数值类型，则进行排序\n    const xScaleValues = this.view.getXScale().isLinear ? values.sort((a, b) => Number(a) - Number(b)) : values;\n\n    const xValues = isHorizontal ? xScaleValues : xScaleValues.reverse();\n    this.yScalesCfg.forEach((cfg) => {\n      this.view.scale(cfg.field, {\n        formatter: cfg.formatter,\n        type: cfg.type as ScaleOption['type'],\n        min: cfg.min,\n        max: cfg.max,\n        tickMethod: cfg.tickMethod\n      });\n    });\n    this.view.filter(this.xScaleCfg.field, (val) => {\n      const idx = xValues.indexOf(val);\n      return idx > -1 ? isBetween(idx, startIdx, endIdx) : true;\n    });\n    this.view.render(true);\n  }\n\n  private createScrollbar(): ComponentOption {\n    const { type } = this.getValidScrollbarCfg();\n    const isHorizontal = type !== 'vertical';\n    const component = new ScrollbarComponent({\n      container: this.container,\n      ...this.getScrollbarComponentCfg(),\n      x: 0,\n      y: 0,\n    });\n\n    component.init();\n\n    return {\n      component,\n      layer: LAYER.FORE,\n      direction: isHorizontal ? DIRECTION.BOTTOM : DIRECTION.RIGHT,\n      type: COMPONENT_TYPE.SCROLLBAR,\n    };\n  }\n\n  private updateScrollbar(): ComponentOption {\n    const config = this.getScrollbarComponentCfg();\n    const realConfig = this.trackLen\n      ? {\n        ...config,\n        trackLen: this.trackLen,\n        thumbLen: this.thumbLen,\n        thumbOffset: (this.trackLen - this.thumbLen) * this.ratio,\n      }\n      : { ...config };\n    this.scrollbar.component.update(realConfig);\n\n    return this.scrollbar;\n  }\n\n  private getStep() {\n    if (this.step) {\n      return this.step;\n    }\n    const { coordinateBBox } = this.view;\n    const { type, categorySize } = this.getValidScrollbarCfg();\n    const isHorizontal = type !== 'vertical';\n\n    return Math.floor((isHorizontal ? coordinateBBox.width : coordinateBBox.height) / categorySize);\n  }\n\n  private getCnt() {\n    if (this.cnt) {\n      return this.cnt;\n    }\n    const xScale = this.view.getXScale();\n    const data = this.getScrollbarData();\n    const values = valuesOfKey(data, xScale.field);\n    return size(values);\n  }\n\n  private getScrollbarComponentCfg() {\n    const { coordinateBBox, viewBBox } = this.view;\n    const { type, padding, width, height, style } = this.getValidScrollbarCfg();\n    const isHorizontal = type !== 'vertical';\n    const [paddingTop, paddingRight, paddingBottom, paddingLeft] = padding;\n    const position = isHorizontal\n      ? {\n        x: coordinateBBox.minX + paddingLeft,\n        y: viewBBox.maxY - height - paddingBottom,\n      }\n      : {\n        x: viewBBox.maxX - width - paddingRight,\n        y: coordinateBBox.minY + paddingTop,\n      };\n    const step = this.getStep();\n    const cnt = this.getCnt();\n    const trackLen = isHorizontal\n      ? coordinateBBox.width - paddingLeft - paddingRight\n      : coordinateBBox.height - paddingTop - paddingBottom;\n    const thumbLen = Math.max(trackLen * clamp(step / cnt, 0, 1), MIN_THUMB_LENGTH);\n\n    return {\n      ...this.getThemeOptions(),\n      x: position.x,\n      y: position.y,\n      size: isHorizontal ? height : width,\n      isHorizontal,\n      trackLen,\n      thumbLen,\n      thumbOffset: 0,\n      theme: this.getScrollbarTheme(style),\n    };\n  }\n\n  /**\n   * 填充一些默认的配置项目\n   */\n  private getValidScrollbarCfg(): Required<ScrollbarCfg> {\n    let cfg: Required<ScrollbarCfg> = {\n      type: 'horizontal',\n      categorySize: DEFAULT_CATEGORY_SIZE,\n      width: DEFAULT_SIZE,\n      height: DEFAULT_SIZE,\n      padding: [0, 0, 0, 0],\n      animate: true,\n      style: {},\n    };\n    if (isObject(this.option)) {\n      cfg = { ...cfg, ...this.option };\n    }\n    if (!isObject(this.option) || !this.option.padding) {\n      cfg.padding =\n        cfg.type === 'horizontal' ? [DEFAULT_PADDING, 0, DEFAULT_PADDING, 0] : [0, DEFAULT_PADDING, 0, DEFAULT_PADDING];\n    }\n\n    return cfg;\n  }\n\n  /**\n   * 获取数据\n   */\n  private getScrollbarData(): Data {\n    const coordinate = this.view.getCoordinate();\n    const cfg = this.getValidScrollbarCfg();\n    let data = this.view.getOptions().data || [];\n    // 纵向做了 y 轴镜像之后，数据也需要镜像反转\n    if (coordinate.isReflect('y') && cfg.type === 'vertical') {\n      data = [...data].reverse();\n    }\n\n    return data;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}