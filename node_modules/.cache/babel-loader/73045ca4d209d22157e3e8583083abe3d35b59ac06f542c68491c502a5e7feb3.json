{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport colorUtil from '@antv/color-util';\nimport { createDom, modifyCSS } from '@antv/dom-util';\nimport { each, hasKey, isElement, substitute } from '@antv/util';\nimport HtmlComponent from '../abstract/html-component';\nimport { clearDom, regionToBBox, toPx } from '../util/util';\nimport * as CssConst from './css-const';\nimport TooltipTheme from './html-theme';\nimport { getAlignPoint } from '../util/align';\nfunction hasOneKey(obj, keys) {\n  var result = false;\n  each(keys, function (key) {\n    if (hasKey(obj, key)) {\n      result = true;\n      return false;\n    }\n  });\n  return result;\n}\nvar Tooltip = /** @class */function (_super) {\n  __extends(Tooltip, _super);\n  function Tooltip() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Tooltip.prototype.getDefaultCfg = function () {\n    var cfg = _super.prototype.getDefaultCfg.call(this);\n    return __assign(__assign({}, cfg), {\n      name: 'tooltip',\n      type: 'html',\n      x: 0,\n      y: 0,\n      items: [],\n      customContent: null,\n      containerTpl: \"<div class=\\\"\" + CssConst.CONTAINER_CLASS + \"\\\"><div class=\\\"\" + CssConst.TITLE_CLASS + \"\\\"></div><ul class=\\\"\" + CssConst.LIST_CLASS + \"\\\"></ul></div>\",\n      itemTpl: \"<li class=\\\"\" + CssConst.LIST_ITEM_CLASS + \"\\\" data-index={index}>\\n          <span class=\\\"\" + CssConst.MARKER_CLASS + \"\\\" style=\\\"background:{color}\\\"></span>\\n          <span class=\\\"\" + CssConst.NAME_CLASS + \"\\\">{name}</span>:\\n          <span class=\\\"\" + CssConst.VALUE_CLASS + \"\\\">{value}</span>\\n        </li>\",\n      xCrosshairTpl: \"<div class=\\\"\" + CssConst.CROSSHAIR_X + \"\\\"></div>\",\n      yCrosshairTpl: \"<div class=\\\"\" + CssConst.CROSSHAIR_Y + \"\\\"></div>\",\n      title: null,\n      showTitle: true,\n      /**\n       * tooltip 限制的区域\n       * @type {Region}\n       */\n      region: null,\n      // crosshair 的限制区域\n      crosshairsRegion: null,\n      containerClassName: CssConst.CONTAINER_CLASS,\n      // x, y, xy\n      crosshairs: null,\n      offset: 10,\n      position: 'right',\n      domStyles: null,\n      defaultStyles: TooltipTheme\n    });\n  };\n  // tooltip 渲染时，渲染 title，items 和 corosshairs\n  Tooltip.prototype.render = function () {\n    if (this.get('customContent')) {\n      this.renderCustomContent();\n    } else {\n      this.resetTitle();\n      this.renderItems();\n    }\n    // 绘制完成后，再定位\n    this.resetPosition();\n  };\n  // 复写清空函数，因为有模板的存在，所以默认的写法不合适\n  Tooltip.prototype.clear = function () {\n    // 由于 crosshair 没有在 container 内，所以需要单独清理\n    this.clearCrosshairs();\n    this.setTitle(''); // 清空标题\n    this.clearItemDoms();\n  };\n  Tooltip.prototype.show = function () {\n    var container = this.getContainer();\n    if (!container || this.destroyed) {\n      // 防止容器不存在或者被销毁时报错\n      return;\n    }\n    this.set('visible', true);\n    modifyCSS(container, {\n      visibility: 'visible'\n    });\n    this.setCrossHairsVisible(true);\n  };\n  Tooltip.prototype.hide = function () {\n    var container = this.getContainer();\n    // relative: https://github.com/antvis/g2/issues/1221\n    if (!container || this.destroyed) {\n      return;\n    }\n    this.set('visible', false);\n    modifyCSS(container, {\n      visibility: 'hidden'\n    });\n    this.setCrossHairsVisible(false);\n  };\n  // 实现 IPointLocation 的接口\n  Tooltip.prototype.getLocation = function () {\n    return {\n      x: this.get('x'),\n      y: this.get('y')\n    };\n  };\n  // 实现 IPointLocation 的接口\n  Tooltip.prototype.setLocation = function (point) {\n    this.set('x', point.x);\n    this.set('y', point.y);\n    this.resetPosition();\n  };\n  Tooltip.prototype.setCrossHairsVisible = function (visible) {\n    var display = visible ? '' : 'none';\n    var xCrosshairDom = this.get('xCrosshairDom');\n    var yCrosshairDom = this.get('yCrosshairDom');\n    xCrosshairDom && modifyCSS(xCrosshairDom, {\n      display: display\n    });\n    yCrosshairDom && modifyCSS(yCrosshairDom, {\n      display: display\n    });\n  };\n  // 如有 customContent 则根据 customContent 设置 container\n  Tooltip.prototype.initContainer = function () {\n    _super.prototype.initContainer.call(this);\n    if (this.get('customContent')) {\n      if (this.get('container')) {\n        this.get('container').remove();\n      }\n      var container = this.getHtmlContentNode();\n      this.get('parent').appendChild(container);\n      this.set('container', container);\n      this.resetStyles();\n      this.applyStyles();\n    }\n  };\n  // 更新属性的同时，可能会引起 DOM 的变化，这里对可能引起 DOM 变化的场景做了处理\n  Tooltip.prototype.updateInner = function (cfg) {\n    if (this.get('customContent')) {\n      this.renderCustomContent();\n    } else {\n      // 更新标题\n      if (hasOneKey(cfg, ['title', 'showTitle'])) {\n        this.resetTitle();\n      }\n      // 更新内容\n      if (hasKey(cfg, 'items')) {\n        this.renderItems();\n      }\n    }\n    _super.prototype.updateInner.call(this, cfg);\n  };\n  Tooltip.prototype.initDom = function () {\n    this.cacheDoms();\n  };\n  // 清理 DOM\n  Tooltip.prototype.removeDom = function () {\n    _super.prototype.removeDom.call(this);\n    this.clearCrosshairs();\n  };\n  // 调整位置\n  Tooltip.prototype.resetPosition = function () {\n    var x = this.get('x');\n    var y = this.get('y');\n    var offset = this.get('offset');\n    var _a = this.getOffset(),\n      offsetX = _a.offsetX,\n      offsetY = _a.offsetY;\n    var position = this.get('position');\n    var region = this.get('region');\n    var container = this.getContainer();\n    var bbox = this.getBBox();\n    var width = bbox.width,\n      height = bbox.height;\n    var limitBox;\n    if (region) {\n      // 不限制位置\n      limitBox = regionToBBox(region);\n    }\n    var point = getAlignPoint(x, y, offset, width, height, position, limitBox);\n    modifyCSS(container, {\n      left: toPx(point.x + offsetX),\n      top: toPx(point.y + offsetY)\n    });\n    this.resetCrosshairs();\n  };\n  // 根据 customContent 渲染\n  Tooltip.prototype.renderCustomContent = function () {\n    var node = this.getHtmlContentNode();\n    var parent = this.get('parent');\n    var curContainer = this.get('container');\n    if (curContainer && curContainer.parentNode === parent) {\n      parent.replaceChild(node, curContainer);\n    } else {\n      parent.appendChild(node);\n    }\n    this.set('container', node);\n    this.resetStyles();\n    this.applyStyles();\n  };\n  Tooltip.prototype.getHtmlContentNode = function () {\n    var node;\n    var customContent = this.get('customContent');\n    if (customContent) {\n      var elem = customContent(this.get('title'), this.get('items'));\n      if (isElement(elem)) {\n        node = elem;\n      } else {\n        node = createDom(elem);\n      }\n    }\n    return node;\n  };\n  // 缓存模板设置的各种 DOM\n  Tooltip.prototype.cacheDoms = function () {\n    var container = this.getContainer();\n    var titleDom = container.getElementsByClassName(CssConst.TITLE_CLASS)[0];\n    var listDom = container.getElementsByClassName(CssConst.LIST_CLASS)[0];\n    this.set('titleDom', titleDom);\n    this.set('listDom', listDom);\n  };\n  // 重置 title\n  Tooltip.prototype.resetTitle = function () {\n    var title = this.get('title');\n    var showTitle = this.get('showTitle');\n    if (showTitle && title) {\n      this.setTitle(title);\n    } else {\n      this.setTitle('');\n    }\n  };\n  // 设置 title 文本\n  Tooltip.prototype.setTitle = function (text) {\n    var titleDom = this.get('titleDom');\n    if (titleDom) {\n      titleDom.innerText = text;\n    }\n  };\n  // 终止 crosshair\n  Tooltip.prototype.resetCrosshairs = function () {\n    var crosshairsRegion = this.get('crosshairsRegion');\n    var crosshairs = this.get('crosshairs');\n    if (!crosshairsRegion || !crosshairs) {\n      // 不显示 crosshair，都移除，没有设定 region 也都移除掉\n      this.clearCrosshairs();\n    } else {\n      var crosshairBox = regionToBBox(crosshairsRegion);\n      var xCrosshairDom = this.get('xCrosshairDom');\n      var yCrosshairDom = this.get('yCrosshairDom');\n      if (crosshairs === 'x') {\n        this.resetCrosshair('x', crosshairBox);\n        // 仅显示 x 的 crosshair，y 移除\n        if (yCrosshairDom) {\n          yCrosshairDom.remove();\n          this.set('yCrosshairDom', null);\n        }\n      } else if (crosshairs === 'y') {\n        this.resetCrosshair('y', crosshairBox);\n        // 仅显示 y 的 crosshair，x 移除\n        if (xCrosshairDom) {\n          xCrosshairDom.remove();\n          this.set('xCrosshairDom', null);\n        }\n      } else {\n        this.resetCrosshair('x', crosshairBox);\n        this.resetCrosshair('y', crosshairBox);\n      }\n      this.setCrossHairsVisible(this.get('visible'));\n    }\n  };\n  // 设定 crosshair 的位置，需要区分 x,y\n  Tooltip.prototype.resetCrosshair = function (name, bbox) {\n    var croshairDom = this.checkCrosshair(name);\n    var value = this.get(name);\n    if (name === 'x') {\n      modifyCSS(croshairDom, {\n        left: toPx(value),\n        top: toPx(bbox.y),\n        height: toPx(bbox.height)\n      });\n    } else {\n      modifyCSS(croshairDom, {\n        top: toPx(value),\n        left: toPx(bbox.x),\n        width: toPx(bbox.width)\n      });\n    }\n  };\n  // 如果 crosshair 对应的 dom 不存在，则创建\n  Tooltip.prototype.checkCrosshair = function (name) {\n    var domName = name + \"CrosshairDom\";\n    var tplName = name + \"CrosshairTpl\";\n    var constName = \"CROSSHAIR_\" + name.toUpperCase();\n    var styleName = CssConst[constName];\n    var croshairDom = this.get(domName);\n    var parent = this.get('parent');\n    if (!croshairDom) {\n      croshairDom = createDom(this.get(tplName)); // 创建\n      this.applyStyle(styleName, croshairDom); // 设置初始样式\n      parent.appendChild(croshairDom); // 添加到跟 tooltip 同级的目录下\n      this.set(domName, croshairDom);\n    }\n    return croshairDom;\n  };\n  Tooltip.prototype.renderItems = function () {\n    this.clearItemDoms();\n    var items = this.get('items');\n    var itemTpl = this.get('itemTpl');\n    var listDom = this.get('listDom');\n    if (listDom) {\n      each(items, function (item) {\n        var color = colorUtil.toCSSGradient(item.color);\n        var substituteObj = __assign(__assign({}, item), {\n          color: color\n        });\n        var domStr = substitute(itemTpl, substituteObj);\n        var itemDom = createDom(domStr);\n        listDom.appendChild(itemDom);\n      });\n      this.applyChildrenStyles(listDom, this.get('domStyles'));\n    }\n  };\n  Tooltip.prototype.clearItemDoms = function () {\n    if (this.get('listDom')) {\n      clearDom(this.get('listDom'));\n    }\n  };\n  Tooltip.prototype.clearCrosshairs = function () {\n    var xCrosshairDom = this.get('xCrosshairDom');\n    var yCrosshairDom = this.get('yCrosshairDom');\n    xCrosshairDom && xCrosshairDom.remove();\n    yCrosshairDom && yCrosshairDom.remove();\n    this.set('xCrosshairDom', null);\n    this.set('yCrosshairDom', null);\n  };\n  return Tooltip;\n}(HtmlComponent);\nexport default Tooltip;","map":{"version":3,"mappings":"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","names":["colorUtil","createDom","modifyCSS","each","hasKey","isElement","substitute","HtmlComponent","clearDom","regionToBBox","toPx","CssConst","TooltipTheme","getAlignPoint","hasOneKey","obj","keys","result","key","__extends","Tooltip","cfg","_super","getDefaultCfg","name","type","x","y","items","customContent","containerTpl","CONTAINER_CLASS","TITLE_CLASS","LIST_CLASS","itemTpl","LIST_ITEM_CLASS","MARKER_CLASS","NAME_CLASS","VALUE_CLASS","xCrosshairTpl","CROSSHAIR_X","yCrosshairTpl","CROSSHAIR_Y","title","showTitle","region","crosshairsRegion","containerClassName","crosshairs","offset","position","domStyles","defaultStyles","get","renderCustomContent","resetTitle","renderItems","resetPosition","clearCrosshairs","setTitle","clearItemDoms","container","getContainer","destroyed","set","visibility","setCrossHairsVisible","point","visible","display","xCrosshairDom","yCrosshairDom","initContainer","remove","getHtmlContentNode","appendChild","resetStyles","applyStyles","updateInner","cacheDoms","removeDom","getOffset","offsetX","offsetY","bbox","getBBox","height","limitBox","width","left","top","resetCrosshairs","node","parent","curContainer","parentNode","replaceChild","elem","titleDom","getElementsByClassName","listDom","text","innerText","crosshairBox","resetCrosshair","croshairDom","checkCrosshair","value","domName","tplName","constName","toUpperCase","styleName","applyStyle","item","color","toCSSGradient","substituteObj","domStr","itemDom","applyChildrenStyles"],"sources":["/home/iam/Documents/network/node_modules/@antv/component/src/tooltip/html.ts"],"sourcesContent":["import colorUtil from '@antv/color-util';\nimport { createDom, modifyCSS } from '@antv/dom-util';\nimport { each, hasKey, isElement, substitute } from '@antv/util';\nimport HtmlComponent from '../abstract/html-component';\nimport { Point, PointLocationCfg } from '../types';\nimport { TooltipCfg } from '../types';\nimport { clearDom, regionToBBox, toPx } from '../util/util';\nimport * as CssConst from './css-const';\nimport TooltipTheme from './html-theme';\n\nimport { ILocation } from '../interfaces';\nimport { getAlignPoint } from '../util/align';\n\nfunction hasOneKey(obj, keys) {\n  let result = false;\n  each(keys, (key) => {\n    if (hasKey(obj, key)) {\n      result = true;\n      return false;\n    }\n  });\n  return result;\n}\n\nclass Tooltip<T extends TooltipCfg = TooltipCfg> extends HtmlComponent implements ILocation<PointLocationCfg> {\n  public getDefaultCfg() {\n    const cfg = super.getDefaultCfg();\n    return {\n      ...cfg,\n      name: 'tooltip',\n      type: 'html',\n      x: 0,\n      y: 0,\n      items: [],\n      customContent: null,\n      containerTpl: `<div class=\"${CssConst.CONTAINER_CLASS}\"><div class=\"${CssConst.TITLE_CLASS}\"></div><ul class=\"${CssConst.LIST_CLASS}\"></ul></div>`,\n      itemTpl: `<li class=\"${CssConst.LIST_ITEM_CLASS}\" data-index={index}>\n          <span class=\"${CssConst.MARKER_CLASS}\" style=\"background:{color}\"></span>\n          <span class=\"${CssConst.NAME_CLASS}\">{name}</span>:\n          <span class=\"${CssConst.VALUE_CLASS}\">{value}</span>\n        </li>`,\n      xCrosshairTpl: `<div class=\"${CssConst.CROSSHAIR_X}\"></div>`,\n      yCrosshairTpl: `<div class=\"${CssConst.CROSSHAIR_Y}\"></div>`,\n      title: null,\n      showTitle: true,\n      /**\n       * tooltip 限制的区域\n       * @type {Region}\n       */\n      region: null,\n      // crosshair 的限制区域\n      crosshairsRegion: null,\n      containerClassName: CssConst.CONTAINER_CLASS,\n      // x, y, xy\n      crosshairs: null,\n      offset: 10,\n      position: 'right',\n      domStyles: null,\n      defaultStyles: TooltipTheme,\n    };\n  }\n\n  // tooltip 渲染时，渲染 title，items 和 corosshairs\n  public render() {\n    if (this.get('customContent')) {\n      this.renderCustomContent();\n    } else {\n      this.resetTitle();\n      this.renderItems();\n    }\n    // 绘制完成后，再定位\n    this.resetPosition();\n  }\n\n  // 复写清空函数，因为有模板的存在，所以默认的写法不合适\n  public clear() {\n    // 由于 crosshair 没有在 container 内，所以需要单独清理\n    this.clearCrosshairs();\n    this.setTitle(''); // 清空标题\n    this.clearItemDoms();\n  }\n\n  public show() {\n    const container = this.getContainer();\n    if (!container || this.destroyed) {\n      // 防止容器不存在或者被销毁时报错\n      return;\n    }\n    this.set('visible', true);\n    modifyCSS(container, {\n      visibility: 'visible',\n    });\n    this.setCrossHairsVisible(true);\n  }\n\n  public hide() {\n    const container = this.getContainer();\n    // relative: https://github.com/antvis/g2/issues/1221\n    if (!container || this.destroyed) {\n      return;\n    }\n    this.set('visible', false);\n    modifyCSS(container, {\n      visibility: 'hidden',\n    });\n    this.setCrossHairsVisible(false);\n  }\n\n  // 实现 IPointLocation 的接口\n  public getLocation() {\n    return { x: this.get('x'), y: this.get('y') };\n  }\n  // 实现 IPointLocation 的接口\n  public setLocation(point: Point) {\n    this.set('x', point.x);\n    this.set('y', point.y);\n    this.resetPosition();\n  }\n\n  public setCrossHairsVisible(visible) {\n    const display = visible ? '' : 'none';\n    const xCrosshairDom = this.get('xCrosshairDom');\n    const yCrosshairDom = this.get('yCrosshairDom');\n    xCrosshairDom &&\n      modifyCSS(xCrosshairDom, {\n        display,\n      });\n    yCrosshairDom &&\n      modifyCSS(yCrosshairDom, {\n        display,\n      });\n  }\n\n  // 如有 customContent 则根据 customContent 设置 container\n  protected initContainer() {\n    super.initContainer();\n    if (this.get('customContent')) {\n      if (this.get('container')) {\n        this.get('container').remove();\n      }\n      const container = this.getHtmlContentNode();\n      this.get('parent').appendChild(container);\n      this.set('container', container);\n      this.resetStyles();\n      this.applyStyles();\n    }\n  }\n\n  // 更新属性的同时，可能会引起 DOM 的变化，这里对可能引起 DOM 变化的场景做了处理\n  protected updateInner(cfg: Partial<T>) {\n    if (this.get('customContent')) {\n      this.renderCustomContent();\n    } else {\n      // 更新标题\n      if (hasOneKey(cfg, ['title', 'showTitle'])) {\n        this.resetTitle();\n      }\n      // 更新内容\n      if (hasKey(cfg, 'items')) {\n        this.renderItems();\n      }\n    }\n    super.updateInner(cfg);\n  }\n\n  protected initDom() {\n    this.cacheDoms();\n  }\n  // 清理 DOM\n  protected removeDom() {\n    super.removeDom();\n    this.clearCrosshairs();\n  }\n  // 调整位置\n  protected resetPosition() {\n    const x = this.get('x');\n    const y = this.get('y');\n    const offset = this.get('offset');\n    const { offsetX, offsetY } = this.getOffset();\n    const position = this.get('position');\n    const region = this.get('region');\n    const container = this.getContainer();\n    const bbox = this.getBBox();\n    const { width, height } = bbox;\n    let limitBox;\n    if (region) {\n      // 不限制位置\n      limitBox = regionToBBox(region);\n    }\n    const point = getAlignPoint(x, y, offset, width, height, position, limitBox);\n    modifyCSS(container, {\n      left: toPx(point.x + offsetX),\n      top: toPx(point.y + offsetY),\n    });\n    this.resetCrosshairs();\n  }\n\n  // 根据 customContent 渲染\n  private renderCustomContent() {\n    const node = this.getHtmlContentNode();\n    const parent: HTMLElement = this.get('parent');\n    const curContainer: HTMLElement = this.get('container');\n    if (curContainer && curContainer.parentNode === parent) {\n      parent.replaceChild(node, curContainer);\n    } else {\n      parent.appendChild(node);\n    }\n    this.set('container', node);\n    this.resetStyles();\n    this.applyStyles();\n  }\n\n  private getHtmlContentNode() {\n    let node: HTMLElement | undefined;\n    const customContent = this.get('customContent');\n    if (customContent) {\n      const elem = customContent(this.get('title'), this.get('items'));\n      if (isElement(elem)) {\n        node = elem as HTMLElement;\n      } else {\n        node = createDom(elem);\n      }\n    }\n    return node;\n  }\n\n  // 缓存模板设置的各种 DOM\n  private cacheDoms() {\n    const container = this.getContainer();\n    const titleDom = container.getElementsByClassName(CssConst.TITLE_CLASS)[0];\n    const listDom = container.getElementsByClassName(CssConst.LIST_CLASS)[0];\n    this.set('titleDom', titleDom);\n    this.set('listDom', listDom);\n  }\n\n  // 重置 title\n  private resetTitle() {\n    const title = this.get('title');\n    const showTitle = this.get('showTitle');\n    if (showTitle && title) {\n      this.setTitle(title);\n    } else {\n      this.setTitle('');\n    }\n  }\n  // 设置 title 文本\n  private setTitle(text) {\n    const titleDom = this.get('titleDom');\n    if (titleDom) {\n      titleDom.innerText = text;\n    }\n  }\n  // 终止 crosshair\n  private resetCrosshairs() {\n    const crosshairsRegion = this.get('crosshairsRegion');\n    const crosshairs = this.get('crosshairs');\n    if (!crosshairsRegion || !crosshairs) {\n      // 不显示 crosshair，都移除，没有设定 region 也都移除掉\n      this.clearCrosshairs();\n    } else {\n      const crosshairBox = regionToBBox(crosshairsRegion);\n      const xCrosshairDom = this.get('xCrosshairDom');\n      const yCrosshairDom = this.get('yCrosshairDom');\n      if (crosshairs === 'x') {\n        this.resetCrosshair('x', crosshairBox);\n        // 仅显示 x 的 crosshair，y 移除\n        if (yCrosshairDom) {\n          yCrosshairDom.remove();\n          this.set('yCrosshairDom', null);\n        }\n      } else if (crosshairs === 'y') {\n        this.resetCrosshair('y', crosshairBox);\n        // 仅显示 y 的 crosshair，x 移除\n        if (xCrosshairDom) {\n          xCrosshairDom.remove();\n          this.set('xCrosshairDom', null);\n        }\n      } else {\n        this.resetCrosshair('x', crosshairBox);\n        this.resetCrosshair('y', crosshairBox);\n      }\n      this.setCrossHairsVisible(this.get('visible'));\n    }\n  }\n  // 设定 crosshair 的位置，需要区分 x,y\n  private resetCrosshair(name: string, bbox) {\n    const croshairDom = this.checkCrosshair(name);\n    const value = this.get(name);\n    if (name === 'x') {\n      modifyCSS(croshairDom, {\n        left: toPx(value),\n        top: toPx(bbox.y),\n        height: toPx(bbox.height),\n      });\n    } else {\n      modifyCSS(croshairDom, {\n        top: toPx(value),\n        left: toPx(bbox.x),\n        width: toPx(bbox.width),\n      });\n    }\n  }\n\n  // 如果 crosshair 对应的 dom 不存在，则创建\n  private checkCrosshair(name: string) {\n    const domName = `${name}CrosshairDom`;\n    const tplName = `${name}CrosshairTpl`;\n    const constName = `CROSSHAIR_${name.toUpperCase()}`;\n    const styleName = CssConst[constName];\n    let croshairDom = this.get(domName);\n    const parent = this.get('parent') as HTMLElement;\n    if (!croshairDom) {\n      croshairDom = createDom(this.get(tplName)); // 创建\n      this.applyStyle(styleName, croshairDom); // 设置初始样式\n      parent.appendChild(croshairDom); // 添加到跟 tooltip 同级的目录下\n      this.set(domName, croshairDom);\n    }\n    return croshairDom;\n  }\n\n  private renderItems() {\n    this.clearItemDoms();\n    const items = this.get('items');\n    const itemTpl = this.get('itemTpl');\n    const listDom = this.get('listDom');\n    if (listDom) {\n      each(items, (item) => {\n        const color = colorUtil.toCSSGradient(item.color);\n        const substituteObj = {\n          ...item,\n          color,\n        };\n\n        const domStr = substitute(itemTpl, substituteObj);\n        const itemDom = createDom(domStr);\n        listDom.appendChild(itemDom);\n      });\n      this.applyChildrenStyles(listDom, this.get('domStyles'));\n    }\n  }\n\n  private clearItemDoms() {\n    if (this.get('listDom')) {\n      clearDom(this.get('listDom'));\n    }\n  }\n\n  private clearCrosshairs() {\n    const xCrosshairDom = this.get('xCrosshairDom');\n    const yCrosshairDom = this.get('yCrosshairDom');\n    xCrosshairDom && xCrosshairDom.remove();\n    yCrosshairDom && yCrosshairDom.remove();\n    this.set('xCrosshairDom', null);\n    this.set('yCrosshairDom', null);\n  }\n}\n\nexport default Tooltip;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}