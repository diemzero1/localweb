{"ast":null,"code":"import _classCallCheck from \"/home/iam/Documents/LocalWeb-master/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/iam/Documents/LocalWeb-master/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/iam/Documents/LocalWeb-master/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/iam/Documents/LocalWeb-master/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { checkRange } from '../util';\nimport BaseView from './base';\nvar MatrixSubView = /*#__PURE__*/function (_BaseView) {\n  _inherits(MatrixSubView, _BaseView);\n  var _super = _createSuper(MatrixSubView);\n  function MatrixSubView(matrix, startRow, endRow, startColumn, endColumn) {\n    var _this;\n    _classCallCheck(this, MatrixSubView);\n    checkRange(matrix, startRow, endRow, startColumn, endColumn);\n    _this = _super.call(this, matrix, endRow - startRow + 1, endColumn - startColumn + 1);\n    _this.startRow = startRow;\n    _this.startColumn = startColumn;\n    return _this;\n  }\n  _createClass(MatrixSubView, [{\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, value) {\n      this.matrix.set(this.startRow + rowIndex, this.startColumn + columnIndex, value);\n      return this;\n    }\n  }, {\n    key: \"get\",\n    value: function get(rowIndex, columnIndex) {\n      return this.matrix.get(this.startRow + rowIndex, this.startColumn + columnIndex);\n    }\n  }]);\n  return MatrixSubView;\n}(BaseView);\nexport { MatrixSubView as default };","map":{"version":3,"names":["checkRange","BaseView","MatrixSubView","matrix","startRow","endRow","startColumn","endColumn","rowIndex","columnIndex","value","set","get"],"sources":["/home/iam/Documents/LocalWeb-master/node_modules/ml-matrix/src/views/sub.js"],"sourcesContent":["import { checkRange } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixSubView extends BaseView {\n  constructor(matrix, startRow, endRow, startColumn, endColumn) {\n    checkRange(matrix, startRow, endRow, startColumn, endColumn);\n    super(matrix, endRow - startRow + 1, endColumn - startColumn + 1);\n    this.startRow = startRow;\n    this.startColumn = startColumn;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(\n      this.startRow + rowIndex,\n      this.startColumn + columnIndex,\n      value,\n    );\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(\n      this.startRow + rowIndex,\n      this.startColumn + columnIndex,\n    );\n  }\n}\n"],"mappings":";;;;AAAA,SAASA,UAAU,QAAQ,SAAS;AAEpC,OAAOC,QAAQ,MAAM,QAAQ;AAAC,IAETC,aAAa;EAAA;EAAA;EAChC,uBAAYC,MAAM,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,WAAW,EAAEC,SAAS,EAAE;IAAA;IAAA;IAC5DP,UAAU,CAACG,MAAM,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,WAAW,EAAEC,SAAS,CAAC;IAC5D,0BAAMJ,MAAM,EAAEE,MAAM,GAAGD,QAAQ,GAAG,CAAC,EAAEG,SAAS,GAAGD,WAAW,GAAG,CAAC;IAChE,MAAKF,QAAQ,GAAGA,QAAQ;IACxB,MAAKE,WAAW,GAAGA,WAAW;IAAC;EACjC;EAAC;IAAA;IAAA,OAED,aAAIE,QAAQ,EAAEC,WAAW,EAAEC,KAAK,EAAE;MAChC,IAAI,CAACP,MAAM,CAACQ,GAAG,CACb,IAAI,CAACP,QAAQ,GAAGI,QAAQ,EACxB,IAAI,CAACF,WAAW,GAAGG,WAAW,EAC9BC,KAAK,CACN;MACD,OAAO,IAAI;IACb;EAAC;IAAA;IAAA,OAED,aAAIF,QAAQ,EAAEC,WAAW,EAAE;MACzB,OAAO,IAAI,CAACN,MAAM,CAACS,GAAG,CACpB,IAAI,CAACR,QAAQ,GAAGI,QAAQ,EACxB,IAAI,CAACF,WAAW,GAAGG,WAAW,CAC/B;IACH;EAAC;EAAA;AAAA,EAtBwCR,QAAQ;AAAA,SAA9BC,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}