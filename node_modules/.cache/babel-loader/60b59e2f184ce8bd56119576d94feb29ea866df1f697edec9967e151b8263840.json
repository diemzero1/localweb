{"ast":null,"code":"/**\n * 类似 lodash.flow 的方法\n * @param flows\n */\nexport function flow() {\n  var flows = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    flows[_i] = arguments[_i];\n  }\n  return function (param) {\n    return flows.reduce(function (result, f) {\n      return f(result);\n    }, param);\n  };\n}","map":{"version":3,"mappings":"AAEA;;;;AAIA,OAAM,SAAUA,IAAI;EAAI;OAAA,UAA2B,EAA3BC,qBAA2B,EAA3BA,IAA2B;IAA3BC;;EACtB,OAAO,UAACC,KAAQ;IACd,OAAOD,KAAK,CAACE,MAAM,CAAC,UAACC,MAAS,EAAEC,CAAkB;MAChD,OAAOA,CAAC,CAACD,MAAM,CAAC;IAClB,CAAC,EAAEF,KAAK,CAAC;EACX,CAAC;AACH","names":["flow","_i","flows","param","reduce","result","f"],"sources":["/home/iam/Documents/network/node_modules/@antv/g2plot/src/utils/flow.ts"],"sourcesContent":["type FlowFunction<P> = (param: P) => P;\n\n/**\n * 类似 lodash.flow 的方法\n * @param flows\n */\nexport function flow<P>(...flows: FlowFunction<P>[]): FlowFunction<P> {\n  return (param: P) => {\n    return flows.reduce((result: P, f: FlowFunction<P>) => {\n      return f(result);\n    }, param);\n  };\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}