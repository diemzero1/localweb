{"ast":null,"code":"import { assign } from '@antv/util';\n/**\n * Action 的基类\n */\nvar Action = /** @class */function () {\n  function Action(context, cfg) {\n    this.context = context;\n    this.cfg = cfg;\n    context.addAction(this);\n  }\n  /**\n   * 设置配置项传入的值\n   * @param cfg\n   */\n  Action.prototype.applyCfg = function (cfg) {\n    assign(this, cfg);\n  };\n  /**\n   * Inits action，提供给子类用于继承\n   */\n  Action.prototype.init = function () {\n    this.applyCfg(this.cfg);\n  };\n  /**\n   * Destroys action\n   */\n  Action.prototype.destroy = function () {\n    // 移除 action\n    this.context.removeAction(this);\n    // 清空\n    this.context = null;\n  };\n  return Action;\n}();\nexport default Action;","map":{"version":3,"mappings":"AAAA,SAASA,MAAM,QAAQ,YAAY;AAGnC;;;AAGA;EAUE,gBAAYC,OAA4B,EAAEC,GAAO;IAC/C,IAAI,CAACD,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,GAAG,GAAGA,GAAG;IACdD,OAAO,CAACE,SAAS,CAAC,IAAI,CAAC;EACzB;EAEA;;;;EAIUC,yBAAQ,GAAlB,UAAmBF,GAAG;IACpBF,MAAM,CAAC,IAAI,EAAEE,GAAG,CAAC;EACnB,CAAC;EAED;;;EAGOE,qBAAI,GAAX;IACE,IAAI,CAACC,QAAQ,CAAC,IAAI,CAACH,GAAG,CAAC;EACzB,CAAC;EAED;;;EAGOE,wBAAO,GAAd;IACE;IACA,IAAI,CAACH,OAAO,CAACK,YAAY,CAAC,IAAI,CAAC;IAC/B;IACA,IAAI,CAACL,OAAO,GAAG,IAAI;EACrB,CAAC;EACH,aAAC;AAAD,CAAC,EAxCD;AA0CA,eAAeG,MAAM","names":["assign","context","cfg","addAction","Action","applyCfg","removeAction"],"sources":["/home/iam/Documents/LocalWeb-master/node_modules/@antv/g2/src/interaction/action/base.ts"],"sourcesContent":["import { assign } from '@antv/util';\nimport { IAction, IInteractionContext, LooseObject } from '../../interface';\n\n/**\n * Action 的基类\n */\nabstract class Action<T = LooseObject> implements IAction {\n  /** Action 名字 */\n  public name;\n  /** 上下文对象 */\n  public context: IInteractionContext;\n  /** Action 配置 */\n  protected cfg: T;\n  /** 配置项的字段，自动负值到 this 上 */\n  protected cfgFields: string[];\n\n  constructor(context: IInteractionContext, cfg?: T) {\n    this.context = context;\n    this.cfg = cfg;\n    context.addAction(this);\n  }\n\n  /**\n   * 设置配置项传入的值\n   * @param cfg\n   */\n  protected applyCfg(cfg) {\n    assign(this, cfg);\n  }\n\n  /**\n   * Inits action，提供给子类用于继承\n   */\n  public init() {\n    this.applyCfg(this.cfg);\n  }\n\n  /**\n   * Destroys action\n   */\n  public destroy() {\n    // 移除 action\n    this.context.removeAction(this);\n    // 清空\n    this.context = null;\n  }\n}\n\nexport default Action;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}