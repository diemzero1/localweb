{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { each } from '@antv/util';\nimport { animation, annotation, interaction, theme, tooltip } from '../../adaptor/common';\nimport { geometry as geometryAdaptor } from '../../adaptor/geometries/base';\nimport { AXIS_META_CONFIG_KEYS } from '../../constant';\nimport { PLOT_CONTAINER_OPTIONS } from '../../core/plot';\nimport { deepAssign, flow, pick } from '../../utils';\nimport { execPlotAdaptor } from './utils';\n/**\n * geometry 处理\n * @param params\n */\nfunction multiView(params) {\n  var chart = params.chart,\n    options = params.options;\n  var views = options.views,\n    legend = options.legend;\n  each(views, function (v) {\n    var region = v.region,\n      data = v.data,\n      meta = v.meta,\n      axes = v.axes,\n      coordinate = v.coordinate,\n      interactions = v.interactions,\n      annotations = v.annotations,\n      tooltip = v.tooltip,\n      geometries = v.geometries;\n    // 1. 创建 view\n    var viewOfG2 = chart.createView({\n      region: region\n    });\n    // 2. data\n    viewOfG2.data(data);\n    // 3. meta\n    var scales = {};\n    if (axes) {\n      each(axes, function (axis, field) {\n        scales[field] = pick(axis, AXIS_META_CONFIG_KEYS);\n      });\n    }\n    scales = deepAssign({}, meta, scales);\n    viewOfG2.scale(scales);\n    // 4. x y axis\n    if (!axes) {\n      viewOfG2.axis(false);\n    } else {\n      each(axes, function (axis, field) {\n        viewOfG2.axis(field, axis);\n      });\n    }\n    // 5. coordinate\n    viewOfG2.coordinate(coordinate);\n    // 6. geometry\n    each(geometries, function (geometry) {\n      var ext = geometryAdaptor({\n        chart: viewOfG2,\n        options: geometry\n      }).ext;\n      // adjust\n      var adjust = geometry.adjust;\n      if (adjust) {\n        ext.geometry.adjust(adjust);\n      }\n    });\n    // 7. interactions\n    each(interactions, function (interaction) {\n      if (interaction.enable === false) {\n        viewOfG2.removeInteraction(interaction.type);\n      } else {\n        viewOfG2.interaction(interaction.type, interaction.cfg);\n      }\n    });\n    // 8. annotations\n    each(annotations, function (annotation) {\n      viewOfG2.annotation()[annotation.type](__assign({}, annotation));\n    });\n    // 9. animation (先做动画)\n    if (typeof v.animation === 'boolean') {\n      viewOfG2.animate(false);\n    } else {\n      viewOfG2.animate(true);\n      // 9.1 所有的 Geometry 都使用同一动画（各个图形如有区别，todo 自行覆盖）\n      each(viewOfG2.geometries, function (g) {\n        g.animate(v.animation);\n      });\n    }\n    if (tooltip) {\n      // 10. tooltip\n      viewOfG2.interaction('tooltip');\n      viewOfG2.tooltip(tooltip);\n    }\n  });\n  // legend\n  if (!legend) {\n    chart.legend(false);\n  } else {\n    each(legend, function (l, field) {\n      chart.legend(field, l);\n    });\n  }\n  // tooltip\n  chart.tooltip(options.tooltip);\n  return params;\n}\n/**\n * 支持嵌套使用 g2plot 内置图表\n * @param params\n */\nfunction multiPlot(params) {\n  var chart = params.chart,\n    options = params.options;\n  var plots = options.plots,\n    _a = options.data,\n    data = _a === void 0 ? [] : _a;\n  each(plots, function (plot) {\n    var type = plot.type,\n      region = plot.region,\n      _a = plot.options,\n      options = _a === void 0 ? {} : _a,\n      top = plot.top;\n    var tooltip = options.tooltip;\n    if (top) {\n      execPlotAdaptor(type, chart, __assign(__assign({}, options), {\n        data: data\n      }));\n      return;\n    }\n    var viewOfG2 = chart.createView(__assign({\n      region: region\n    }, pick(options, PLOT_CONTAINER_OPTIONS)));\n    if (tooltip) {\n      // 配置 tooltip 交互\n      viewOfG2.interaction('tooltip');\n    }\n    execPlotAdaptor(type, viewOfG2, __assign({\n      data: data\n    }, options));\n  });\n  return params;\n}\n/**\n * 处理缩略轴的 adaptor (mix)\n * @param params\n */\nexport function slider(params) {\n  var chart = params.chart,\n    options = params.options;\n  chart.option('slider', options.slider);\n  return params;\n}\n/**\n * 图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params) {\n  return flow(animation,\n  // 多 view 的图，动画配置放到最前面\n  multiView, multiPlot, interaction, animation, theme, tooltip, slider, annotation()\n  // ... 其他的 adaptor flow\n  )(params);\n}","map":{"version":3,"mappings":"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","names":["each","animation","annotation","interaction","theme","tooltip","geometry","geometryAdaptor","AXIS_META_CONFIG_KEYS","PLOT_CONTAINER_OPTIONS","deepAssign","flow","pick","execPlotAdaptor","multiView","params","options","legend","views","v","data","meta","axes","coordinate","interactions","annotations","geometries","viewOfG2","chart","createView","region","scales","axis","field","scale","adjust","ext","enable","removeInteraction","type","cfg","animate","g","l","multiPlot","_a","plots","plot","top","slider","option","adaptor"],"sources":["/home/iam/Documents/LocalWeb-master/node_modules/@antv/g2plot/src/plots/mix/adaptor.ts"],"sourcesContent":["import { Geometry } from '@antv/g2';\nimport { each } from '@antv/util';\nimport { animation, annotation, interaction, theme, tooltip } from '../../adaptor/common';\nimport { geometry as geometryAdaptor } from '../../adaptor/geometries/base';\nimport { AXIS_META_CONFIG_KEYS } from '../../constant';\nimport { Params } from '../../core/adaptor';\nimport { PLOT_CONTAINER_OPTIONS } from '../../core/plot';\nimport { Axis } from '../../types/axis';\nimport { Interaction } from '../../types/interaction';\nimport { Legend } from '../../types/legend';\nimport { deepAssign, flow, pick } from '../../utils';\nimport { IGeometry, IView, MixOptions } from './types';\nimport { execPlotAdaptor } from './utils';\n\n/**\n * geometry 处理\n * @param params\n */\nfunction multiView(params: Params<MixOptions>): Params<MixOptions> {\n  const { chart, options } = params;\n  const { views, legend } = options;\n\n  each(views, (v: IView) => {\n    const { region, data, meta, axes, coordinate, interactions, annotations, tooltip, geometries } = v;\n\n    // 1. 创建 view\n    const viewOfG2 = chart.createView({\n      region,\n    });\n\n    // 2. data\n    viewOfG2.data(data);\n\n    // 3. meta\n    let scales: Record<string, any> = {};\n    if (axes) {\n      each(axes, (axis: Axis, field: string) => {\n        scales[field] = pick(axis, AXIS_META_CONFIG_KEYS);\n      });\n    }\n\n    scales = deepAssign({}, meta, scales);\n    viewOfG2.scale(scales);\n\n    // 4. x y axis\n    if (!axes) {\n      viewOfG2.axis(false);\n    } else {\n      each(axes, (axis: Axis, field: string) => {\n        viewOfG2.axis(field, axis);\n      });\n    }\n\n    // 5. coordinate\n    viewOfG2.coordinate(coordinate);\n\n    // 6. geometry\n    each(geometries, (geometry: IGeometry) => {\n      const { ext } = geometryAdaptor({\n        chart: viewOfG2,\n        options: geometry,\n      });\n\n      // adjust\n      const { adjust } = geometry;\n      if (adjust) {\n        ext.geometry.adjust(adjust);\n      }\n    });\n\n    // 7. interactions\n    each(interactions, (interaction: Interaction) => {\n      if (interaction.enable === false) {\n        viewOfG2.removeInteraction(interaction.type);\n      } else {\n        viewOfG2.interaction(interaction.type, interaction.cfg);\n      }\n    });\n\n    // 8. annotations\n    each(annotations, (annotation) => {\n      viewOfG2.annotation()[annotation.type]({\n        ...annotation,\n      });\n    });\n\n    // 9. animation (先做动画)\n    if (typeof v.animation === 'boolean') {\n      viewOfG2.animate(false);\n    } else {\n      viewOfG2.animate(true);\n      // 9.1 所有的 Geometry 都使用同一动画（各个图形如有区别，todo 自行覆盖）\n      each(viewOfG2.geometries, (g: Geometry) => {\n        g.animate(v.animation);\n      });\n    }\n\n    if (tooltip) {\n      // 10. tooltip\n      viewOfG2.interaction('tooltip');\n      viewOfG2.tooltip(tooltip);\n    }\n  });\n\n  // legend\n  if (!legend) {\n    chart.legend(false);\n  } else {\n    each(legend, (l: Legend, field: string) => {\n      chart.legend(field, l);\n    });\n  }\n\n  // tooltip\n  chart.tooltip(options.tooltip);\n  return params;\n}\n\n/**\n * 支持嵌套使用 g2plot 内置图表\n * @param params\n */\nfunction multiPlot(params: Params<MixOptions>): Params<MixOptions> {\n  const { chart, options } = params;\n  const { plots, data = [] } = options;\n\n  each(plots, (plot) => {\n    const { type, region, options = {}, top } = plot;\n    const { tooltip } = options;\n\n    if (top) {\n      execPlotAdaptor(type, chart, { ...options, data });\n      return;\n    }\n\n    const viewOfG2 = chart.createView({ region, ...pick(options, PLOT_CONTAINER_OPTIONS) });\n    if (tooltip) {\n      // 配置 tooltip 交互\n      viewOfG2.interaction('tooltip');\n    }\n\n    execPlotAdaptor(type, viewOfG2, { data, ...options });\n  });\n\n  return params;\n}\n\n/**\n * 处理缩略轴的 adaptor (mix)\n * @param params\n */\nexport function slider(params: Params<MixOptions>): Params<MixOptions> {\n  const { chart, options } = params;\n\n  chart.option('slider', options.slider);\n\n  return params;\n}\n\n/**\n * 图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<MixOptions>) {\n  return flow(\n    animation, // 多 view 的图，动画配置放到最前面\n    multiView,\n    multiPlot,\n    interaction,\n    animation,\n    theme,\n    tooltip,\n    slider,\n    annotation()\n    // ... 其他的 adaptor flow\n  )(params);\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}