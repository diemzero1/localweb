{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar Quad = /** @class */function () {\n  function Quad(params) {\n    /**\n     * the center position of this quad\n     * @type  {number}\n     */\n    this.xmid = params.xmid;\n    /**\n     * the center position of this quad\n     * @type  {number}\n     */\n    this.ymid = params.ymid;\n    /**\n     * the length of this quad\n     * @type  {number}\n     */\n    this.length = params.length;\n    /**\n     * the mass center of this quad\n     * @type  {number}\n     */\n    this.massCenter = params.massCenter || [0, 0];\n    /**\n     * the mass of this quad\n     * @type  {number}\n     */\n    this.mass = params.mass || 1;\n  }\n  Quad.prototype.getLength = function () {\n    return this.length;\n  };\n  Quad.prototype.contains = function (x, y) {\n    var halfLen = this.length / 2;\n    return x <= this.xmid + halfLen && x >= this.xmid - halfLen && y <= this.ymid + halfLen && y >= this.ymid - halfLen;\n  };\n  // northwest quadrant\n  // tslint:disable-next-line\n  Quad.prototype.NW = function () {\n    var x = this.xmid - this.length / 4;\n    var y = this.ymid + this.length / 4;\n    var len = this.length / 2;\n    var params = {\n      xmid: x,\n      ymid: y,\n      length: len\n    };\n    var NW = new Quad(params);\n    return NW;\n  };\n  // northeast\n  // tslint:disable-next-line\n  Quad.prototype.NE = function () {\n    var x = this.xmid + this.length / 4;\n    var y = this.ymid + this.length / 4;\n    var len = this.length / 2;\n    var params = {\n      xmid: x,\n      ymid: y,\n      length: len\n    };\n    var NE = new Quad(params);\n    return NE;\n  };\n  // southwest\n  // tslint:disable-next-line\n  Quad.prototype.SW = function () {\n    var x = this.xmid - this.length / 4;\n    var y = this.ymid - this.length / 4;\n    var len = this.length / 2;\n    var params = {\n      xmid: x,\n      ymid: y,\n      length: len\n    };\n    var SW = new Quad(params);\n    return SW;\n  };\n  // southeast\n  // tslint:disable-next-line\n  Quad.prototype.SE = function () {\n    var x = this.xmid + this.length / 4;\n    var y = this.ymid - this.length / 4;\n    var len = this.length / 2;\n    var params = {\n      xmid: x,\n      ymid: y,\n      length: len\n    };\n    var SE = new Quad(params);\n    return SE;\n  };\n  return Quad;\n}();\nexports.default = Quad;","map":{"version":3,"mappings":"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","names":["params","xmid","ymid","length","massCenter","mass","Quad","x","y","halfLen","len","NW","NE","SW","SE"],"sources":["/home/iam/Documents/network/node_modules/@antv/layout/src/layout/forceAtlas2/quad.ts"],"sourcesContent":["import { PointTuple } from \"../types\";\n\n/**\n * @fileOverview quad\n * @author shiwu.wyy@antfin.com\n */\n\ntype QuadProps = {\n  xmid: number;\n  ymid: number;\n  length: number;\n  massCenter?: PointTuple;\n  mass?: number;\n};\n\nexport default class Quad {\n  public xmid: number;\n  public ymid: number;\n  public length: number;\n  public massCenter: PointTuple;\n  public mass: number;\n  constructor(params: QuadProps) {\n    /**\n     * the center position of this quad\n     * @type  {number}\n     */\n    this.xmid = params.xmid;\n    /**\n     * the center position of this quad\n     * @type  {number}\n     */\n    this.ymid = params.ymid;\n    /**\n     * the length of this quad\n     * @type  {number}\n     */\n    this.length = params.length;\n    /**\n     * the mass center of this quad\n     * @type  {number}\n     */\n    this.massCenter = params.massCenter || [0, 0];\n    /**\n     * the mass of this quad\n     * @type  {number}\n     */\n    this.mass = params.mass || 1;\n  }\n  getLength() {\n    return this.length;\n  }\n  contains(x: number, y: number) {\n    const halfLen = this.length / 2;\n    return (x <= this.xmid + halfLen &&\n      x >= this.xmid - halfLen &&\n      y <= this.ymid + halfLen &&\n      y >= this.ymid - halfLen);\n  }\n  // northwest quadrant\n  // tslint:disable-next-line\n  NW() {\n    const x = this.xmid - this.length / 4;\n    const y = this.ymid + this.length / 4;\n    const len = this.length / 2;\n    const params: QuadProps = {\n      xmid: x,\n      ymid: y,\n      length: len\n    };\n    const NW = new Quad(params);\n    return NW;\n  }\n  // northeast\n  // tslint:disable-next-line\n  NE() {\n    const x = this.xmid + this.length / 4;\n    const y = this.ymid + this.length / 4;\n    const len = this.length / 2;\n    const params = {\n      xmid: x,\n      ymid: y,\n      length: len\n    };\n    const NE = new Quad(params);\n    return NE;\n  }\n  // southwest\n  // tslint:disable-next-line\n  SW() {\n    const x = this.xmid - this.length / 4;\n    const y = this.ymid - this.length / 4;\n    const len = this.length / 2;\n    const params = {\n      xmid: x,\n      ymid: y,\n      length: len\n    };\n    const SW = new Quad(params);\n    return SW;\n  }\n  // southeast\n  // tslint:disable-next-line\n  SE() {\n    const x = this.xmid + this.length / 4;\n    const y = this.ymid - this.length / 4;\n    const len = this.length / 2;\n    const params = {\n      xmid: x,\n      ymid: y,\n      length: len\n    };\n    const SE = new Quad(params);\n    return SE;\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}