{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { sessionActions, sessionSelector } from '../redux/reducer/sessionSlice';\nimport ubusApi from '../service/api/ubus-api';\n\n/**\n * Headless component keeping session alive by periodically calling ubus\n * @param {*} props\n * @returns\n */\nexport const SessionKeepAlive = props => {\n  _s();\n  const {\n    interval = 10\n  } = props;\n  const dispatch = useDispatch();\n  const {\n    session\n  } = useSelector(sessionSelector);\n  const beatFunc = async () => {\n    dispatch(sessionActions.keepAliveBeat());\n    updateSystemInfo();\n  };\n  const updateSystemInfo = async () => {\n    const result = await ubusApi.systemInfo();\n    if ((result === null || result === void 0 ? void 0 : result.code) === 0) {\n      dispatch(sessionActions.updateSystemInfo(result === null || result === void 0 ? void 0 : result.data));\n    }\n  };\n  React.useEffect(() => {\n    const handle = setInterval(beatFunc, interval * 1000);\n    return () => clearInterval(handle);\n  }, []);\n  React.useEffect(() => {\n    beatFunc();\n  }, [session]);\n  return null;\n};\n_s(SessionKeepAlive, \"wBQIwBeh5hakcRGwjDM5nzz3sws=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = SessionKeepAlive;\nvar _c;\n$RefreshReg$(_c, \"SessionKeepAlive\");","map":{"version":3,"names":["React","useDispatch","useSelector","sessionActions","sessionSelector","ubusApi","SessionKeepAlive","props","interval","dispatch","session","beatFunc","keepAliveBeat","updateSystemInfo","result","systemInfo","code","data","useEffect","handle","setInterval","clearInterval"],"sources":["/home/iam/Documents/LocalWeb-master/src/components/keep-alive.tsx"],"sourcesContent":["import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { sessionActions, sessionSelector } from '../redux/reducer/sessionSlice'\nimport ubusApi from '../service/api/ubus-api'\n\n/**\n * Headless component keeping session alive by periodically calling ubus\n * @param {*} props\n * @returns\n */\nexport const SessionKeepAlive = (props:any) => {\n  const { interval = 10 } = props\n  const dispatch = useDispatch()\n  const { session } = useSelector(sessionSelector)\n  const beatFunc = async () => {\n    dispatch(sessionActions.keepAliveBeat())\n    updateSystemInfo()\n  }\n  const updateSystemInfo = async () => {\n    const result = await ubusApi.systemInfo()\n    if (result?.code === 0) {\n      dispatch(sessionActions.updateSystemInfo(result?.data))\n    }\n  }\n  React.useEffect(() => {\n    const handle = setInterval(beatFunc, interval * 1000)\n    return () => clearInterval(handle)\n  }, [])\n\n  React.useEffect(() => {\n    beatFunc()\n  }, [session])\n  return null\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,cAAc,EAAEC,eAAe,QAAQ,+BAA+B;AAC/E,OAAOC,OAAO,MAAM,yBAAyB;;AAE7C;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,gBAAgB,GAAIC,KAAS,IAAK;EAAA;EAC7C,MAAM;IAAEC,QAAQ,GAAG;EAAG,CAAC,GAAGD,KAAK;EAC/B,MAAME,QAAQ,GAAGR,WAAW,EAAE;EAC9B,MAAM;IAAES;EAAQ,CAAC,GAAGR,WAAW,CAACE,eAAe,CAAC;EAChD,MAAMO,QAAQ,GAAG,YAAY;IAC3BF,QAAQ,CAACN,cAAc,CAACS,aAAa,EAAE,CAAC;IACxCC,gBAAgB,EAAE;EACpB,CAAC;EACD,MAAMA,gBAAgB,GAAG,YAAY;IACnC,MAAMC,MAAM,GAAG,MAAMT,OAAO,CAACU,UAAU,EAAE;IACzC,IAAI,CAAAD,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEE,IAAI,MAAK,CAAC,EAAE;MACtBP,QAAQ,CAACN,cAAc,CAACU,gBAAgB,CAACC,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEG,IAAI,CAAC,CAAC;IACzD;EACF,CAAC;EACDjB,KAAK,CAACkB,SAAS,CAAC,MAAM;IACpB,MAAMC,MAAM,GAAGC,WAAW,CAACT,QAAQ,EAAEH,QAAQ,GAAG,IAAI,CAAC;IACrD,OAAO,MAAMa,aAAa,CAACF,MAAM,CAAC;EACpC,CAAC,EAAE,EAAE,CAAC;EAENnB,KAAK,CAACkB,SAAS,CAAC,MAAM;IACpBP,QAAQ,EAAE;EACZ,CAAC,EAAE,CAACD,OAAO,CAAC,CAAC;EACb,OAAO,IAAI;AACb,CAAC;AAAA,GAvBYJ,gBAAgB;EAAA,QAEVL,WAAW,EACRC,WAAW;AAAA;AAAA,KAHpBI,gBAAgB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}