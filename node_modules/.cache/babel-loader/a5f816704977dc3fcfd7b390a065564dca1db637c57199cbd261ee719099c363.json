{"ast":null,"code":"var _jsxFileName = \"/home/iam/Documents/network/src/components/antd/network/vlan/table.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons';\nimport { Table, Space, Button, Popconfirm, message } from 'antd';\nimport React from 'react';\nimport ubusApi from 'service/api/ubus-api';\nimport { useTranslation } from \"react-i18next\";\nimport \"../../../../translations/i18n\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const VlanTable = props => {\n  _s();\n  const {\n    onEditItem,\n    onDeleteItem,\n    tableData,\n    hihi\n  } = props;\n  const {\n    t\n  } = useTranslation();\n  const abc = t('edit');\n  const def = t('delete');\n  const refreshPage = () => {\n    window.location.reload();\n  };\n  const confirmDeleteGroup = async group => {\n    // console.log(\"data1: \",))\n    // const vlan = group.dev.map((item:any) => {item.toString()})\n    const vlan = await ubusApi.config_network_vlan(\"access\", \"del\", group.id, group.name, group.vid, group.dev);\n    // console.log(\"data1: \",group)\n    const key = 'updatable';\n    message.loading({\n      content: t('loading'),\n      key\n    });\n    setTimeout(() => {\n      message.success({\n        content: t('success'),\n        key,\n        duration: 2\n      });\n    }, 1000);\n    setTimeout(() => {\n      window.location.reload();\n    }, 1500);\n  };\n  const columns = [{\n    title: 'VLAN ID',\n    key: 'vid',\n    dataIndex: 'vid'\n  }, {\n    title: t('name'),\n    key: 'name',\n    dataIndex: 'name'\n  }, {\n    title: t('interface'),\n    key: 'dev',\n    dataIndex: 'dev',\n    render: dev => dev.join(' ')\n  }, {\n    title: t('action'),\n    key: 'action',\n    render: (_, record) => {\n      if (record.admin_id <= 0) {\n        return null;\n      }\n      return /*#__PURE__*/_jsxDEV(Space, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          icon: /*#__PURE__*/_jsxDEV(EditOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 39\n          }, this),\n          title: abc,\n          onClick: () => onEditItem(record)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Popconfirm, {\n          placement: \"top\",\n          title: t('delete_cf'),\n          onConfirm: () => confirmDeleteGroup(record),\n          okText: t('yes'),\n          cancelText: t('no'),\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            icon: /*#__PURE__*/_jsxDEV(DeleteOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 43\n            }, this),\n            danger: true,\n            type: \"primary\",\n            title: def\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this);\n    }\n  }];\n  if (!hihi) {\n    return /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      dataSource: hihi,\n      loading: true,\n      style: {\n        minWidth: 400\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      dataSource: hihi,\n      style: {\n        minWidth: 400\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this);\n  }\n};\n_s(VlanTable, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n_c = VlanTable;\nexport const VlanTable1 = props => {\n  _s2();\n  const {\n    onEditItem,\n    onDeleteItem,\n    tableData,\n    haha\n  } = props;\n  const {\n    t\n  } = useTranslation();\n  const abc = t('edit');\n  const def = t('delete');\n  const confirmDeleteGroup = async group => {\n    return onDeleteItem(group);\n  };\n  const columns = [{\n    title: 'VLAN ID',\n    key: 'vid',\n    dataIndex: 'vid'\n  }, {\n    title: t('interface'),\n    key: 'dev',\n    dataIndex: 'dev'\n  }, {\n    title: t('action'),\n    key: 'action',\n    render: (_, record) => {\n      if (record.admin_id <= 0) {\n        return null;\n      }\n      return /*#__PURE__*/_jsxDEV(Space, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          icon: /*#__PURE__*/_jsxDEV(EditOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 39\n          }, this),\n          title: abc,\n          onClick: () => onEditItem(record)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Popconfirm, {\n          placement: \"top\",\n          title: t('delete_cf'),\n          onConfirm: () => confirmDeleteGroup(record),\n          okText: t('yes'),\n          cancelText: t('no'),\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            icon: /*#__PURE__*/_jsxDEV(DeleteOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 43\n            }, this),\n            danger: true,\n            type: \"primary\",\n            title: def\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this);\n    }\n  }];\n  if (!haha) {\n    return /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      dataSource: haha,\n      loading: true,\n      style: {\n        minWidth: 400\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      dataSource: haha,\n      style: {\n        minWidth: 400\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this);\n  }\n};\n_s2(VlanTable1, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n_c2 = VlanTable1;\nvar _c, _c2;\n$RefreshReg$(_c, \"VlanTable\");\n$RefreshReg$(_c2, \"VlanTable1\");","map":{"version":3,"names":["DeleteOutlined","EditOutlined","Table","Space","Button","Popconfirm","message","React","ubusApi","useTranslation","VlanTable","props","onEditItem","onDeleteItem","tableData","hihi","t","abc","def","refreshPage","window","location","reload","confirmDeleteGroup","group","vlan","config_network_vlan","id","name","vid","dev","key","loading","content","setTimeout","success","duration","columns","title","dataIndex","render","join","_","record","admin_id","minWidth","VlanTable1","haha"],"sources":["/home/iam/Documents/network/src/components/antd/network/vlan/table.tsx"],"sourcesContent":["import { DeleteOutlined, EditOutlined } from '@ant-design/icons'\nimport { Table, Space, Button, Popconfirm, message } from 'antd'\nimport React from 'react'\nimport ubusApi from 'service/api/ubus-api'\nimport { useTranslation } from \"react-i18next\"\nimport \"../../../../translations/i18n\"\n\nexport const VlanTable = (props: any) => {\n    const { onEditItem, onDeleteItem, tableData, hihi } = props\n    const { t } = useTranslation()\n    const abc = t('edit')\n    const def = t('delete')\n    const refreshPage = () => {\n        window.location.reload()\n    }\n    const confirmDeleteGroup = async (group: any) => {\n        // console.log(\"data1: \",))\n        // const vlan = group.dev.map((item:any) => {item.toString()})\n        const vlan = await ubusApi.config_network_vlan(\"access\", \"del\", group.id, group.name, group.vid, group.dev)\n        // console.log(\"data1: \",group)\n        const key = 'updatable';\n        message.loading({ content: t('loading'), key });\n        setTimeout(() => {\n            message.success({ content: t('success'), key, duration: 2 });\n        }, 1000);\n        setTimeout(() => {\n            window.location.reload()\n        }, 1500);\n    }\n    const columns = [\n        { title: 'VLAN ID', key: 'vid', dataIndex: 'vid' },\n        { title: t('name'), key: 'name', dataIndex: 'name' },\n        { title: t('interface'), key: 'dev', dataIndex: 'dev',render: (dev: string[]) => dev.join(' '),},\n        {\n            title: t('action'),\n            key: 'action',\n            render: (_: string, record: any) => {\n                if (record.admin_id <= 0) {\n                    return null\n                }\n                return (\n                    <Space>\n                        <Button icon={<EditOutlined />} title={abc} onClick={() => onEditItem(record)} />\n                        <Popconfirm\n                            placement=\"top\"\n                            title={t('delete_cf')}\n                            onConfirm={() => confirmDeleteGroup(record)}\n                            okText={t('yes')}\n                            cancelText={t('no')}\n                        >\n                            <Button icon={<DeleteOutlined />}  danger type=\"primary\" title={def} />\n                        </Popconfirm>\n                    </Space>\n                )\n            },\n        },\n    ]\n    if (!hihi) {\n        return (\n            <Table columns={columns} dataSource={hihi} loading style={{ minWidth: 400 }} />\n        )\n    } else {\n        return (\n            <Table columns={columns} dataSource={hihi} style={{ minWidth: 400 }} />\n        )\n    }\n}\nexport const VlanTable1 = (props: any) => {\n    const { onEditItem, onDeleteItem, tableData, haha } = props\n    const { t } = useTranslation()\n    const abc = t('edit')\n    const def = t('delete')\n    const confirmDeleteGroup = async (group: any) => {\n        return onDeleteItem(group)\n    }\n    const columns = [\n        { title: 'VLAN ID', key: 'vid', dataIndex: 'vid' },\n        { title: t('interface'), key: 'dev', dataIndex: 'dev' },\n        {\n            title: t('action'),\n            key: 'action',\n            render: (_: string, record: any) => {\n                if (record.admin_id <= 0) {\n                    return null\n                }\n                return (\n                    <Space>\n                        <Button icon={<EditOutlined />} title={abc} onClick={() => onEditItem(record)} />\n                        <Popconfirm\n                            placement=\"top\"\n                            title={t('delete_cf')}\n                            onConfirm={() => confirmDeleteGroup(record)}\n                            okText={t('yes')}\n                            cancelText={t('no')}\n                        >\n                            <Button icon={<DeleteOutlined />} danger type=\"primary\" title={def} />\n                        </Popconfirm>\n                    </Space>\n                )\n            },\n        },\n    ]\n\n    if (!haha) {\n        return (\n            <Table columns={columns} dataSource={haha} loading style={{ minWidth: 400 }} />\n        )\n    } else {\n        return (\n            <Table columns={columns} dataSource={haha} style={{ minWidth: 400 }} />\n        )\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}