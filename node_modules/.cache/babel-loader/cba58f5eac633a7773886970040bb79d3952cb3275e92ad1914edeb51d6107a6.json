{"ast":null,"code":"import { each, pick } from '@antv/util';\nimport { getCoordinateBBox } from '../../../util/coordinate';\nimport { getEllipsisText } from '../../../util/text';\nimport { translate } from '../../../util/transform';\n/**\n * @ignore\n * 将 label 限制在 Plot 范围内，将超出 Plot 范围的 label 可选择进行隐藏或者移动位置\n * @param labels\n * @param cfg\n */\nexport function limitInPlot(items, labels, shapes, region, cfg) {\n  if (labels.length <= 0) {\n    return;\n  }\n  var direction = (cfg === null || cfg === void 0 ? void 0 : cfg.direction) || ['top', 'right', 'bottom', 'left'];\n  var action = (cfg === null || cfg === void 0 ? void 0 : cfg.action) || 'translate';\n  var margin = (cfg === null || cfg === void 0 ? void 0 : cfg.margin) || 0;\n  var coordinate = labels[0].get('coordinate');\n  if (!coordinate) {\n    return;\n  }\n  var _a = getCoordinateBBox(coordinate, margin),\n    regionMinX = _a.minX,\n    regionMinY = _a.minY,\n    regionMaxX = _a.maxX,\n    regionMaxY = _a.maxY;\n  each(labels, function (label) {\n    var _a = label.getCanvasBBox(),\n      minX = _a.minX,\n      minY = _a.minY,\n      maxX = _a.maxX,\n      maxY = _a.maxY,\n      x = _a.x,\n      y = _a.y,\n      width = _a.width,\n      height = _a.height;\n    var finalX = x;\n    var finalY = y;\n    if (direction.indexOf('left') >= 0 && (minX < regionMinX || maxX < regionMinX)) {\n      // 超出左侧\n      finalX = regionMinX;\n    }\n    if (direction.indexOf('top') >= 0 && (minY < regionMinY || maxY < regionMinY)) {\n      // 超出顶部\n      finalY = regionMinY;\n    }\n    if (direction.indexOf('right') >= 0) {\n      if (minX > regionMaxX) {\n        // 整体超出右侧\n        finalX = regionMaxX - width;\n      } else if (maxX > regionMaxX) {\n        // 超出右侧\n        finalX = finalX - (maxX - regionMaxX);\n      }\n    }\n    if (direction.indexOf('bottom') >= 0) {\n      if (minY > regionMaxY) {\n        // 整体超出底部\n        finalY = regionMaxY - height;\n      } else if (maxY > regionMaxY) {\n        // 超出底部\n        finalY = finalY - (maxY - regionMaxY);\n      }\n    }\n    if (finalX !== x || finalY !== y) {\n      var translateX_1 = finalX - x;\n      if (action === 'translate') {\n        translate(label, translateX_1, finalY - y);\n      } else if (action === 'ellipsis') {\n        var textShapes = label.findAll(function (shape) {\n          return shape.get('type') === 'text';\n        });\n        textShapes.forEach(function (textShape) {\n          var style = pick(textShape.attr(), ['fontSize', 'fontFamily', 'fontWeight', 'fontStyle', 'fontVariant']);\n          var textBox = textShape.getCanvasBBox();\n          var text = getEllipsisText(textShape.attr('text'), textBox.width - Math.abs(translateX_1), style);\n          textShape.attr('text', text);\n        });\n      } else {\n        label.hide();\n      }\n    }\n  });\n}","map":{"version":3,"mappings":"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","names":["each","pick","getCoordinateBBox","getEllipsisText","translate","limitInPlot","items","labels","shapes","region","cfg","length","direction","action","margin","coordinate","get","regionMinX","regionMinY","regionMaxX","regionMaxY","label","getCanvasBBox","minX","minY","maxX","maxY","x","y","width","height","finalX","finalY","indexOf","translateX_1","textShapes","findAll","shape","forEach","textShape","style","attr","textBox","text","Math","abs","hide"],"sources":["/home/iam/Documents/network/node_modules/@antv/g2/src/geometry/label/layout/limit-in-plot.ts"],"sourcesContent":["import { each, pick } from '@antv/util';\nimport { BBox, IGroup, IShape } from '../../../dependents';\nimport { getCoordinateBBox } from '../../../util/coordinate';\nimport { getEllipsisText } from '../../../util/text';\nimport { translate } from '../../../util/transform';\nimport { LabelItem } from '../interface';\n\n/** limitInPlot layout 的可选配置 */\nexport interface LimitInPlotLayoutCfg {\n  /** 需要限制哪些方向上不能超过 Plot 范围，默认四个方向上都限制 */\n  direction?: ('top' | 'right' | 'bottom' | 'left')[];\n  /** 可以允许的 margin */\n  margin?: number;\n  /** 超过限制后的动作，默认 translate 移动位置; ellipsis 对 text 进行省略展示 */\n  action?: 'hide' | 'translate' | 'ellipsis';\n}\n\n/**\n * @ignore\n * 将 label 限制在 Plot 范围内，将超出 Plot 范围的 label 可选择进行隐藏或者移动位置\n * @param labels\n * @param cfg\n */\nexport function limitInPlot(\n  items: LabelItem[],\n  labels: IGroup[],\n  shapes: IShape[] | IGroup[],\n  region: BBox,\n  cfg?: LimitInPlotLayoutCfg\n) {\n  if (labels.length <= 0) {\n    return;\n  }\n  const direction = cfg?.direction || ['top', 'right', 'bottom', 'left'];\n  const action = cfg?.action || 'translate';\n  const margin = cfg?.margin || 0;\n  const coordinate = labels[0].get('coordinate');\n  if (!coordinate) {\n    return;\n  }\n  const {\n    minX: regionMinX,\n    minY: regionMinY,\n    maxX: regionMaxX,\n    maxY: regionMaxY,\n  } = getCoordinateBBox(coordinate, margin);\n\n  each(labels, (label: IGroup) => {\n    const { minX, minY, maxX, maxY, x, y, width, height } = label.getCanvasBBox();\n\n    let finalX = x;\n    let finalY = y;\n    if (direction.indexOf('left') >= 0 && (minX < regionMinX || maxX < regionMinX)) {\n      // 超出左侧\n      finalX = regionMinX;\n    }\n    if (direction.indexOf('top') >= 0 && (minY < regionMinY || maxY < regionMinY)) {\n      // 超出顶部\n      finalY = regionMinY;\n    }\n\n    if (direction.indexOf('right') >= 0) {\n      if (minX > regionMaxX) {\n        // 整体超出右侧\n        finalX = regionMaxX - width;\n      } else if (maxX > regionMaxX) {\n        // 超出右侧\n        finalX = finalX - (maxX - regionMaxX);\n      }\n    }\n\n    if (direction.indexOf('bottom') >= 0) {\n      if (minY > regionMaxY) {\n        // 整体超出底部\n        finalY = regionMaxY - height;\n      } else if (maxY > regionMaxY) {\n        // 超出底部\n        finalY = finalY - (maxY - regionMaxY);\n      }\n    }\n\n    if (finalX !== x || finalY !== y) {\n      const translateX = finalX - x;\n      if (action === 'translate') {\n        translate(label, translateX, finalY - y);\n      } else if (action === 'ellipsis') {\n        const textShapes = label.findAll((shape) => shape.get('type') === 'text');\n        textShapes.forEach((textShape) => {\n          const style = pick(textShape.attr(), ['fontSize', 'fontFamily', 'fontWeight', 'fontStyle', 'fontVariant']);\n          const textBox = textShape.getCanvasBBox();\n          const text = getEllipsisText(textShape.attr('text'), textBox.width - Math.abs(translateX), style);\n          textShape.attr('text', text);\n        });\n      } else {\n        label.hide();\n      }\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}