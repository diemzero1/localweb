{"ast":null,"code":"import axios from 'axios';\nconst UBUS_PATH = 'ubus';\nconst DEFAULT_SESSION = '00000000000000000000000000000000';\nclass UbusApi {\n  constructor() {\n    var _this = this;\n    let baseURL = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '/';\n    this.ubusRpcSession = DEFAULT_SESSION;\n    this._instance = null;\n    this._reqId = 1;\n    this.ubusCall = async function (section, method) {\n      let param = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      const inst = _this._instance;\n      let tokenString = sessionStorage.getItem('token');\n      if (method === 'login') {\n        tokenString = DEFAULT_SESSION;\n      }\n      try {\n        const reqBody = {\n          jsonrpc: '2.0',\n          id: _this._reqId++,\n          method: 'call',\n          params: [tokenString, section, method, param]\n        };\n        // console.log('reqBody', reqBody)\n        const resp = await inst.post(UBUS_PATH, reqBody);\n        if (resp.status === 200 || resp.status === 201) {\n          const {\n            /*jsonrpc, id,*/result,\n            error\n          } = resp.data;\n          if (error) {\n            // code -32002; Access denied\n            // console.log(resp.data)\n            if (error.code === -32002) {\n              sessionStorage.removeItem('token');\n              window.location.href = '/';\n            }\n            return error;\n          } else if (Array.isArray(result) && (result === null || result === void 0 ? void 0 : result.length) > 0) {\n            // code 2 = invalid param ?\n            return {\n              code: result[0],\n              data: result[1]\n            };\n          } else {\n            return {\n              code: -1,\n              message: 'Invalid response',\n              data: resp.data\n            };\n          }\n        } else {\n          return {\n            code: -2,\n            message: 'Unexpected status',\n            data: resp.data\n          };\n        }\n      } catch (err) {\n        console.log('err', err);\n        return {\n          code: -3,\n          message: `${err.code} | ${err.message}`\n        };\n      }\n    };\n    this.login = async function (username) {\n      let password = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n      const respData = await _this.ubusCall('session', 'login', {\n        username,\n        password\n      });\n      if (respData.code === 0) {\n        const {\n          ubus_rpc_session /*timeout, expires*/\n        } = respData.data;\n        _this.ubusRpcSession = ubus_rpc_session;\n      } else {\n        console.log('LoginError', respData);\n      }\n      return respData;\n    };\n    console.log('Creating api instance', baseURL);\n    this._instance = axios.create({\n      baseURL,\n      timeout: 25000\n    });\n  }\n  cleanInit() {\n    this.ubusRpcSession = DEFAULT_SESSION;\n  }\n  systemInfo() {\n    let data = this.ubusCall('linksafe', 'dashboard');\n    return data;\n  }\n  async uciGet(config, section, option) {\n    const result = await this.ubusCall('uci', 'get', {\n      \"config\": config,\n      \"section\": section\n    });\n    if (result.code) {\n      return {};\n    }\n    const data = {\n      name: config,\n      sections: Object.values(result.data)\n    };\n    return data;\n  }\n  async uciSet(config, section, values) {\n    const result = await this.ubusCall('uci', 'set', {\n      config,\n      section,\n      values\n    });\n    if (result.code) {\n      console.log(result);\n      return {};\n    }\n    return result.data;\n  }\n  async uciChanges(config) {\n    const result = await this.ubusCall('uci', 'changes', {\n      config\n    });\n    if (result.code) {\n      console.log(result);\n      return {};\n    }\n    // const { changes } = result.data\n    // {\"changes\": {\n    //   \"system\": [[\"set\", \"cfg01e48a\", \"hostname\", \"OpenWrt-Vbox\"]]\n    // }}\n    return result.data;\n  }\n  async uciApply(rollback) {\n    const result = await this.ubusCall('uci', 'apply', {\n      rollback,\n      timeout: 25\n    });\n    if (result.code) {\n      console.log(result);\n      return {};\n    }\n    return result.data;\n  }\n  async uciCommit(config) {\n    const result = await this.ubusCall('uci', 'commit', {\n      config\n    });\n    if (result.code) {\n      console.log(result);\n      return {};\n    }\n    return result.data;\n  }\n  logout() {\n    this.cleanInit();\n  }\n\n  ////function web local\n\n  async linksafe_get_uuid() {\n    const result = await this.ubusCall('linksafe', 'linksafe_get_uuid', {});\n    if (result.code) {\n      console.log(result);\n      return {};\n    }\n    // console.log(result)\n    return result.data;\n  }\n  async config_network_lan(ifname, protov4, ipv4, netmask, protov6, ipv6) {\n    const result = await this.ubusCall('linksafe', 'config_network_lan', {\n      \"param\": [{\n        \"protov4\": protov4,\n        \"ipaddrv4\": ipv4,\n        \"netmask\": netmask,\n        \"protov6\": protov6,\n        \"ipaddrv6\": ipv6\n      }]\n    });\n    if (result.code) {\n      console.log(result);\n      return {};\n    }\n    // console.log(result)\n    return result.data;\n  }\n  async config_network_wireless(disabled, ssid, encryption, key) {\n    const result = await this.ubusCall('linksafe', 'config_network_wireless', {\n      \"param\": [{\n        \"disabled\": disabled,\n        \"ssid\": ssid,\n        \"key\": key,\n        \"encryption\": encryption\n      }]\n    });\n    if (result.code) {\n      console.log(result);\n      return {};\n    }\n    return result.data;\n  }\n  async config_network_guest(disabled, ssid, encryption, key, limit, unit) {\n    console.log(\"result: \", disabled, ssid, encryption, key, limit, unit);\n    if (limit === null) {\n      const result = await this.ubusCall('linksafe', 'config_network_guest', {\n        \"param\": [{\n          \"disabled\": disabled,\n          \"ssid\": ssid,\n          \"key\": key,\n          \"encryption\": encryption\n        }]\n      });\n      if (result.code) {\n        return {};\n      }\n      return result.data;\n    } else {\n      const result = await this.ubusCall('linksafe', 'config_network_guest', {\n        \"param\": [{\n          \"disabled\": disabled,\n          \"ssid\": ssid,\n          \"key\": key,\n          \"encryption\": encryption,\n          \"limit_values\": limit,\n          \"limit_unit\": unit\n        }]\n      });\n      if (result.code) {\n        return {};\n      }\n      return result.data;\n    }\n  }\n  async config_network_wan(protov4, username, password, timeout, ipaddrv4, netmaskv4, gatewayv4, protov6, ipaddrv6, gatewayv6) {\n    switch (protov4) {\n      case 'static':\n        switch (protov6) {\n          case 'static':\n            const result1 = await this.ubusCall('linksafe', 'config_network_wan', {\n              \"param\": [{\n                \"status\": \"enable\",\n                \"ifname\": \"eth1\",\n                \"name\": \"wan\",\n                \"protov4\": protov4,\n                \"username\": username,\n                \"password\": password,\n                \"timeout\": timeout,\n                \"ipaddrv4\": ipaddrv4,\n                \"netmaskv4\": netmaskv4,\n                \"gatewayv4\": gatewayv4,\n                \"protov6\": protov6,\n                \"ipaddrv6\": ipaddrv6,\n                \"gatewayv6\": gatewayv6\n              }]\n            });\n            if (result1.code) {\n              console.log(result1);\n              return {};\n            }\n            return {};\n          default:\n            const result2 = await this.ubusCall('linksafe', 'config_network_wan', {\n              \"param\": [{\n                \"status\": \"enable\",\n                \"ifname\": \"eth1\",\n                \"name\": \"wan\",\n                \"protov4\": protov4,\n                \"username\": username,\n                \"password\": password,\n                \"timeout\": timeout,\n                \"ipaddrv4\": ipaddrv4,\n                \"netmaskv4\": netmaskv4,\n                \"gatewayv4\": gatewayv4,\n                \"protov6\": protov6\n              }]\n            });\n            if (result2.code) {\n              console.log(result2);\n              // console.log(result2_wan6)\n              return {};\n            }\n        }\n        return {};\n      default:\n        switch (protov6) {\n          case 'static':\n            const result1 = await this.ubusCall('linksafe', 'config_network_wan', {\n              \"param\": [{\n                \"status\": \"enable\",\n                \"ifname\": \"eth1\",\n                \"name\": \"wan\",\n                \"protov4\": protov4,\n                \"username\": username,\n                \"password\": password,\n                \"timeout\": timeout,\n                \"protov6\": protov6,\n                \"ipaddrv6\": ipaddrv6,\n                \"gatewayv6\": gatewayv6\n              }]\n            });\n            if (result1.code) {\n              console.log(result1);\n              // console.log(result1_wan6)\n              return {};\n            }\n            return {};\n          default:\n            const result2 = await this.ubusCall('linksafe', 'config_network_wan', {\n              \"param\": [{\n                \"status\": \"enable\",\n                \"ifname\": \"eth1\",\n                \"name\": \"wan\",\n                \"protov4\": protov4,\n                \"username\": username,\n                \"password\": password,\n                \"timeout\": timeout,\n                \"protov6\": protov6\n              }]\n            });\n            if (result2.code) {\n              console.log(result2);\n              // console.log(result2_wan6)\n              return {};\n            }\n        }\n    }\n  }\n  async show_network_wireless() {\n    const result = await this.ubusCall('linksafe', 'show_network_wireless');\n    if (result.code) {\n      console.log(result);\n      return {};\n    }\n    // console.log(result)\n    return result.data;\n  }\n  async show_network_guest() {\n    const result = await this.ubusCall('linksafe', 'show_network_guest');\n    if (result.code) {\n      console.log(result);\n      return {};\n    }\n    // console.log(result)\n    return result.data;\n  }\n  async show_network_wan_congfig() {\n    const result = await this.ubusCall('linksafe', 'show_network_wan_config');\n    if (result.code) {\n      console.log(result);\n      return {};\n    }\n    // console.log(result)\n    return result.data;\n  }\n  async config_network_ddns(provider, enabled, mode, url, username, password, domain) {\n    const result = await this.ubusCall('linksafe', 'config_network_ddns', {\n      \"param\": [{\n        \"provider\": \"DynDNS\",\n        \"enabled\": enabled,\n        \"mode\": mode,\n        \"url\": url,\n        \"username\": username,\n        \"password\": password,\n        \"domain\": domain\n      }]\n    });\n    if (result.code) {\n      console.log(result);\n      return {};\n    }\n    // console.log(result)\n    return result.data;\n  }\n  async show_network_ddns() {\n    const result = await this.ubusCall('linksafe', 'show_network_ddns');\n    if (result.code) {\n      console.log(result);\n      return {};\n    }\n    // console.log(result)\n    return result.data;\n  }\n  async config_network_static(status, id, target, nexthop, metric, device) {\n    const result = await this.ubusCall('linksafe', 'config_network_static', {\n      \"param\": [{\n        \"status\": status,\n        \"id\": id,\n        \"target\": target,\n        \"nexthop\": nexthop,\n        \"metric\": metric,\n        \"device\": device\n      }]\n    });\n    if (result.code) {\n      console.log(result);\n      return {};\n    }\n    // console.log(result)\n    return result.data;\n  }\n  async config_network_nat(status, name, protocol, wan_ip, wan_port, lan_ip, lan_port) {\n    const result = await this.ubusCall('linksafe', 'config_network_nat', {\n      \"param\": [{\n        \"status\": status,\n        \"name\": name,\n        \"protocol\": protocol,\n        \"wan_ip\": wan_ip,\n        \"wan_port\": wan_port,\n        \"lan_ip\": lan_ip,\n        \"lan_port\": lan_port\n      }]\n    });\n    if (result.code) {\n      console.log(result);\n      return {};\n    }\n    // console.log(result)\n    return result.data;\n  }\n  async show_network_nat() {\n    const result = await this.ubusCall('linksafe', 'show_network_nat');\n    if (result.code) {\n      console.log(result);\n      return {};\n    }\n    // console.log(result)\n    return result.data;\n  }\n  async show_network_lan_config() {\n    const result = await this.ubusCall('linksafe', 'show_network_lan_config');\n    if (result.code) {\n      console.log(result);\n      return {};\n    }\n    // console.log(result)\n    return result.data;\n  }\n  async show_network_lan() {\n    const result = await this.ubusCall('linksafe', 'show_network_lan');\n    if (result.code) {\n      console.log(result);\n      return {};\n    }\n    // console.log(result)\n    return result.data;\n  }\n  async show_network_dhcp_config() {\n    const result = await this.ubusCall('linksafe', 'show_network_dhcp_config');\n    if (result.code) {\n      console.log(result);\n      return {};\n    }\n    // console.log(result)\n    return result.data;\n  }\n  async config_network_dhcp(dhcpv4_status, dhcpv6_status, start, end, leasetime) {\n    const result = await this.ubusCall('linksafe', 'config_network_dhcp', {\n      \"param\": [{\n        \"dhcpv4status\": dhcpv4_status,\n        \"dhcpv6status\": dhcpv6_status,\n        \"start\": start,\n        \"end\": end,\n        \"leasetime\": leasetime\n      }]\n    });\n    if (result.code) {\n      console.log(result);\n      return {};\n    }\n    // console.log(result)\n    return result.data;\n  }\n  async config_network_dns(primary, secondary) {\n    const result = await this.ubusCall('linksafe', 'config_network_dns', {\n      \"param\": [{\n        \"primary\": primary,\n        \"secondary\": secondary\n      }]\n    });\n    if (result.code) {\n      console.log(result);\n      return {};\n    }\n    // console.log(result)\n    return result.data;\n  }\n  async show_network_dns_config() {\n    const result = await this.ubusCall('linksafe', 'show_network_dns_config');\n    if (result.code) {\n      console.log(result);\n      return {};\n    }\n    // console.log(result)\n    return result.data;\n  }\n  async show_network_dhcp_leases() {\n    const result = await this.ubusCall('linksafe', 'show_network_dhcp_leases');\n    if (result.code) {\n      console.log(result);\n      return {};\n    }\n    // console.log(result)\n    return result.data;\n  }\n  async show_network_vlan() {\n    const result = await this.ubusCall('linksafe', 'show_network_vlan');\n    if (result.code) {\n      console.log(result);\n      return {};\n    }\n    // console.log(result)\n    return result.data;\n  }\n  async config_network_vlan(mode, action, id, name, vid, interfaces) {\n    if (mode === \"access\") {\n      const result = await this.ubusCall('linksafe', 'config_network_vlan', {\n        \"param\": [{\n          \"access\": {\n            \"action\": action,\n            \"id\": id,\n            \"name\": name,\n            \"vid\": vid,\n            \"interface\": interfaces\n          }\n        }]\n      });\n      if (result.code) {\n        console.log(result);\n        return {};\n      }\n      return result.data;\n    } else {\n      const result = await this.ubusCall('linksafe', 'config_network_vlan', {\n        \"param\": [{\n          \"trunk\": {\n            \"action\": action,\n            \"id\": id,\n            \"interface\": interfaces,\n            \"vid\": vid\n          }\n        }]\n      });\n      if (result.code) {\n        console.log(result);\n        return {};\n      }\n      return result.data;\n    }\n  }\n  async show_network_multicast() {\n    const result = await this.ubusCall('linksafe', 'show_network_multicast');\n    if (result.code) {\n      console.log(result);\n      return {};\n    }\n    // console.log(result)\n    return result.data;\n  }\n\n  /* system function */\n\n  async config_system(hostname, timezone) {\n    const result = await this.ubusCall('linksafe', 'config_system', {\n      \"param\": [{\n        \"hostname\": hostname,\n        \"timezone\": timezone\n      }]\n    });\n    if (result.code) {\n      console.log(result);\n      return {};\n    }\n    // console.log(result)\n    return result.data;\n  }\n  async config_system_reboot() {\n    const result = await this.ubusCall('linksafe', 'config_system_reboot', {});\n    if (result.code) {\n      console.log(result);\n      return {};\n    }\n    // console.log(result)\n    return result.data;\n  }\n  async config_system_shutdown() {\n    const result = await this.ubusCall('linksafe', 'config_system_shutdown', {});\n    if (result.code) {\n      console.log(result);\n      return {};\n    }\n    // console.log(result)\n    return result.data;\n  }\n  async config_system_rsfactory() {\n    const result = await this.ubusCall('linksafe', 'config_system_factory', {});\n    if (result.code) {\n      console.log(result);\n      return {};\n    }\n    // console.log(result)\n    return result.data;\n  }\n  async config_system_ping(props) {\n    const {\n      hostname,\n      version,\n      source,\n      max,\n      second,\n      ttl\n    } = props;\n    const result = await this.ubusCall('linksafe', 'config_system_ping', {\n      \"param\": [{\n        \"hostname\": hostname,\n        \"version\": version,\n        \"count\": max,\n        \"sec\": second,\n        \"ttl\": ttl,\n        \"source\": source\n      }]\n    });\n    if (result.code) {\n      // console.log('ping',result)\n      return {};\n    }\n    // console.log(result)\n    return result.data;\n  }\n  async config_system_traceroute(props) {\n    const {\n      hostname,\n      version,\n      source,\n      max,\n      second,\n      ttl\n    } = props;\n    const result = await this.ubusCall('linksafe', 'config_system_traceroute', {\n      \"param\": [{\n        \"hostname\": hostname,\n        \"version\": version,\n        \"count\": max,\n        \"sec\": second,\n        \"ttl\": ttl,\n        \"source\": source\n      }]\n    });\n    if (result.code) {\n      // console.log('ping',result)\n      return {};\n    }\n    // console.log(result)\n    return result.data;\n  }\n  async config_system_password(props) {\n    const {\n      current_password,\n      new_password\n    } = props;\n    const result = await this.ubusCall('linksafe', 'config_system_password', {\n      \"param\": [{\n        \"oldpass\": current_password,\n        \"newpass\": new_password\n      }]\n    });\n    if (result.code) {\n      // console.log('ping',result)\n      return {};\n    }\n    // console.log(result)\n    return result.data;\n  }\n  async config_system_update() {\n    const result = await this.ubusCall('linksafe', 'config_system_update', {});\n    if (result.code) {\n      // console.log('ping',result)\n      return {};\n    }\n    // console.log(result)\n    return result.data;\n  }\n\n  /* acl function */\n  async config_url_filter(name, action, type, url) {\n    const result = await this.ubusCall('linksafe', 'config_acl', {\n      \"param\": [{\n        \"name\": name,\n        \"action\": action,\n        \"type\": type,\n        \"url\": url\n      }]\n    });\n    if (result.code) {\n      console.log(result);\n      return {};\n    }\n    // console.log(result)\n    return result.data;\n  }\n  async show_url_filter() {\n    const result = await this.ubusCall('linksafe', 'show_acl');\n    if (result.code) {\n      console.log(result);\n      return {};\n    }\n    // console.log(result) \n    return result.data;\n  }\n  async show_ip_filter() {\n    const result = await this.ubusCall('linksafe', 'show_acl');\n    if (result.code) {\n      console.log(result);\n      return {};\n    }\n    // console.log(result)\n    return result.data;\n  }\n  async config_ip_filter(name, action, type, src, dest, sport, dport, tcp_udp) {\n    const result = await this.ubusCall('linksafe', 'config_acl', {\n      \"param\": [{\n        \"name\": name,\n        \"action\": action,\n        \"type\": type,\n        \"src\": src,\n        \"dest\": dest,\n        \"sport\": sport,\n        \"dport\": dport,\n        \"tcp_udp\": tcp_udp\n      }]\n    });\n    if (result.code) {\n      console.log(result);\n      return {};\n    }\n    // console.log(result)\n    return result.data;\n  }\n  async config_mesh_controller(enabled, ssid, key) {\n    const result = await this.ubusCall('linksafe', 'config_mesh_controller', {\n      \"param\": [{\n        \"enabled\": enabled,\n        \"ssid\": ssid,\n        \"key\": key\n      }]\n    });\n    if (result.code) {\n      console.log(result);\n      return {};\n    }\n    // console.log(result)\n    return result.data;\n  }\n  async config_mesh_agent(enabled) {\n    const result = await this.ubusCall('linksafe', 'config_mesh_agent', {\n      \"param\": [{\n        \"enabled\": enabled\n      }]\n    });\n    if (result.code) {\n      console.log(result);\n      return {};\n    }\n    // console.log(result)\n    return result.data;\n  }\n  async show_mesh_config() {\n    const result = await this.ubusCall('linksafe', 'show_mesh_config');\n    if (result.code) {\n      console.log(result);\n      return {};\n    }\n    // console.log(result)\n    return result.data;\n  }\n  async show_mesh_table() {\n    const result = await this.ubusCall('linksafe', 'show_mesh_table');\n    if (result.code) {\n      console.log(result);\n      return {};\n    }\n    return result.data;\n  }\n  async config_network_openvpn_server(action, name, status, mode, port, subnet, netmask, client_access, crt, key, ca) {\n    const result = await this.ubusCall('linksafe', 'config_network_openvpn', {\n      \"param\": [{\n        \"action\": action,\n        \"name\": name,\n        \"status\": status,\n        \"mode\": mode,\n        \"port\": port,\n        \"subnet\": subnet,\n        \"netmask\": netmask,\n        \"client_access\": client_access,\n        \"crt\": crt,\n        \"key\": key,\n        \"ca\": ca\n      }]\n    });\n    if (result.code) {\n      console.log(result);\n      return {};\n    }\n    // console.log(result)\n    return result.data;\n  }\n  async show_network_openvpn() {\n    const result = await this.ubusCall('linksafe', 'show_network_openvpn');\n    if (result.code) {\n      console.log(result);\n      return {};\n    }\n    // console.log(result)\n    return result.data;\n  }\n  async config_network_openvpn_client(action, name, status, mode, server_ip, server_port, crt, key, ca) {\n    const result = await this.ubusCall('linksafe', 'config_network_openvpn', {\n      \"param\": [{\n        \"action\": action,\n        \"name\": name,\n        \"status\": status,\n        \"mode\": mode,\n        \"server_ip\": server_ip,\n        \"server_port\": server_port,\n        \"crt\": crt,\n        \"key\": key,\n        \"ca\": ca\n      }]\n    });\n    if (result.code) {\n      console.log(result);\n      return {};\n    }\n    return result.data;\n  }\n  async config_network_openvpn_del(name) {\n    const result = await this.ubusCall('linksafe', 'config_network_openvpn', {\n      \"param\": [{\n        \"action\": \"del\",\n        \"name\": name\n      }]\n    });\n    if (result.code) {\n      console.log(result);\n      return {};\n    }\n    return result.data;\n  }\n  async config_network_openvpn_dev(action, crt, key, ca) {\n    const result = await this.ubusCall('linksafe', 'config_network_openvpn', {\n      \"param\": [{\n        \"action\": \"del_crt\",\n        \"crt\": crt,\n        \"key\": key,\n        \"ca\": ca\n      }]\n    });\n    if (result.code) {\n      console.log(result);\n      return {};\n    }\n    return result.data;\n  }\n  async show_network_openvpn_list(folder) {\n    const result = await this.ubusCall('linksafe', 'show_list_folder', {\n      \"param\": folder\n    });\n    if (result.code) {\n      console.log(result);\n      return {};\n    }\n    return result.data;\n  }\n  async show_network_relay() {\n    const result = await this.ubusCall('linksafe', 'show_network_relay');\n    if (result.code) {\n      console.log(result);\n      return {};\n    }\n    return result.data;\n  }\n  async config_network_relay(statusv4, statusv6) {\n    const result = await this.ubusCall('linksafe', 'config_network_relay', {\n      \"param\": [{\n        \"statusv4\": statusv4,\n        \"statusv6\": statusv6\n      }]\n    });\n    if (result.code) {\n      console.log(result);\n      return {};\n    }\n    return result.data;\n  }\n  async show_mesh_topology() {\n    const result = await this.ubusCall('linksafe', 'show_mesh_topology');\n    if (result.code) {\n      console.log(result);\n      return {};\n    }\n    return result.data;\n  }\n  async show_web_data(option) {\n    const result = await this.ubusCall('linksafe', 'show_web_data', {\n      \"param\": option\n    });\n    if (result.code) {\n      return {};\n    }\n    return result.data;\n  }\n  async show_network_routing(option) {\n    const result = await this.ubusCall('linksafe', 'show_network_routing', {\n      \"param\": option\n    });\n    if (result.code) {\n      return {};\n    }\n    return result.data;\n  }\n}\nexport default new UbusApi(\"http://192.168.15.142/\");","map":{"version":3,"names":["axios","UBUS_PATH","DEFAULT_SESSION","UbusApi","constructor","baseURL","ubusRpcSession","_instance","_reqId","ubusCall","section","method","param","inst","tokenString","sessionStorage","getItem","reqBody","jsonrpc","id","params","resp","post","status","result","error","data","code","removeItem","window","location","href","Array","isArray","length","message","err","console","log","login","username","password","respData","ubus_rpc_session","create","timeout","cleanInit","systemInfo","uciGet","config","option","name","sections","Object","values","uciSet","uciChanges","uciApply","rollback","uciCommit","logout","linksafe_get_uuid","config_network_lan","ifname","protov4","ipv4","netmask","protov6","ipv6","config_network_wireless","disabled","ssid","encryption","key","config_network_guest","limit","unit","config_network_wan","ipaddrv4","netmaskv4","gatewayv4","ipaddrv6","gatewayv6","result1","result2","show_network_wireless","show_network_guest","show_network_wan_congfig","config_network_ddns","provider","enabled","mode","url","domain","show_network_ddns","config_network_static","target","nexthop","metric","device","config_network_nat","protocol","wan_ip","wan_port","lan_ip","lan_port","show_network_nat","show_network_lan_config","show_network_lan","show_network_dhcp_config","config_network_dhcp","dhcpv4_status","dhcpv6_status","start","end","leasetime","config_network_dns","primary","secondary","show_network_dns_config","show_network_dhcp_leases","show_network_vlan","config_network_vlan","action","vid","interfaces","show_network_multicast","config_system","hostname","timezone","config_system_reboot","config_system_shutdown","config_system_rsfactory","config_system_ping","props","version","source","max","second","ttl","config_system_traceroute","config_system_password","current_password","new_password","config_system_update","config_url_filter","type","show_url_filter","show_ip_filter","config_ip_filter","src","dest","sport","dport","tcp_udp","config_mesh_controller","config_mesh_agent","show_mesh_config","show_mesh_table","config_network_openvpn_server","port","subnet","client_access","crt","ca","show_network_openvpn","config_network_openvpn_client","server_ip","server_port","config_network_openvpn_del","config_network_openvpn_dev","show_network_openvpn_list","folder","show_network_relay","config_network_relay","statusv4","statusv6","show_mesh_topology","show_web_data","show_network_routing"],"sources":["/home/iam/Documents/LocalWeb-master/src/service/api/ubus-api.tsx"],"sourcesContent":["import axios from 'axios'\n\nconst UBUS_PATH = 'ubus'\nconst DEFAULT_SESSION = '00000000000000000000000000000000'\n\nclass UbusApi {\n  ubusRpcSession = DEFAULT_SESSION\n\n  _instance: any = null\n  _reqId = 1\n\n  constructor(baseURL = '/') {\n    console.log('Creating api instance', baseURL)\n    this._instance = axios.create({ baseURL, timeout: 25000 })\n  }\n\n  cleanInit() {\n    this.ubusRpcSession = DEFAULT_SESSION\n  }\n\n  ubusCall = async (section: any, method: any, param = {}) => {\n    const inst: any = this._instance\n\n    let tokenString = sessionStorage.getItem('token');\n\n    if (method === 'login') {\n      tokenString = DEFAULT_SESSION\n    }\n\n    try {\n      const reqBody = {\n        jsonrpc: '2.0',\n        id: this._reqId++,\n        method: 'call',\n        params: [tokenString, section, method, param],\n      }\n      // console.log('reqBody', reqBody)\n      const resp = await inst.post(UBUS_PATH, reqBody)\n\n\n\n      if (resp.status === 200 || resp.status === 201) {\n        const { /*jsonrpc, id,*/ result, error } = resp.data\n        if (error) {\n          // code -32002; Access denied\n          // console.log(resp.data)\n          if (error.code === -32002) {\n            sessionStorage.removeItem('token')\n            window.location.href = '/'\n          }\n          return error\n        } else if (Array.isArray(result) && result?.length > 0) {\n          // code 2 = invalid param ?\n          return { code: result[0], data: result[1] }\n        } else {\n          return { code: -1, message: 'Invalid response', data: resp.data }\n        }\n      } else {\n        return { code: -2, message: 'Unexpected status', data: resp.data }\n      }\n    } catch (err: any) {\n      console.log('err', err)\n      return { code: -3, message: `${err.code} | ${err.message}` }\n    }\n  }\n\n  login = async (username: any, password = '') => {\n    const respData = await this.ubusCall('session', 'login', {\n      username,\n      password,\n    })\n    if (respData.code === 0) {\n      const { ubus_rpc_session /*timeout, expires*/ } = respData.data\n      this.ubusRpcSession = ubus_rpc_session\n    } else {\n      console.log('LoginError', respData)\n    }\n    return respData\n  }\n\n  systemInfo() {\n    let data=this.ubusCall('linksafe', 'dashboard')\n    return data\n  }\n\n  async uciGet(config: any, section: any, option: any) {\n    const result = await this.ubusCall('uci', 'get', {\n      \"config\":config,\n      \"section\":section,\n    })\n    if (result.code) {\n      return {}\n    }\n    const data: any = {\n      name: config,\n      sections: Object.values(result.data),\n    }\n    return data\n  }\n\n  async uciSet(config: any, section: any, values: any) {\n    const result = await this.ubusCall('uci', 'set', {\n      config,\n      section,\n      values,\n    })\n    if (result.code) {\n      console.log(result)\n      return {}\n    }\n    return result.data\n  }\n\n  async uciChanges(config: any) {\n    const result = await this.ubusCall('uci', 'changes', { config })\n    if (result.code) {\n      console.log(result)\n      return {}\n    }\n    // const { changes } = result.data\n    // {\"changes\": {\n    //   \"system\": [[\"set\", \"cfg01e48a\", \"hostname\", \"OpenWrt-Vbox\"]]\n    // }}\n    return result.data\n  }\n\n  async uciApply(rollback: any) {\n    const result = await this.ubusCall('uci', 'apply', { rollback, timeout: 25 })\n    if (result.code) {\n      console.log(result)\n      return {}\n    }\n    return result.data\n  }\n\n  async uciCommit(config: any) {\n    const result = await this.ubusCall('uci', 'commit', { config })\n    if (result.code) {\n      console.log(result)\n      return {}\n    }\n    return result.data\n  }\n\n  logout() {\n    this.cleanInit()\n  }\n\n  ////function web local\n\n  async linksafe_get_uuid() {\n    const result = await this.ubusCall('linksafe', 'linksafe_get_uuid', {})\n    if (result.code) {\n      console.log(result)\n      return {}\n    }\n    // console.log(result)\n    return result.data\n  }\n\n  async config_network_lan(ifname: any, protov4: any, ipv4: any, netmask: any, protov6: any, ipv6: any) {\n    const result = await this.ubusCall('linksafe', 'config_network_lan', { \"param\": [{ \"protov4\": protov4, \"ipaddrv4\": ipv4, \"netmask\": netmask, \"protov6\": protov6, \"ipaddrv6\": ipv6 }] })\n    if (result.code) {\n      console.log(result)\n      return {}\n    }\n    // console.log(result)\n    return result.data\n  }\n\n  async config_network_wireless(disabled: any, ssid: any, encryption: any, key: any) {\n    const result = await this.ubusCall('linksafe', 'config_network_wireless', { \"param\": [{ \"disabled\": disabled, \"ssid\": ssid, \"key\": key, \"encryption\": encryption }] })\n    if (result.code) {\n      console.log(result)\n      return {}\n    }\n    return result.data\n  }\n\n  async config_network_guest(disabled: any, ssid: any, encryption: any, key: any, limit: any, unit: any) {\n    console.log(\"result: \", disabled, ssid, encryption, key, limit, unit)\n    if (limit === null) {\n      const result = await this.ubusCall('linksafe', 'config_network_guest', { \"param\": [{ \"disabled\": disabled, \"ssid\": ssid, \"key\": key, \"encryption\": encryption }] })\n      if (result.code) {\n        return {}\n      }\n      return result.data\n    } else {\n      const result = await this.ubusCall('linksafe', 'config_network_guest', { \"param\": [{ \"disabled\": disabled, \"ssid\": ssid, \"key\": key, \"encryption\": encryption, \"limit_values\": limit, \"limit_unit\": unit }] })\n      if (result.code) {\n        return {}\n      }\n      return result.data\n    }\n  }\n\n  async config_network_wan(protov4: any, username: any, password: any, timeout: any, ipaddrv4: any, netmaskv4: any, gatewayv4: any, protov6: any, ipaddrv6: any, gatewayv6: any) {\n    switch (protov4) {\n      case 'static':\n        switch (protov6) {\n          case 'static':\n            const result1 = await this.ubusCall('linksafe', 'config_network_wan', { \"param\": [{ \"status\": \"enable\", \"ifname\": \"eth1\", \"name\": \"wan\", \"protov4\": protov4, \"username\": username, \"password\": password, \"timeout\": timeout, \"ipaddrv4\": ipaddrv4, \"netmaskv4\": netmaskv4, \"gatewayv4\": gatewayv4, \"protov6\": protov6, \"ipaddrv6\": ipaddrv6, \"gatewayv6\": gatewayv6 }] })\n            if (result1.code) {\n              console.log(result1)\n              return {}\n            }\n            return {};\n          default:\n            const result2 = await this.ubusCall('linksafe', 'config_network_wan', { \"param\": [{ \"status\": \"enable\",\"ifname\": \"eth1\", \"name\": \"wan\", \"protov4\": protov4,  \"username\": username, \"password\": password, \"timeout\": timeout, \"ipaddrv4\": ipaddrv4, \"netmaskv4\": netmaskv4, \"gatewayv4\": gatewayv4, \"protov6\": protov6 }] })\n            if (result2.code) {\n              console.log(result2)\n              // console.log(result2_wan6)\n              return {}\n            }\n        }\n        return {};\n      default:\n        switch (protov6) {\n          case 'static':\n            const result1 = await this.ubusCall('linksafe', 'config_network_wan', { \"param\": [{ \"status\": \"enable\",\"ifname\": \"eth1\", \"name\": \"wan\", \"protov4\": protov4,  \"username\": username, \"password\": password, \"timeout\": timeout, \"protov6\": protov6, \"ipaddrv6\": ipaddrv6, \"gatewayv6\": gatewayv6 }] })\n            if (result1.code) {\n              console.log(result1)\n              // console.log(result1_wan6)\n              return {}\n            }\n            return {};\n          default:\n            const result2 = await this.ubusCall('linksafe', 'config_network_wan', { \"param\": [{ \"status\": \"enable\",\"ifname\": \"eth1\", \"name\": \"wan\", \"protov4\": protov4,  \"username\": username, \"password\": password, \"timeout\": timeout, \"protov6\": protov6 }] })\n            if (result2.code) {\n              console.log(result2)\n              // console.log(result2_wan6)\n              return {}\n            }\n        }\n    }\n  }\n\n  async show_network_wireless() {\n    const result = await this.ubusCall('linksafe', 'show_network_wireless')\n    if (result.code) {\n      console.log(result)\n      return {}\n    }\n    // console.log(result)\n    return result.data\n  }\n\n  async show_network_guest() {\n    const result = await this.ubusCall('linksafe', 'show_network_guest')\n    if (result.code) {\n      console.log(result)\n      return {}\n    }\n    // console.log(result)\n    return result.data\n  }\n\n  async show_network_wan_congfig() {\n    const result = await this.ubusCall('linksafe', 'show_network_wan_config')\n    if (result.code) {\n      console.log(result)\n      return {}\n    }\n    // console.log(result)\n    return result.data\n  }\n\n  async config_network_ddns(provider: any, enabled: any, mode: any, url: any, username: any, password: any, domain: any) {\n    const result = await this.ubusCall('linksafe', 'config_network_ddns', { \"param\": [{ \"provider\": \"DynDNS\", \"enabled\": enabled, \"mode\": mode, \"url\": url, \"username\": username, \"password\": password, \"domain\": domain }] })\n    if (result.code) {\n      console.log(result)\n      return {}\n    }\n    // console.log(result)\n    return result.data\n  }\n\n  async show_network_ddns() {\n    const result = await this.ubusCall('linksafe', 'show_network_ddns')\n    if (result.code) {\n      console.log(result)\n      return {}\n    }\n    // console.log(result)\n    return result.data\n  }\n\n  async config_network_static(status: any,id:any, target: any, nexthop: any, metric: any, device: any) {\n    const result = await this.ubusCall('linksafe', 'config_network_static', { \"param\": [{ \"status\": status,\"id\":id , \"target\": target, \"nexthop\": nexthop, \"metric\": metric, \"device\": device }] })\n    if (result.code) {\n      console.log(result)\n      return {}\n    }\n    // console.log(result)\n    return result.data\n  }\n\n  async config_network_nat(status: any, name: any, protocol: any, wan_ip: any, wan_port: any, lan_ip: any, lan_port: any) {\n    const result = await this.ubusCall('linksafe', 'config_network_nat', { \"param\": [{ \"status\": status, \"name\": name, \"protocol\": protocol, \"wan_ip\": wan_ip, \"wan_port\": wan_port, \"lan_ip\": lan_ip, \"lan_port\": lan_port }] })\n    if (result.code) {\n      console.log(result)\n      return {}\n    }\n    // console.log(result)\n    return result.data\n  }\n\n  async show_network_nat() {\n    const result = await this.ubusCall('linksafe', 'show_network_nat')\n    if (result.code) {\n      console.log(result)\n      return {}\n    }\n    // console.log(result)\n    return result.data\n  }\n\n  async show_network_lan_config() {\n    const result = await this.ubusCall('linksafe', 'show_network_lan_config')\n    if (result.code) {\n      console.log(result)\n      return {}\n    }\n    // console.log(result)\n    return result.data\n  }\n\n  async show_network_lan() {\n    const result = await this.ubusCall('linksafe', 'show_network_lan')\n    if (result.code) {\n      console.log(result)\n      return {}\n    }\n    // console.log(result)\n    return result.data\n  }\n\n  async show_network_dhcp_config() {\n    const result = await this.ubusCall('linksafe', 'show_network_dhcp_config')\n    if (result.code) {\n      console.log(result)\n      return {}\n    }\n    // console.log(result)\n    return result.data\n  }\n\n  async config_network_dhcp(dhcpv4_status: any, dhcpv6_status: any, start: any, end: any, leasetime: any) {\n    const result = await this.ubusCall('linksafe', 'config_network_dhcp', { \"param\": [{ \"dhcpv4status\": dhcpv4_status, \"dhcpv6status\": dhcpv6_status, \"start\": start, \"end\": end, \"leasetime\": leasetime }] })\n    if (result.code) {\n      console.log(result)\n      return {}\n    }\n    // console.log(result)\n    return result.data\n  }\n\n  async config_network_dns(primary: any, secondary: any) {\n    const result = await this.ubusCall('linksafe', 'config_network_dns', { \"param\": [{ \"primary\": primary, \"secondary\": secondary }] })\n    if (result.code) {\n      console.log(result)\n      return {}\n    }\n    // console.log(result)\n    return result.data\n  }\n\n  async show_network_dns_config() {\n    const result = await this.ubusCall('linksafe', 'show_network_dns_config')\n    if (result.code) {\n      console.log(result)\n      return {}\n    }\n    // console.log(result)\n    return result.data\n  }\n\n  async show_network_dhcp_leases() {\n    const result = await this.ubusCall('linksafe', 'show_network_dhcp_leases')\n    if (result.code) {\n      console.log(result)\n      return {}\n    }\n    // console.log(result)\n    return result.data\n  }\n\n  async show_network_vlan() {\n    const result = await this.ubusCall('linksafe', 'show_network_vlan')\n    if (result.code) {\n      console.log(result)\n      return {}\n    }\n    // console.log(result)\n    return result.data\n  }\n\n  async config_network_vlan(mode: any, action: any,id:any, name: any, vid: any, interfaces: any) {\n    if (mode === \"access\") {\n      const result = await this.ubusCall('linksafe', 'config_network_vlan', { \"param\": [{ \"access\": { \"action\": action,\"id\":id, \"name\": name, \"vid\": vid, \"interface\": interfaces } }] })\n      if (result.code) {\n        console.log(result)\n        return {}\n      }\n      return result.data\n    } else {\n      const result = await this.ubusCall('linksafe', 'config_network_vlan', { \"param\": [{ \"trunk\": { \"action\": action,\"id\":id, \"interface\": interfaces, \"vid\": vid } }] })\n      if (result.code) {\n        console.log(result)\n        return {}\n      }\n      return result.data\n    }\n  }\n\nasync show_network_multicast() {\n  const result = await this.ubusCall('linksafe', 'show_network_multicast')\n  if (result.code) {\n    console.log(result)\n    return {}\n  }\n  // console.log(result)\n  return result.data\n}\n\n\n  /* system function */\n\n  async config_system(hostname: any, timezone: any) {\n    const result = await this.ubusCall('linksafe', 'config_system', {\"param\":[{\"hostname\": hostname,\"timezone\": timezone}]})\n    if (result.code) {\n      console.log(result)\n      return {}\n    }\n    // console.log(result)\n    return result.data\n  }\n\n  async config_system_reboot() {\n    const result = await this.ubusCall('linksafe', 'config_system_reboot', {})\n    if (result.code) {\n      console.log(result)\n      return {}\n    }\n    // console.log(result)\n    return result.data\n  }\n  async config_system_shutdown() {\n    const result = await this.ubusCall('linksafe', 'config_system_shutdown', {})\n    if (result.code) {\n      console.log(result)\n      return {}\n    }\n    // console.log(result)\n    return result.data\n  }\n  async config_system_rsfactory() {\n    const result = await this.ubusCall('linksafe', 'config_system_factory', {})\n    if (result.code) {\n      console.log(result)\n      return {}\n    }\n    // console.log(result)\n    return result.data\n  }\n\n  async config_system_ping(props: any) {\n    const { hostname, version, source, max, second, ttl } = props\n    const result = await this.ubusCall('linksafe', 'config_system_ping', { \"param\": [{ \"hostname\": hostname, \"version\": version, \"count\": max, \"sec\": second, \"ttl\": ttl, \"source\": source}] })\n    if (result.code) {\n     // console.log('ping',result)\n      return {}\n    }\n    // console.log(result)\n    return result.data\n  }\n\n  async config_system_traceroute(props: any) {\n    const { hostname, version, source, max, second, ttl } = props\n    const result = await this.ubusCall('linksafe', 'config_system_traceroute', { \"param\": [{ \"hostname\": hostname, \"version\": version, \"count\": max, \"sec\": second, \"ttl\": ttl, \"source\": source}] })\n    if (result.code) {\n     // console.log('ping',result)\n      return {}\n    }\n    // console.log(result)\n    return result.data\n  }\n\n  async config_system_password(props: any) {\n    const { current_password, new_password } = props\n    const result = await this.ubusCall('linksafe', 'config_system_password', { \"param\": [{ \"oldpass\": current_password, \"newpass\": new_password}] })\n    if (result.code) {\n     // console.log('ping',result)\n      return {}\n    }\n    // console.log(result)\n    return result.data\n  }\n\n  async config_system_update() {\n    const result = await this.ubusCall('linksafe', 'config_system_update', { })\n    if (result.code) {\n     // console.log('ping',result)\n      return {}\n    }\n    // console.log(result)\n    return result.data\n  }\n\n  /* acl function */\n  async config_url_filter(name: any, action: any, type: any, url: any) {\n    const result = await this.ubusCall('linksafe', 'config_acl', { \"param\": [{ \"name\": name, \"action\": action, \"type\": type, \"url\": url }] })\n    if (result.code) {\n      console.log(result)\n      return {}\n    }\n    // console.log(result)\n    return result.data\n  }\n\n  async show_url_filter() {\n    const result = await this.ubusCall('linksafe', 'show_acl')\n    if (result.code) {\n      console.log(result)\n      return {}\n    }\n    // console.log(result) \n    return result.data\n  }\n\n  async show_ip_filter() {\n    const result = await this.ubusCall('linksafe', 'show_acl')\n    if (result.code) {\n      console.log(result)\n      return {}\n    }\n    // console.log(result)\n    return result.data\n  }\n\n  async config_ip_filter(name: any, action: any, type: any, src: any, dest: any, sport: any, dport: any, tcp_udp: any) {\n    const result = await this.ubusCall('linksafe', 'config_acl', { \"param\": [{ \"name\": name, \"action\": action, \"type\": type, \"src\": src, \"dest\": dest, \"sport\": sport, \"dport\": dport, \"tcp_udp\": tcp_udp }] })\n    if (result.code) {\n      console.log(result)\n      return {}\n    }\n    // console.log(result)\n    return result.data\n  }\n  async config_mesh_controller(enabled: any, ssid: any, key: any) {\n    const result = await this.ubusCall('linksafe', 'config_mesh_controller', { \"param\": [{ \"enabled\": enabled, \"ssid\": ssid, \"key\": key }] })\n    if (result.code) {\n      console.log(result)\n      return {}\n    }\n    // console.log(result)\n    return result.data\n  }\n  async config_mesh_agent(enabled: any) {\n    const result = await this.ubusCall('linksafe', 'config_mesh_agent', { \"param\": [{ \"enabled\": enabled }] })\n    if (result.code) {\n      console.log(result)\n      return {}\n    }\n    // console.log(result)\n    return result.data\n  }\n  async show_mesh_config() {\n    const result = await this.ubusCall('linksafe', 'show_mesh_config')\n    if (result.code) {\n      console.log(result)\n      return {}\n    }\n    // console.log(result)\n    return result.data\n  }\n\n  async show_mesh_table() {\n    const result = await this.ubusCall('linksafe', 'show_mesh_table',)\n    if (result.code) {\n      console.log(result)\n      return {}\n    }\n    return result.data\n  }\n\n  async config_network_openvpn_server(action: any, name: any, status: any, mode: any, port: any, subnet: any, netmask: any, client_access: any, crt: any, key: any, ca: any) {\n    const result = await this.ubusCall('linksafe', 'config_network_openvpn', { \"param\": [{ \"action\": action, \"name\": name, \"status\": status, \"mode\": mode, \"port\": port, \"subnet\": subnet, \"netmask\": netmask,  \"client_access\": client_access, \"crt\": crt, \"key\": key, \"ca\": ca }] })\n    if (result.code) {\n      console.log(result)\n      return {}\n    }\n    // console.log(result)\n    return result.data\n  }\n\n  async show_network_openvpn() {\n    const result = await this.ubusCall('linksafe', 'show_network_openvpn')\n    if (result.code) {\n      console.log(result)\n      return {}\n    }\n    // console.log(result)\n    return result.data\n  }\n\n  async config_network_openvpn_client(action: any, name: any, status: any, mode: any, server_ip: any, server_port: any, crt: any, key: any, ca: any) {\n    const result = await this.ubusCall('linksafe', 'config_network_openvpn', { \"param\": [{ \"action\": action, \"name\": name, \"status\": status, \"mode\": mode, \"server_ip\": server_ip, \"server_port\": server_port, \"crt\": crt, \"key\": key, \"ca\": ca }] })\n    if (result.code) {\n      console.log(result)\n      return {}\n    }\n    return result.data\n  }\n\n  async config_network_openvpn_del(name: any) {\n    const result = await this.ubusCall('linksafe', 'config_network_openvpn', { \"param\": [{ \"action\": \"del\", \"name\": name }]})\n    if (result.code) {\n      console.log(result)\n      return {}\n    }\n    return result.data\n  }\n  async config_network_openvpn_dev( action: any, crt: any, key:any, ca :any) {\n    const result = await this.ubusCall('linksafe', 'config_network_openvpn', { \"param\": [{ \"action\": \"del_crt\", \"crt\": crt ,\"key\" : key, \"ca\": ca}]})\n    if (result.code) {\n      console.log(result)\n      return {}\n    }\n    return result.data\n  }\n  async show_network_openvpn_list(folder: any) {\n    const result = await this.ubusCall('linksafe', 'show_list_folder', { \"param\": folder})\n    if (result.code) {\n      console.log(result)\n      return {}\n    }\n    return result.data\n  }\n\n  async show_network_relay() {\n    const result = await this.ubusCall('linksafe', 'show_network_relay')\n    if (result.code) {\n      console.log(result)\n      return {}\n    }\n    return result.data\n  }\n\n  async config_network_relay(statusv4: any, statusv6: any) {\n    const result = await this.ubusCall('linksafe', 'config_network_relay', { \"param\": [{\"statusv4\": statusv4, \"statusv6\": statusv6}]})\n    if (result.code) {\n      console.log(result)\n      return {}\n    }\n    return result.data\n  }\n  \n  async show_mesh_topology() {\n    const result = await this.ubusCall('linksafe', 'show_mesh_topology')\n    if (result.code) {\n      console.log(result)\n      return {}\n    }\n    return result.data\n  }\n\n  async show_web_data(option: any) {\n    const result = await this.ubusCall('linksafe', 'show_web_data', { \"param\": option})\n    if (result.code) {\n\n      return {}\n    }\n    return result.data\n  }\n\n  async show_network_routing(option: any) {\n    const result = await this.ubusCall('linksafe', 'show_network_routing', { \"param\": option})\n    if (result.code) {\n      return {}\n    }\n    return result.data\n  }\n\n}\n\nexport default new UbusApi(\"http://192.168.15.142/\")\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}