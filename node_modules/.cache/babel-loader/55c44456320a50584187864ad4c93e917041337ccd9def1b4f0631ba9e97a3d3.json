{"ast":null,"code":"var _jsxFileName = \"/home/iam/Documents/LocalWeb-master/src/components/antd/security/ipfilter/edit.tsx\",\n  _s = $RefreshSig$();\nimport { Form, Input, Button, message, Select, InputNumber } from 'antd';\nimport React from 'react';\nimport ubusApi from '../../../../service/api/ubus-api';\nimport { useTranslation } from \"react-i18next\";\nimport \"../../../../translations/i18n\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const IpfilterEdit = props => {\n  _s();\n  //console.log(\"value: \",props)\n  const {\n    t\n  } = useTranslation();\n  let pattern = /^[a-zA-Z0-9_.]+$/;\n  let pattern1 = /^([-]?[1-9][0-9]*|0)$/;\n  let patternIpv4 = /^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n  let check1;\n  let check2;\n  const {\n    item,\n    onDone\n  } = props;\n  const [form] = Form.useForm();\n  const abc = t('error_fill');\n  const refreshData = async () => {\n    if (item) {\n      const {\n        name,\n        type,\n        src,\n        dest,\n        sport,\n        dport,\n        tcp_udp\n      } = item;\n      form.setFieldsValue({\n        name,\n        type,\n        src,\n        dest,\n        sport,\n        dport,\n        tcp_udp\n      });\n    }\n  };\n  React.useEffect(() => {\n    refreshData();\n  }, []);\n  const refreshPage = () => {\n    window.location.reload();\n  };\n  function randomName(length) {\n    let result = '';\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    const charactersLength = characters.length;\n    for (let i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  }\n  const onFinish = async values => {\n    message.info(t('Please_wait_for_configuration'));\n    if (values.name == null) {\n      await ubusApi.config_ip_filter(randomName(4), \"add\", values.type, values.src, values.dest, values.sport, values.dport, values.tcp_udp);\n      const key = 'success';\n      message.loading({\n        content: t('loading'),\n        key\n      });\n      setTimeout(() => {\n        message.success({\n          content: t('success'),\n          key,\n          duration: 2\n        });\n      }, 1000);\n      setTimeout(() => {\n        window.location.reload();\n      }, 1500);\n    } else {\n      await ubusApi.config_ip_filter(values.name, \"add\", values.type, values.src, values.dest, values.sport, values.dport, values.tcp_udp);\n      const key = 'success';\n      message.loading({\n        content: t('loading'),\n        key\n      });\n      setTimeout(() => {\n        message.success({\n          content: t('success'),\n          key,\n          duration: 2\n        });\n      }, 1000);\n      setTimeout(() => {\n        window.location.reload();\n      }, 1500);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    form: form,\n    labelCol: {\n      span: 6\n    },\n    wrapperCol: {\n      span: 16\n    },\n    onFinish: onFinish,\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      label: t('name'),\n      name: \"name\",\n      hidden: true,\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        disabled: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: t('action'),\n      name: \"type\",\n      rules: [{\n        required: true,\n        message: String(t(\"error_fill\"))\n      }],\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        defaultValue: t('default_action'),\n        options: [{\n          value: \"Block\",\n          label: t('block')\n        }, {\n          value: \"Permit\",\n          label: t('permit')\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: t('source_ip'),\n      name: \"src\",\n      rules: [{\n        required: true,\n        message: String(t(\"error_fill\"))\n      }, {\n        validator: (_, value) => {\n          check1 = value.split(\".\");\n          check2 = check1[check1.length - 1];\n          return Number(check2) < 256 && patternIpv4.test(value) ? Promise.resolve() : Promise.reject(t('Error_Ip_address'));\n        }\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        allowClear: true,\n        placeholder: \"xxx.xxx.xxx.xxx\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: t('dest_ip'),\n      name: \"dest\",\n      rules: [{\n        required: true,\n        message: String(t(\"error_fill\"))\n      }, {\n        validator: (_, value) => {\n          check1 = value.split(\".\");\n          check2 = check1[check1.length - 1];\n          return Number(check2) < 256 && patternIpv4.test(value) ? Promise.resolve() : Promise.reject(t('Error_Ip_address'));\n        }\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        allowClear: true,\n        placeholder: \"xxx.xxx.xxx.xxx\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"sport\",\n      label: t('source_port'),\n      children: /*#__PURE__*/_jsxDEV(InputNumber, {\n        min: 0,\n        max: 65553,\n        style: {\n          width: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: t('dest_port'),\n      name: \"dport\",\n      children: /*#__PURE__*/_jsxDEV(InputNumber, {\n        min: 0,\n        max: 65553,\n        style: {\n          width: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: t('protocol'),\n      name: \"tcp_udp\",\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        defaultValue: t('select_proto'),\n        options: [{\n          value: \"none\",\n          label: \"None\"\n        }, {\n          value: \"udp\",\n          label: \"UDP\"\n        }, {\n          value: \"tcp\",\n          label: \"TCP\"\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      wrapperCol: {\n        offset: 6,\n        span: 16\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\"\n        //onClick={() => refreshPage()}\n        ,\n        children: t('submit')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_s(IpfilterEdit, \"Df3VoqEovo6yxtyGvcenbXJVU9g=\", false, function () {\n  return [useTranslation, Form.useForm];\n});\n_c = IpfilterEdit;\nvar _c;\n$RefreshReg$(_c, \"IpfilterEdit\");","map":{"version":3,"names":["Form","Input","Button","message","Select","InputNumber","React","ubusApi","useTranslation","IpfilterEdit","props","t","pattern","pattern1","patternIpv4","check1","check2","item","onDone","form","useForm","abc","refreshData","name","type","src","dest","sport","dport","tcp_udp","setFieldsValue","useEffect","refreshPage","window","location","reload","randomName","length","result","characters","charactersLength","i","charAt","Math","floor","random","onFinish","values","info","config_ip_filter","key","loading","content","setTimeout","success","duration","span","required","String","value","label","validator","_","split","Number","test","Promise","resolve","reject","width","offset"],"sources":["/home/iam/Documents/LocalWeb-master/src/components/antd/security/ipfilter/edit.tsx"],"sourcesContent":["import { message as antdMessage, Form, Input, Button, message, Select, InputNumber } from 'antd'\nimport React from 'react'\nimport ubusApi from '../../../../service/api/ubus-api'\nimport { useTranslation } from \"react-i18next\"\nimport \"../../../../translations/i18n\"\n\nexport const IpfilterEdit = (props: any) => {\n    //console.log(\"value: \",props)\n    const { t } = useTranslation()\n    let pattern = /^[a-zA-Z0-9_.]+$/\n    let pattern1 = /^([-]?[1-9][0-9]*|0)$/\n    let patternIpv4 = /^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/\n    let check1: any\n    let check2: any\n    const { item, onDone } = props\n    const [form] = Form.useForm()\n    const abc = t('error_fill')\n    const refreshData = async () => {\n        if (item) {\n            const { name, type, src, dest, sport, dport, tcp_udp, } = item\n            form.setFieldsValue({\n                name, type, src, dest, sport, dport, tcp_udp,\n            })\n        }\n    }\n    React.useEffect(() => {\n        refreshData()\n    }, [])\n\n    const refreshPage = () => {\n        window.location.reload()\n    }\n    function randomName(length: number) {\n        let result = ''\n        const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n        const charactersLength = characters.length\n        for (let i = 0; i < length; i++) {\n          result += characters.charAt(Math.floor(Math.random() * charactersLength))\n        }\n        return result\n    }\n\n    const onFinish = async (values: any) => {\n        message.info(t('Please_wait_for_configuration'))\n        if (values.name == null ) {\n\n            await ubusApi.config_ip_filter( randomName(4), \"add\", values.type, values.src, values.dest, values.sport, values.dport, values.tcp_udp)\n            const key = 'success';\n            message.loading({ content: t('loading'), key });\n            setTimeout(() => {\n                message.success({ content: t('success'), key, duration: 2 });\n            }, 1000);\n            setTimeout(() => {\n                window.location.reload()\n            }, 1500);\n        } else {\n            \n            await ubusApi.config_ip_filter( values.name, \"add\", values.type, values.src, values.dest, values.sport, values.dport, values.tcp_udp)\n            const key = 'success';\n            message.loading({ content: t('loading'), key });\n            setTimeout(() => {\n                message.success({ content: t('success'), key, duration: 2 });\n            }, 1000);\n            setTimeout(() => {\n                window.location.reload()\n            }, 1500);\n        }\n    }\n\n    return (\n        <Form\n            form={form}\n            labelCol={{ span: 6 }}\n            wrapperCol={{ span: 16 }}\n            onFinish={onFinish}\n        >\n            <Form.Item label={t('name')} name=\"name\" hidden \n            >\n                <Input disabled></Input>\n            </Form.Item>\n            <Form.Item label={t('action')} name=\"type\"\n                rules={[{ required: true, message:  String(t(\"error_fill\"))  }]}\n            >\n                <Select\n                    defaultValue={t('default_action')}\n                    options={[\n                        {\n                            value: \"Block\",\n                            label: t('block')\n                        },\n                        {\n                            value: \"Permit\",\n                            label: t('permit')\n                        },\n                    ]}\n                ></Select>\n            </Form.Item>\n            <Form.Item label={t('source_ip')} name=\"src\"\n                rules={[\n                    { required: true, message: String(t(\"error_fill\")) },\n                    {\n                        validator: (_, value) => {\n                          check1 = value.split(\".\")\n                          check2 = check1[check1.length - 1]\n                          return (Number(check2) < 256 && patternIpv4.test(value)) ? Promise.resolve() : Promise.reject(t('Error_Ip_address'))\n                        }\n                    }\n                ]}\n            >\n                <Input allowClear placeholder=\"xxx.xxx.xxx.xxx\" ></Input>\n            </Form.Item>\n            <Form.Item label={t('dest_ip')} name=\"dest\"\n                rules={[\n                    { required: true, message: String(t(\"error_fill\")) },\n                    {\n                        validator: (_, value) => {\n                          check1 = value.split(\".\")\n                          check2 = check1[check1.length - 1]\n                          return (Number(check2) < 256 && patternIpv4.test(value)) ? Promise.resolve() : Promise.reject(t('Error_Ip_address'))\n                        }\n                    }\n                ]}\n            >\n                <Input allowClear placeholder=\"xxx.xxx.xxx.xxx\" ></Input>\n            </Form.Item>\n            <Form.Item name=\"sport\"\n                label={t('source_port')}\n            >\n                 <InputNumber min={0} max={65553} style={{ width: '100%' }}  ></InputNumber>\n            </Form.Item>\n            <Form.Item label={t('dest_port')} name=\"dport\"\n            >\n               <InputNumber min={0} max={65553} style={{ width: '100%' }}  ></InputNumber>\n            </Form.Item>\n            <Form.Item label={t('protocol')} name=\"tcp_udp\"\n            >\n                <Select\n                    defaultValue={t('select_proto')}\n                    options={[\n                        {\n                            value: \"none\",\n                            label: \"None\"\n                        },\n                        {\n                            value: \"udp\",\n                            label: \"UDP\"\n                        },\n                        {\n                            value: \"tcp\",\n                            label: \"TCP\"\n                        },\n                    ]}\n                ></Select>\n            </Form.Item>\n\n            <Form.Item wrapperCol={{ offset: 6, span: 16 }}>\n                <Button\n                    type='primary'\n                    htmlType=\"submit\"\n                //onClick={() => refreshPage()}\n                >\n                    {t('submit')}\n                </Button>\n            </Form.Item>\n\n        </Form>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}