{"ast":null,"code":"import { __spreadArrays } from \"tslib\";\nimport { get } from '@antv/util';\nimport { animation, annotation, interaction as commonInteraction, legend, theme, tooltip } from '../../adaptor/common';\nimport { polygon as basePolygon } from '../../adaptor/geometries/polygon';\nimport { pattern } from '../../adaptor/pattern';\nimport { deepAssign, flow } from '../../utils';\nimport { getAdjustAppendPadding } from '../../utils/padding';\nimport { enableDrillInteraction, findInteraction, transformData } from './utils';\n/**\n * Ëé∑ÂèñÈªòËÆ§ option\n * @param params\n */\nfunction defaultOptions(params) {\n  var options = params.options;\n  var colorField = options.colorField;\n  return deepAssign({\n    options: {\n      rawFields: ['value'],\n      tooltip: {\n        fields: ['name', 'value', colorField, 'path'],\n        formatter: function (data) {\n          return {\n            name: data.name,\n            value: data.value\n          };\n        }\n      }\n    }\n  }, params);\n}\n/**\n * Â≠óÊÆµ\n * @param params\n */\nfunction geometry(params) {\n  var chart = params.chart,\n    options = params.options;\n  var color = options.color,\n    colorField = options.colorField,\n    rectStyle = options.rectStyle,\n    hierarchyConfig = options.hierarchyConfig,\n    rawFields = options.rawFields;\n  var data = transformData({\n    data: options.data,\n    colorField: options.colorField,\n    enableDrillDown: enableDrillInteraction(options),\n    hierarchyConfig: hierarchyConfig\n  });\n  chart.data(data);\n  // geometry\n  basePolygon(deepAssign({}, params, {\n    options: {\n      xField: 'x',\n      yField: 'y',\n      seriesField: colorField,\n      rawFields: rawFields,\n      polygon: {\n        color: color,\n        style: rectStyle\n      }\n    }\n  }));\n  // ÂÅö‰∏Ä‰∏™ÂèçËΩ¨ÔºåËøôÊ†∑ÈÖçÂêàÊéíÂ∫èÔºåÂèØ‰ª•Â∞ÜÊúÄÂ§ßÂÄºÊîæÂà∞Â∑¶‰∏äËßíÔºåÊúÄÂ∞èÂÄºÊîæÂà∞Âè≥‰∏ãËßí\n  chart.coordinate().reflect('y');\n  return params;\n}\n/**\n * ÂùêÊ†áËΩ¥\n * @param params\n */\nfunction axis(params) {\n  var chart = params.chart;\n  chart.axis(false);\n  return params;\n}\nfunction adaptorInteraction(options) {\n  var drilldown = options.drilldown,\n    _a = options.interactions,\n    interactions = _a === void 0 ? [] : _a;\n  var enableDrillDown = enableDrillInteraction(options);\n  if (enableDrillDown) {\n    return deepAssign({}, options, {\n      interactions: __spreadArrays(interactions, [{\n        type: 'drill-down',\n        // üöì Ëøô‰∏çÊòØ‰∏Ä‰∏™ËßÑËåÉÁöÑ APIÔºåÂêéÁª≠‰ºöÂèòÊõ¥„ÄÇÊÖéÈáçÂèÇËÄÉ\n        cfg: {\n          drillDownConfig: drilldown,\n          transformData: transformData\n        }\n      }])\n    });\n  }\n  return options;\n}\n/**\n * Interaction ÈÖçÁΩÆ\n * @param params\n */\nexport function interaction(params) {\n  var chart = params.chart,\n    options = params.options;\n  var interactions = options.interactions,\n    drilldown = options.drilldown;\n  commonInteraction({\n    chart: chart,\n    options: adaptorInteraction(options)\n  });\n  // ÈÄÇÈÖç view-zoom\n  var viewZoomInteraction = findInteraction(interactions, 'view-zoom');\n  if (viewZoomInteraction) {\n    // ÂºÄÂêØÁº©Êîæ interaction ÂêéÔºåÂàôÈòªÊ≠¢ÈªòËÆ§ÊªöÂä®‰∫ã‰ª∂ÔºåÈÅøÂÖçÊï¥‰∏™Á™óÂè£ÁöÑÊªöÂä®\n    if (viewZoomInteraction.enable !== false) {\n      chart.getCanvas().on('mousewheel', function (ev) {\n        ev.preventDefault();\n      });\n    } else {\n      // ÊâãÂä®ÂÖ≥Èó≠ÂêéÔºåÊ∏ÖÈô§„ÄÇ‰ªÖÂØπÂ£∞Êòé viewZoomInteraction ÁöÑÊ∏ÖÈô§„ÄÇ\n      chart.getCanvas().off('mousewheel');\n    }\n  }\n  // ÈÄÇÂ∫î‰∏ãÈíª‰∫§‰∫íÈù¢ÂåÖÂ±ë\n  var enableDrillDown = enableDrillInteraction(options);\n  if (enableDrillDown) {\n    // ‰∏∫Èù¢ÂåÖÂ±ëÂú®Â∫ïÈÉ®ÁïôÂá∫ 25px ÁöÑÁ©∫Èó¥\n    chart.appendPadding = getAdjustAppendPadding(chart.appendPadding, get(drilldown, ['breadCrumb', 'position']));\n  }\n  return params;\n}\n/**\n * Áü©ÂΩ¢Ê†ëÂõæ\n * @param chart\n * @param options\n */\nexport function adaptor(params) {\n  return flow(defaultOptions, theme, pattern('rectStyle'), geometry, axis, legend, tooltip, interaction, animation, annotation())(params);\n}","map":{"version":3,"mappings":"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","names":["get","animation","annotation","interaction","commonInteraction","legend","theme","tooltip","polygon","basePolygon","pattern","deepAssign","flow","getAdjustAppendPadding","enableDrillInteraction","findInteraction","transformData","defaultOptions","params","options","rawFields","fields","colorField","formatter","data","name","value","geometry","rectStyle","hierarchyConfig","enableDrillDown","chart","xField","yField","seriesField","color","style","coordinate","reflect","axis","adaptorInteraction","_a","interactions","type","cfg","drillDownConfig","drilldown","viewZoomInteraction","enable","getCanvas","on","ev","preventDefault","off","appendPadding","adaptor"],"sources":["/home/iam/Documents/network/node_modules/@antv/g2plot/src/plots/treemap/adaptor.ts"],"sourcesContent":["import { get } from '@antv/util';\nimport { animation, annotation, interaction as commonInteraction, legend, theme, tooltip } from '../../adaptor/common';\nimport { polygon as basePolygon } from '../../adaptor/geometries/polygon';\nimport { pattern } from '../../adaptor/pattern';\nimport { Params } from '../../core/adaptor';\nimport { deepAssign, flow } from '../../utils';\nimport { getAdjustAppendPadding } from '../../utils/padding';\nimport { TreemapOptions } from './types';\nimport { enableDrillInteraction, findInteraction, transformData } from './utils';\n\n/**\n * Ëé∑ÂèñÈªòËÆ§ option\n * @param params\n */\nfunction defaultOptions(params: Params<TreemapOptions>): Params<TreemapOptions> {\n  const { options } = params;\n  const { colorField } = options;\n\n  return deepAssign(\n    {\n      options: {\n        rawFields: ['value'],\n        tooltip: {\n          fields: ['name', 'value', colorField, 'path'],\n          formatter: (data) => {\n            return {\n              name: data.name,\n              value: data.value,\n            };\n          },\n        },\n      },\n    },\n    params\n  );\n}\n\n/**\n * Â≠óÊÆµ\n * @param params\n */\nfunction geometry(params: Params<TreemapOptions>): Params<TreemapOptions> {\n  const { chart, options } = params;\n  const { color, colorField, rectStyle, hierarchyConfig, rawFields } = options;\n\n  const data = transformData({\n    data: options.data,\n    colorField: options.colorField,\n    enableDrillDown: enableDrillInteraction(options),\n    hierarchyConfig,\n  });\n\n  chart.data(data);\n\n  // geometry\n  basePolygon(\n    deepAssign({}, params, {\n      options: {\n        xField: 'x',\n        yField: 'y',\n        seriesField: colorField,\n        rawFields: rawFields,\n        polygon: {\n          color,\n          style: rectStyle,\n        },\n      },\n    })\n  );\n\n  // ÂÅö‰∏Ä‰∏™ÂèçËΩ¨ÔºåËøôÊ†∑ÈÖçÂêàÊéíÂ∫èÔºåÂèØ‰ª•Â∞ÜÊúÄÂ§ßÂÄºÊîæÂà∞Â∑¶‰∏äËßíÔºåÊúÄÂ∞èÂÄºÊîæÂà∞Âè≥‰∏ãËßí\n  chart.coordinate().reflect('y');\n\n  return params;\n}\n\n/**\n * ÂùêÊ†áËΩ¥\n * @param params\n */\nfunction axis(params: Params<TreemapOptions>): Params<TreemapOptions> {\n  const { chart } = params;\n  chart.axis(false);\n  return params;\n}\n\nfunction adaptorInteraction(options: TreemapOptions): TreemapOptions {\n  const { drilldown, interactions = [] } = options;\n\n  const enableDrillDown = enableDrillInteraction(options);\n  if (enableDrillDown) {\n    return deepAssign({}, options, {\n      interactions: [\n        ...interactions,\n        {\n          type: 'drill-down',\n          // üöì Ëøô‰∏çÊòØ‰∏Ä‰∏™ËßÑËåÉÁöÑ APIÔºåÂêéÁª≠‰ºöÂèòÊõ¥„ÄÇÊÖéÈáçÂèÇËÄÉ\n          cfg: { drillDownConfig: drilldown, transformData },\n        },\n      ],\n    });\n  }\n  return options;\n}\n\n/**\n * Interaction ÈÖçÁΩÆ\n * @param params\n */\nexport function interaction(params: Params<TreemapOptions>): Params<TreemapOptions> {\n  const { chart, options } = params;\n  const { interactions, drilldown } = options;\n\n  commonInteraction({\n    chart,\n    options: adaptorInteraction(options),\n  });\n\n  // ÈÄÇÈÖç view-zoom\n  const viewZoomInteraction = findInteraction(interactions, 'view-zoom');\n\n  if (viewZoomInteraction) {\n    // ÂºÄÂêØÁº©Êîæ interaction ÂêéÔºåÂàôÈòªÊ≠¢ÈªòËÆ§ÊªöÂä®‰∫ã‰ª∂ÔºåÈÅøÂÖçÊï¥‰∏™Á™óÂè£ÁöÑÊªöÂä®\n    if (viewZoomInteraction.enable !== false) {\n      chart.getCanvas().on('mousewheel', (ev) => {\n        ev.preventDefault();\n      });\n    } else {\n      // ÊâãÂä®ÂÖ≥Èó≠ÂêéÔºåÊ∏ÖÈô§„ÄÇ‰ªÖÂØπÂ£∞Êòé viewZoomInteraction ÁöÑÊ∏ÖÈô§„ÄÇ\n      chart.getCanvas().off('mousewheel');\n    }\n  }\n\n  // ÈÄÇÂ∫î‰∏ãÈíª‰∫§‰∫íÈù¢ÂåÖÂ±ë\n  const enableDrillDown = enableDrillInteraction(options);\n  if (enableDrillDown) {\n    // ‰∏∫Èù¢ÂåÖÂ±ëÂú®Â∫ïÈÉ®ÁïôÂá∫ 25px ÁöÑÁ©∫Èó¥\n    chart.appendPadding = getAdjustAppendPadding(chart.appendPadding, get(drilldown, ['breadCrumb', 'position']));\n  }\n  return params;\n}\n\n/**\n * Áü©ÂΩ¢Ê†ëÂõæ\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<TreemapOptions>) {\n  return flow(\n    defaultOptions,\n    theme,\n    pattern('rectStyle'),\n    geometry,\n    axis,\n    legend,\n    tooltip,\n    interaction,\n    animation,\n    annotation()\n  )(params);\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}