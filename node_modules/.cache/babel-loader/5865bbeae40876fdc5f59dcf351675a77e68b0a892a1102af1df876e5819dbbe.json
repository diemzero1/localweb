{"ast":null,"code":"import { __assign, __extends, __rest } from \"tslib\";\nimport { clamp, deepMix, each, filter, get, mix, isNumber, isFunction } from '@antv/util';\nimport { ellipsisLabel } from '../util/label';\nimport { getMatrixByAngle, getMatrixByTranslate } from '../util/matrix';\nimport { getStatesStyle } from '../util/state';\nimport Theme from '../util/theme';\nimport LegendBase from './base';\n/**\n * 分页器 默认配置\n */\nvar DEFAULT_PAGE_NAVIGATOR = {\n  marker: {\n    style: {\n      inactiveFill: '#000',\n      inactiveOpacity: 0.45,\n      fill: '#000',\n      opacity: 1,\n      size: 12\n    }\n  },\n  text: {\n    style: {\n      fill: '#ccc',\n      fontSize: 12\n    }\n  }\n};\n// 默认 文本style\nvar textStyle = {\n  fill: Theme.textColor,\n  fontSize: 12,\n  textAlign: 'start',\n  textBaseline: 'middle',\n  fontFamily: Theme.fontFamily,\n  fontWeight: 'normal',\n  lineHeight: 12\n};\nvar RIGHT_ARROW_NAME = 'navigation-arrow-right';\nvar LEFT_ARROW_NAME = 'navigation-arrow-left';\nvar ROTATE_MAP = {\n  right: 90 * Math.PI / 180,\n  left: (360 - 90) * Math.PI / 180,\n  up: 0,\n  down: 180 * Math.PI / 180\n};\nvar Category = /** @class */function (_super) {\n  __extends(Category, _super);\n  function Category() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.currentPageIndex = 1;\n    _this.totalPagesCnt = 1;\n    _this.pageWidth = 0;\n    _this.pageHeight = 0;\n    _this.startX = 0;\n    _this.startY = 0;\n    _this.onNavigationBack = function () {\n      var itemGroup = _this.getElementByLocalId('item-group');\n      if (_this.currentPageIndex > 1) {\n        _this.currentPageIndex -= 1;\n        _this.updateNavigation();\n        var matrix = _this.getCurrentNavigationMatrix();\n        if (_this.get('animate')) {\n          itemGroup.animate({\n            matrix: matrix\n          }, 100);\n        } else {\n          itemGroup.attr({\n            matrix: matrix\n          });\n        }\n      }\n    };\n    _this.onNavigationAfter = function () {\n      var itemGroup = _this.getElementByLocalId('item-group');\n      if (_this.currentPageIndex < _this.totalPagesCnt) {\n        _this.currentPageIndex += 1;\n        _this.updateNavigation();\n        var matrix = _this.getCurrentNavigationMatrix();\n        if (_this.get('animate')) {\n          itemGroup.animate({\n            matrix: matrix\n          }, 100);\n        } else {\n          itemGroup.attr({\n            matrix: matrix\n          });\n        }\n      }\n    };\n    return _this;\n  }\n  Category.prototype.getDefaultCfg = function () {\n    var cfg = _super.prototype.getDefaultCfg.call(this);\n    return __assign(__assign({}, cfg), {\n      name: 'legend',\n      type: 'category',\n      itemSpacing: 24,\n      itemMarginBottom: 8,\n      maxItemWidth: null,\n      itemWidth: null,\n      itemHeight: null,\n      itemName: {},\n      itemValue: null,\n      maxWidth: null,\n      maxHeight: null,\n      marker: {},\n      radio: null,\n      items: [],\n      itemStates: {},\n      itemBackground: {},\n      pageNavigator: {},\n      defaultCfg: {\n        title: {\n          spacing: 5,\n          style: {\n            fill: Theme.textColor,\n            fontSize: 12,\n            textAlign: 'start',\n            textBaseline: 'top'\n          }\n        },\n        background: {\n          padding: 5,\n          style: {\n            stroke: Theme.lineColor\n          }\n        },\n        itemBackground: {\n          style: {\n            opacity: 0,\n            fill: '#fff'\n          }\n        },\n        pageNavigator: DEFAULT_PAGE_NAVIGATOR,\n        itemName: {\n          spacing: 16,\n          style: textStyle\n        },\n        marker: {\n          spacing: 8,\n          style: {\n            r: 6,\n            symbol: 'circle'\n          }\n        },\n        itemValue: {\n          alignRight: false,\n          formatter: null,\n          style: textStyle,\n          spacing: 6\n        },\n        itemStates: {\n          active: {\n            nameStyle: {\n              opacity: 0.8\n            }\n          },\n          unchecked: {\n            nameStyle: {\n              fill: Theme.uncheckedColor\n            },\n            markerStyle: {\n              fill: Theme.uncheckedColor,\n              stroke: Theme.uncheckedColor\n            }\n          },\n          inactive: {\n            nameStyle: {\n              fill: Theme.uncheckedColor\n            },\n            markerStyle: {\n              opacity: 0.2\n            }\n          }\n        }\n      }\n    });\n  };\n  // 实现 IList 接口\n  Category.prototype.isList = function () {\n    return true;\n  };\n  /**\n   * 获取图例项\n   * @return {ListItem[]} 列表项集合\n   */\n  Category.prototype.getItems = function () {\n    return this.get('items');\n  };\n  /**\n   * 设置列表项\n   * @param {ListItem[]} items 列表项集合\n   */\n  Category.prototype.setItems = function (items) {\n    this.update({\n      items: items\n    });\n  };\n  /**\n   * 更新列表项\n   * @param {ListItem} item 列表项\n   * @param {object}   cfg  列表项\n   */\n  Category.prototype.updateItem = function (item, cfg) {\n    mix(item, cfg);\n    this.clear(); // 由于单个图例项变化，会引起全局变化，所以全部更新\n    this.render();\n  };\n  /**\n   * 清空列表\n   */\n  Category.prototype.clearItems = function () {\n    var itemGroup = this.getElementByLocalId('item-group');\n    itemGroup && itemGroup.clear();\n  };\n  /**\n   * 设置列表项的状态\n   * @param {ListItem} item  列表项\n   * @param {string}   state 状态名\n   * @param {boolean}  value 状态值, true, false\n   */\n  Category.prototype.setItemState = function (item, state, value) {\n    item[state] = value;\n    var itemElement = this.getElementByLocalId(\"item-\" + item.id);\n    if (itemElement) {\n      var items = this.getItems();\n      var index = items.indexOf(item);\n      var offsetGroup = this.createOffScreenGroup(); // 离屏的 group\n      var newElement = this.drawItem(item, index, this.getItemHeight(), offsetGroup);\n      this.updateElements(newElement, itemElement); // 更新整个分组\n      this.clearUpdateStatus(itemElement); // 清理更新状态，防止出现 bug\n    }\n  };\n  /**\n   * 是否存在指定的状态\n   * @param {ListItem} item  列表项\n   * @param {boolean} state 状态名\n   */\n  Category.prototype.hasState = function (item, state) {\n    return !!item[state];\n  };\n  Category.prototype.getItemStates = function (item) {\n    var itemStates = this.get('itemStates');\n    var rst = [];\n    each(itemStates, function (v, k) {\n      if (item[k]) {\n        // item.selected\n        rst.push(k);\n      }\n    });\n    return rst;\n  };\n  /**\n   * 清楚所有列表项的状态\n   * @param {string} state 状态值\n   */\n  Category.prototype.clearItemsState = function (state) {\n    var _this = this;\n    var items = this.getItemsByState(state);\n    each(items, function (item) {\n      _this.setItemState(item, state, false);\n    });\n  };\n  /**\n   * 根据状态获取图例项\n   * @param  {string}     state [description]\n   * @return {ListItem[]}       [description]\n   */\n  Category.prototype.getItemsByState = function (state) {\n    var _this = this;\n    var items = this.getItems();\n    return filter(items, function (item) {\n      return _this.hasState(item, state);\n    });\n  };\n  // 绘制 legend 的选项\n  Category.prototype.drawLegendContent = function (group) {\n    this.processItems();\n    this.drawItems(group);\n  };\n  // 防止未设置 id\n  Category.prototype.processItems = function () {\n    var items = this.get('items');\n    each(items, function (item) {\n      if (!item.id) {\n        // 如果没有设置 id，默认使用 name\n        item.id = item.name;\n      }\n    });\n  };\n  // 绘制所有的图例选项\n  Category.prototype.drawItems = function (group) {\n    var _this = this;\n    var itemContainerGroup = this.addGroup(group, {\n      id: this.getElementId('item-container-group'),\n      name: 'legend-item-container-group'\n    });\n    var itemGroup = this.addGroup(itemContainerGroup, {\n      id: this.getElementId('item-group'),\n      name: 'legend-item-group'\n    });\n    var itemHeight = this.getItemHeight();\n    var itemWidth = this.get('itemWidth');\n    var itemSpacing = this.get('itemSpacing');\n    var itemMarginBottom = this.get('itemMarginBottom');\n    var currentPoint = this.get('currentPoint');\n    var startX = currentPoint.x;\n    var startY = currentPoint.y;\n    var layout = this.get('layout');\n    var items = this.get('items');\n    var wrapped = false;\n    var pageWidth = 0;\n    var maxWidth = this.get('maxWidth'); // 最大宽度，会导致 layout : 'horizontal' 时自动换行\n    var maxHeight = this.get('maxHeight'); // 最大高度，会导致出现分页\n    // 暂时不考虑分页\n    each(items, function (item, index) {\n      var subGroup = _this.drawItem(item, index, itemHeight, itemGroup);\n      var bbox = subGroup.getBBox();\n      var width = itemWidth || bbox.width;\n      if (width > pageWidth) {\n        pageWidth = width;\n      }\n      if (layout === 'horizontal') {\n        // 如果水平布局\n        if (maxWidth && maxWidth < currentPoint.x + width - startX) {\n          // 检测是否换行\n          wrapped = true;\n          currentPoint.x = startX;\n          currentPoint.y += itemHeight + itemMarginBottom;\n        }\n        _this.moveElementTo(subGroup, currentPoint);\n        currentPoint.x += width + itemSpacing;\n      } else {\n        // 如果垂直布局\n        if (maxHeight && maxHeight < currentPoint.y + itemHeight + itemMarginBottom - startY) {\n          // 换行\n          wrapped = true;\n          currentPoint.x += pageWidth + itemSpacing;\n          currentPoint.y = startY;\n          pageWidth = 0;\n        }\n        _this.moveElementTo(subGroup, currentPoint);\n        currentPoint.y += itemHeight + itemMarginBottom; // itemSpacing 仅影响水平间距\n      }\n    });\n\n    if (wrapped && this.get('flipPage')) {\n      this.pageHeight = 0;\n      this.pageWidth = 0;\n      this.totalPagesCnt = 1;\n      this.startX = startX;\n      this.startY = startY;\n      this.adjustNavigation(group, itemGroup);\n    }\n  };\n  // 获取图例项的高度，如果未定义，则按照 name 的高度计算\n  Category.prototype.getItemHeight = function () {\n    var itemHeight = this.get('itemHeight');\n    if (!itemHeight) {\n      var style_1 = (this.get('itemName') || {}).style;\n      if (isFunction(style_1)) {\n        var items_1 = this.getItems();\n        items_1.forEach(function (item, index) {\n          var fontSize = __assign(__assign({}, textStyle), style_1(item, index, items_1)).fontSize;\n          if (itemHeight < fontSize) {\n            itemHeight = fontSize;\n          }\n        });\n      } else if (style_1) {\n        itemHeight = style_1.fontSize;\n      }\n    }\n    return itemHeight;\n  };\n  // 绘制 marker\n  Category.prototype.drawMarker = function (container, markerCfg, item, itemHeight) {\n    var markerAttrs = __assign(__assign(__assign({\n      x: 0,\n      y: itemHeight / 2\n    }, markerCfg.style), {\n      symbol: get(item.marker, 'symbol', 'circle')\n    }), get(item.marker, 'style', {}));\n    var shape = this.addShape(container, {\n      type: 'marker',\n      id: this.getElementId(\"item-\" + item.id + \"-marker\"),\n      name: 'legend-item-marker',\n      attrs: markerAttrs\n    });\n    var bbox = shape.getBBox();\n    shape.attr('x', bbox.width / 2); // marker 需要左对齐，所以不能占用左侧的空间\n    var _a = shape.attr(),\n      stroke = _a.stroke,\n      fill = _a.fill;\n    if (stroke) {\n      shape.set('isStroke', true);\n    }\n    if (fill) {\n      shape.set('isFill', true);\n    }\n    return shape;\n  };\n  // 绘制文本\n  Category.prototype.drawItemText = function (container, textName, cfg, item, itemHeight, xPosition, index) {\n    var formatter = cfg.formatter;\n    var style = cfg.style;\n    var attrs = __assign(__assign({\n      x: xPosition,\n      y: itemHeight / 2,\n      text: formatter ? formatter(item[textName], item, index) : item[textName]\n    }, textStyle), isFunction(style) ? style(item, index, this.getItems()) : style);\n    return this.addShape(container, {\n      type: 'text',\n      id: this.getElementId(\"item-\" + item.id + \"-\" + textName),\n      name: \"legend-item-\" + textName,\n      attrs: attrs\n    });\n  };\n  Category.prototype.drawRadio = function (container, radioCfg, item, itemHeight, x) {\n    var _a, _b;\n    var style = radioCfg.style || {};\n    // 以用户设置的 r 为主\n    var r = (_a = style.r) !== null && _a !== void 0 ? _a : itemHeight / 2;\n    var lineWidth = r * 3.6 / 8;\n    var _c = [x + r, itemHeight / 2 - r],\n      x0 = _c[0],\n      y0 = _c[1];\n    var _d = [x0 + r, y0 + r],\n      x1 = _d[0],\n      y1 = _d[1];\n    var _e = [x0, y1 + r],\n      x2 = _e[0],\n      y2 = _e[1];\n    var _f = [x, y0 + r],\n      x3 = _f[0],\n      y3 = _f[1];\n    var showRadio = item.showRadio;\n    var attrs = __assign(__assign({\n      path: [['M', x0, y0], ['A', r, r, 0, 0, 1, x1, y1], ['L', x1 - lineWidth, y1], ['L', x1, y1], ['A', r, r, 0, 0, 1, x2, y2], ['L', x2, y2 - lineWidth], ['L', x2, y2], ['A', r, r, 0, 0, 1, x3, y3], ['L', x3 + lineWidth, y3], ['L', x3, y3], ['A', r, r, 0, 0, 1, x0, y0], ['L', x0, y0 + lineWidth]],\n      stroke: '#000000',\n      fill: '#ffffff'\n    }, style), {\n      opacity: showRadio ? (_b = style === null || style === void 0 ? void 0 : style.opacity) !== null && _b !== void 0 ? _b : 0.45 : 0\n    });\n    var radioShape = this.addShape(container, {\n      type: 'path',\n      id: this.getElementId(\"item-\" + item.id + \"-radio\"),\n      name: 'legend-item-radio',\n      attrs: attrs\n    });\n    radioShape.set('tip', radioCfg.tip);\n    return radioShape;\n  };\n  // 绘制图例项\n  Category.prototype.drawItem = function (item, index, itemHeight, itemGroup) {\n    var groupId = \"item-\" + item.id;\n    // 设置单独的 Group 用于 setClip\n    var subContainer = this.addGroup(itemGroup, {\n      name: 'legend-item-container',\n      id: this.getElementId(\"item-container-\" + groupId),\n      delegateObject: {\n        item: item,\n        index: index\n      }\n    });\n    var subGroup = this.addGroup(subContainer, {\n      name: 'legend-item',\n      id: this.getElementId(groupId),\n      delegateObject: {\n        item: item,\n        index: index\n      }\n    });\n    var marker = this.get('marker');\n    var itemName = this.get('itemName');\n    var itemValue = this.get('itemValue');\n    var itemBackground = this.get('itemBackground');\n    var radio = this.get('radio');\n    var itemWidth = this.getLimitItemWidth();\n    var curX = 0; // 记录当前 x 的位置\n    if (marker) {\n      var markerShape = this.drawMarker(subGroup, marker, item, itemHeight);\n      var spacing = marker.spacing;\n      var itemMarkerSpacing = get(item, ['marker', 'spacing']);\n      if (isNumber(itemMarkerSpacing)) {\n        // 如果 item 有配置 marker.spacing，采用 item 的配置\n        spacing = itemMarkerSpacing;\n      }\n      curX = markerShape.getBBox().maxX + spacing;\n    }\n    if (itemName) {\n      var nameShape = this.drawItemText(subGroup, 'name', itemName, item, itemHeight, curX, index);\n      if (itemWidth) {\n        // 设置了 item 的最大宽度限制，并且超出了，进行省略处理\n        ellipsisLabel(true, nameShape, clamp(itemWidth - curX, 0, itemWidth));\n      }\n      curX = nameShape.getBBox().maxX + itemName.spacing;\n    }\n    if (itemValue) {\n      var valueShape = this.drawItemText(subGroup, 'value', itemValue, item, itemHeight, curX, index);\n      if (itemWidth) {\n        if (itemValue.alignRight) {\n          valueShape.attr({\n            textAlign: 'right',\n            x: itemWidth\n          });\n          ellipsisLabel(true, valueShape, clamp(itemWidth - curX, 0, itemWidth), 'head');\n        } else {\n          ellipsisLabel(true, valueShape, clamp(itemWidth - curX, 0, itemWidth));\n        }\n      }\n      curX = valueShape.getBBox().maxX + itemValue.spacing;\n    }\n    if (radio) {\n      this.drawRadio(subGroup, radio, item, itemHeight, curX);\n    }\n    // 添加透明的背景，便于拾取和包围盒计算\n    if (itemBackground) {\n      var bbox = subGroup.getBBox();\n      var backShape = this.addShape(subGroup, {\n        type: 'rect',\n        name: 'legend-item-background',\n        id: this.getElementId(groupId + \"-background\"),\n        attrs: __assign({\n          x: 0,\n          y: 0,\n          width: bbox.width,\n          height: itemHeight\n        }, itemBackground.style)\n      });\n      backShape.toBack();\n    }\n    this.applyItemStates(item, subGroup);\n    return subGroup;\n  };\n  // 加上分页器并重新排序 items\n  Category.prototype.adjustNavigation = function (container, itemGroup) {\n    var _this = this;\n    var startX = this.startX;\n    var startY = this.startY;\n    var layout = this.get('layout');\n    var subGroups = itemGroup.findAll(function (item) {\n      return item.get('name') === 'legend-item';\n    });\n    var maxWidth = this.get('maxWidth');\n    var maxHeight = this.get('maxHeight');\n    var itemWidth = this.get('itemWidth');\n    var itemSpacing = this.get('itemSpacing');\n    var itemHeight = this.getItemHeight();\n    var pageNavigator = deepMix({}, DEFAULT_PAGE_NAVIGATOR, this.get('pageNavigator'));\n    var navigation = this.drawNavigation(container, layout, '00/00', pageNavigator);\n    var navigationBBox = navigation.getBBox();\n    var currentPoint = {\n      x: startX,\n      y: startY\n    };\n    var pages = 1;\n    var widthLimit = 0;\n    var pageWidth = 0;\n    var maxItemWidth = 0;\n    var itemMarginBottom = this.get('itemMarginBottom');\n    if (layout === 'horizontal') {\n      var maxRow = this.get('maxRow') || 1;\n      var maxRowHeight_1 = itemHeight + (maxRow === 1 ? 0 : itemMarginBottom);\n      this.pageHeight = maxRowHeight_1 * maxRow;\n      each(subGroups, function (item) {\n        var bbox = item.getBBox();\n        var width = itemWidth || bbox.width;\n        if (widthLimit && widthLimit < currentPoint.x + width + itemSpacing || maxWidth < currentPoint.x + width + itemSpacing + navigationBBox.width) {\n          if (pages === 1) {\n            widthLimit = currentPoint.x + itemSpacing;\n            _this.pageWidth = widthLimit;\n            _this.moveElementTo(navigation, {\n              x: maxWidth - itemSpacing - navigationBBox.width - navigationBBox.minX,\n              y: currentPoint.y + itemHeight / 2 - navigationBBox.height / 2 - navigationBBox.minY\n            });\n          }\n          pages += 1;\n          currentPoint.x = startX;\n          currentPoint.y += maxRowHeight_1;\n        }\n        _this.moveElementTo(item, currentPoint);\n        item.getParent().setClip({\n          type: 'rect',\n          attrs: {\n            x: currentPoint.x,\n            y: currentPoint.y,\n            width: width + itemSpacing,\n            height: itemHeight\n          }\n        });\n        currentPoint.x += width + itemSpacing;\n      });\n    } else {\n      each(subGroups, function (item) {\n        var bbox = item.getBBox();\n        if (bbox.width > pageWidth) {\n          pageWidth = bbox.width;\n        }\n      });\n      maxItemWidth = pageWidth;\n      pageWidth += itemSpacing;\n      if (maxWidth) {\n        // maxWidth 限制加上\n        pageWidth = Math.min(maxWidth, pageWidth);\n        maxItemWidth = Math.min(maxWidth, maxItemWidth);\n      }\n      this.pageWidth = pageWidth;\n      this.pageHeight = maxHeight - Math.max(navigationBBox.height, itemHeight + itemMarginBottom);\n      var cntPerPage_1 = Math.floor(this.pageHeight / (itemHeight + itemMarginBottom));\n      each(subGroups, function (item, index) {\n        if (index !== 0 && index % cntPerPage_1 === 0) {\n          pages += 1;\n          currentPoint.x += pageWidth;\n          currentPoint.y = startY;\n        }\n        _this.moveElementTo(item, currentPoint);\n        item.getParent().setClip({\n          type: 'rect',\n          attrs: {\n            x: currentPoint.x,\n            y: currentPoint.y,\n            width: pageWidth,\n            height: itemHeight\n          }\n        });\n        currentPoint.y += itemHeight + itemMarginBottom;\n      });\n      this.totalPagesCnt = pages;\n      this.moveElementTo(navigation, {\n        x: startX + maxItemWidth / 2 - navigationBBox.width / 2 - navigationBBox.minX,\n        y: maxHeight - navigationBBox.height - navigationBBox.minY\n      });\n    }\n    if (this.pageHeight && this.pageWidth) {\n      // 为了使固定的 clip 生效，clip 设置在 itemContainerGroup 上，itemGroup 需要在翻页时会设置 matrix\n      itemGroup.getParent().setClip({\n        type: 'rect',\n        attrs: {\n          x: this.startX,\n          y: this.startY,\n          width: this.pageWidth,\n          height: this.pageHeight\n        }\n      });\n    }\n    // 重新计算 totalPagesCnt\n    if (layout === 'horizontal' && this.get('maxRow')) {\n      this.totalPagesCnt = Math.ceil(pages / this.get('maxRow'));\n    } else {\n      this.totalPagesCnt = pages;\n    }\n    if (this.currentPageIndex > this.totalPagesCnt) {\n      this.currentPageIndex = 1;\n    }\n    this.updateNavigation(navigation);\n    // update initial matrix\n    itemGroup.attr('matrix', this.getCurrentNavigationMatrix());\n  };\n  /**\n   * 绘制分页器\n   */\n  Category.prototype.drawNavigation = function (group, layout, text, styleCfg) {\n    var currentPoint = {\n      x: 0,\n      y: 0\n    };\n    var subGroup = this.addGroup(group, {\n      id: this.getElementId('navigation-group'),\n      name: 'legend-navigation'\n    });\n    var _a = get(styleCfg.marker, 'style', {}),\n      _b = _a.size,\n      size = _b === void 0 ? 12 : _b,\n      arrowStyle = __rest(_a, [\"size\"]);\n    var leftArrow = this.drawArrow(subGroup, currentPoint, LEFT_ARROW_NAME, layout === 'horizontal' ? 'up' : 'left', size, arrowStyle);\n    leftArrow.on('click', this.onNavigationBack);\n    var leftArrowBBox = leftArrow.getBBox();\n    currentPoint.x += leftArrowBBox.width + 2;\n    var textShape = this.addShape(subGroup, {\n      type: 'text',\n      id: this.getElementId('navigation-text'),\n      name: 'navigation-text',\n      attrs: __assign({\n        x: currentPoint.x,\n        y: currentPoint.y + size / 2,\n        text: text,\n        textBaseline: 'middle'\n      }, get(styleCfg.text, 'style'))\n    });\n    var textBBox = textShape.getBBox();\n    currentPoint.x += textBBox.width + 2;\n    var rightArrow = this.drawArrow(subGroup, currentPoint, RIGHT_ARROW_NAME, layout === 'horizontal' ? 'down' : 'right', size, arrowStyle);\n    rightArrow.on('click', this.onNavigationAfter);\n    return subGroup;\n  };\n  Category.prototype.updateNavigation = function (navigation) {\n    var pageNavigator = deepMix({}, DEFAULT_PAGE_NAVIGATOR, this.get('pageNavigator'));\n    var _a = pageNavigator.marker.style,\n      fill = _a.fill,\n      opacity = _a.opacity,\n      inactiveFill = _a.inactiveFill,\n      inactiveOpacity = _a.inactiveOpacity;\n    var text = this.currentPageIndex + \"/\" + this.totalPagesCnt;\n    var textShape = navigation ? navigation.getChildren()[1] : this.getElementByLocalId('navigation-text');\n    var leftArrow = navigation ? navigation.findById(this.getElementId(LEFT_ARROW_NAME)) : this.getElementByLocalId(LEFT_ARROW_NAME);\n    var rightArrow = navigation ? navigation.findById(this.getElementId(RIGHT_ARROW_NAME)) : this.getElementByLocalId(RIGHT_ARROW_NAME);\n    textShape.attr('text', text);\n    // 更新 left-arrow marker\n    leftArrow.attr('opacity', this.currentPageIndex === 1 ? inactiveOpacity : opacity);\n    leftArrow.attr('fill', this.currentPageIndex === 1 ? inactiveFill : fill);\n    leftArrow.attr('cursor', this.currentPageIndex === 1 ? 'not-allowed' : 'pointer');\n    // 更新 right-arrow marker\n    rightArrow.attr('opacity', this.currentPageIndex === this.totalPagesCnt ? inactiveOpacity : opacity);\n    rightArrow.attr('fill', this.currentPageIndex === this.totalPagesCnt ? inactiveFill : fill);\n    rightArrow.attr('cursor', this.currentPageIndex === this.totalPagesCnt ? 'not-allowed' : 'pointer');\n    // 更新位置\n    var cursorX = leftArrow.getBBox().maxX + 2;\n    textShape.attr('x', cursorX);\n    cursorX += textShape.getBBox().width + 2;\n    this.updateArrowPath(rightArrow, {\n      x: cursorX,\n      y: 0\n    });\n  };\n  Category.prototype.drawArrow = function (group, currentPoint, name, direction, size, style) {\n    var x = currentPoint.x,\n      y = currentPoint.y;\n    var shape = this.addShape(group, {\n      type: 'path',\n      id: this.getElementId(name),\n      name: name,\n      attrs: __assign({\n        size: size,\n        direction: direction,\n        path: [['M', x + size / 2, y], ['L', x, y + size], ['L', x + size, y + size], ['Z']],\n        cursor: 'pointer'\n      }, style)\n    });\n    shape.attr('matrix', getMatrixByAngle({\n      x: x + size / 2,\n      y: y + size / 2\n    }, ROTATE_MAP[direction]));\n    return shape;\n  };\n  /**\n   * 更新分页器 arrow 组件\n   */\n  Category.prototype.updateArrowPath = function (arrow, point) {\n    var x = point.x,\n      y = point.y;\n    var _a = arrow.attr(),\n      size = _a.size,\n      direction = _a.direction;\n    var matrix = getMatrixByAngle({\n      x: x + size / 2,\n      y: y + size / 2\n    }, ROTATE_MAP[direction]);\n    arrow.attr('path', [['M', x + size / 2, y], ['L', x, y + size], ['L', x + size, y + size], ['Z']]);\n    arrow.attr('matrix', matrix);\n  };\n  Category.prototype.getCurrentNavigationMatrix = function () {\n    var _a = this,\n      currentPageIndex = _a.currentPageIndex,\n      pageWidth = _a.pageWidth,\n      pageHeight = _a.pageHeight;\n    var layout = this.get('layout');\n    var translate = layout === 'horizontal' ? {\n      x: 0,\n      y: pageHeight * (1 - currentPageIndex)\n    } : {\n      x: pageWidth * (1 - currentPageIndex),\n      y: 0\n    };\n    return getMatrixByTranslate(translate);\n  };\n  // 附加状态对应的样式\n  Category.prototype.applyItemStates = function (item, subGroup) {\n    var states = this.getItemStates(item);\n    var hasStates = states.length > 0;\n    if (hasStates) {\n      var children = subGroup.getChildren();\n      var itemStates_1 = this.get('itemStates');\n      each(children, function (element) {\n        var name = element.get('name');\n        var elName = name.split('-')[2]; // marker, name, value\n        var statesStyle = getStatesStyle(item, elName, itemStates_1);\n        if (statesStyle) {\n          element.attr(statesStyle);\n          if (elName === 'marker' && !(element.get('isStroke') && element.get('isFill'))) {\n            // 如果 marker 是单填充或者单描边的话，就不要额外添加 stroke 或这 fill 属性，否则会影响 unchecked 后的显示\n            if (element.get('isStroke')) {\n              element.attr('fill', null);\n            }\n            if (element.get('isFill')) {\n              element.attr('stroke', null);\n            }\n          }\n        }\n      });\n    }\n  };\n  // 获取 itemWidth 的最终设置\n  Category.prototype.getLimitItemWidth = function () {\n    var itemWidth = this.get('itemWidth');\n    var maxItemWidth = this.get('maxItemWidth');\n    if (maxItemWidth) {\n      // 设置了最大宽度\n      if (itemWidth) {\n        maxItemWidth = itemWidth <= maxItemWidth ? itemWidth : maxItemWidth;\n      }\n    } else if (itemWidth) {\n      maxItemWidth = itemWidth;\n    }\n    return maxItemWidth;\n  };\n  return Category;\n}(LegendBase);\nexport default Category;","map":{"version":3,"mappings":";AACA,SAASA,KAAK,EAAEC,OAAO,EAAEC,IAAI,EAAEC,MAAM,EAAEC,GAAG,EAAEC,GAAG,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,YAAY;AAUzF,SAASC,aAAa,QAAQ,eAAe;AAC7C,SAASC,gBAAgB,EAAEC,oBAAoB,QAAQ,gBAAgB;AACvE,SAASC,cAAc,QAAQ,eAAe;AAC9C,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,UAAU,MAAM,QAAQ;AAE/B;;;AAGA,IAAMC,sBAAsB,GAAG;EAC7BC,MAAM,EAAE;IACNC,KAAK,EAAE;MACLC,YAAY,EAAE,MAAM;MACpBC,eAAe,EAAE,IAAI;MACrBC,IAAI,EAAE,MAAM;MACZC,OAAO,EAAE,CAAC;MACVC,IAAI,EAAE;;GAET;EACDC,IAAI,EAAE;IACJN,KAAK,EAAE;MACLG,IAAI,EAAE,MAAM;MACZI,QAAQ,EAAE;;;CAGf;AAED;AACA,IAAMC,SAAS,GAAG;EAChBL,IAAI,EAAEP,KAAK,CAACa,SAAS;EACrBF,QAAQ,EAAE,EAAE;EACZG,SAAS,EAAE,OAAO;EAClBC,YAAY,EAAE,QAAQ;EACtBC,UAAU,EAAEhB,KAAK,CAACgB,UAAU;EAC5BC,UAAU,EAAE,QAAQ;EACpBC,UAAU,EAAE;CACb;AAED,IAAMC,gBAAgB,GAAG,wBAAwB;AACjD,IAAMC,eAAe,GAAG,uBAAuB;AAE/C,IAAMC,UAAU,GAAG;EACjBC,KAAK,EAAG,EAAE,GAAGC,IAAI,CAACC,EAAE,GAAI,GAAG;EAC3BC,IAAI,EAAG,CAAC,GAAG,GAAG,EAAE,IAAIF,IAAI,CAACC,EAAE,GAAI,GAAG;EAClCE,EAAE,EAAE,CAAC;EACLC,IAAI,EAAG,GAAG,GAAGJ,IAAI,CAACC,EAAE,GAAI;CACzB;AACD;EAAuBI;EAAvB;IAAA;IACUC,sBAAgB,GAAG,CAAC;IACpBA,mBAAa,GAAG,CAAC;IACjBA,eAAS,GAAG,CAAC;IACbA,gBAAU,GAAG,CAAC;IACdA,YAAM,GAAG,CAAC;IACVA,YAAM,GAAG,CAAC;IA6uBVA,sBAAgB,GAAG;MACzB,IAAMC,SAAS,GAAGD,KAAI,CAACE,mBAAmB,CAAC,YAAY,CAAC;MACxD,IAAIF,KAAI,CAACG,gBAAgB,GAAG,CAAC,EAAE;QAC7BH,KAAI,CAACG,gBAAgB,IAAI,CAAC;QAC1BH,KAAI,CAACI,gBAAgB,EAAE;QACvB,IAAMC,MAAM,GAAGL,KAAI,CAACM,0BAA0B,EAAE;QAChD,IAAIN,KAAI,CAACrC,GAAG,CAAC,SAAS,CAAC,EAAE;UACvBsC,SAAS,CAACM,OAAO,CACf;YACEF,MAAM;WACP,EACD,GAAG,CACJ;SACF,MAAM;UACLJ,SAAS,CAACO,IAAI,CAAC;YAAEH,MAAM;UAAA,CAAE,CAAC;;;IAGhC,CAAC;IAEOL,uBAAiB,GAAG;MAC1B,IAAMC,SAAS,GAAGD,KAAI,CAACE,mBAAmB,CAAC,YAAY,CAAC;MACxD,IAAIF,KAAI,CAACG,gBAAgB,GAAGH,KAAI,CAACS,aAAa,EAAE;QAC9CT,KAAI,CAACG,gBAAgB,IAAI,CAAC;QAC1BH,KAAI,CAACI,gBAAgB,EAAE;QACvB,IAAMC,MAAM,GAAGL,KAAI,CAACM,0BAA0B,EAAE;QAChD,IAAIN,KAAI,CAACrC,GAAG,CAAC,SAAS,CAAC,EAAE;UACvBsC,SAAS,CAACM,OAAO,CACf;YACEF,MAAM;WACP,EACD,GAAG,CACJ;SACF,MAAM;UACLJ,SAAS,CAACO,IAAI,CAAC;YAAEH,MAAM;UAAA,CAAE,CAAC;;;IAGhC,CAAC;;EA6CH;EA5zBSK,gCAAa,GAApB;IACE,IAAMC,GAAG,GAAGC,iBAAMC,aAAa,WAAE;IACjC,6BACKF,GAAG;MACNG,IAAI,EAAE,QAAQ;MACdC,IAAI,EAAE,UAAU;MAChBC,WAAW,EAAE,EAAE;MACfC,gBAAgB,EAAE,CAAC;MACnBC,YAAY,EAAE,IAAI;MAClBC,SAAS,EAAE,IAAI;MACfC,UAAU,EAAE,IAAI;MAChBC,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAE,IAAI;MACfC,QAAQ,EAAE,IAAI;MACdC,SAAS,EAAE,IAAI;MACflD,MAAM,EAAE,EAAE;MACVmD,KAAK,EAAE,IAAI;MACXC,KAAK,EAAE,EAAE;MACTC,UAAU,EAAE,EAAE;MACdC,cAAc,EAAE,EAAE;MAClBC,aAAa,EAAE,EAAE;MACjBC,UAAU,EAAE;QACVC,KAAK,EAAE;UACLC,OAAO,EAAE,CAAC;UACVzD,KAAK,EAAE;YACLG,IAAI,EAAEP,KAAK,CAACa,SAAS;YACrBF,QAAQ,EAAE,EAAE;YACZG,SAAS,EAAE,OAAO;YAClBC,YAAY,EAAE;;SAEjB;QACD+C,UAAU,EAAE;UACVC,OAAO,EAAE,CAAC;UACV3D,KAAK,EAAE;YACL4D,MAAM,EAAEhE,KAAK,CAACiE;;SAEjB;QACDR,cAAc,EAAE;UACdrD,KAAK,EAAE;YACLI,OAAO,EAAE,CAAC;YACVD,IAAI,EAAE;;SAET;QACDmD,aAAa,EAAExD,sBAAsB;QACrCgD,QAAQ,EAAE;UACRW,OAAO,EAAE,EAAE;UACXzD,KAAK,EAAEQ;SACR;QACDT,MAAM,EAAE;UACN0D,OAAO,EAAE,CAAC;UACVzD,KAAK,EAAE;YACL8D,CAAC,EAAE,CAAC;YACJC,MAAM,EAAE;;SAEX;QACDhB,SAAS,EAAE;UACTiB,UAAU,EAAE,KAAK;UACjBC,SAAS,EAAE,IAAI;UACfjE,KAAK,EAAEQ,SAAS;UAChBiD,OAAO,EAAE;SACV;QACDL,UAAU,EAAE;UACVc,MAAM,EAAE;YACNC,SAAS,EAAE;cACT/D,OAAO,EAAE;;WAEZ;UACDgE,SAAS,EAAE;YACTD,SAAS,EAAE;cACThE,IAAI,EAAEP,KAAK,CAACyE;aACb;YACDC,WAAW,EAAE;cACXnE,IAAI,EAAEP,KAAK,CAACyE,cAAc;cAC1BT,MAAM,EAAEhE,KAAK,CAACyE;;WAEjB;UACDE,QAAQ,EAAE;YACRJ,SAAS,EAAE;cACThE,IAAI,EAAEP,KAAK,CAACyE;aACb;YACDC,WAAW,EAAE;cACXlE,OAAO,EAAE;;;;;IAIhB;EAEL,CAAC;EAED;EACO+B,yBAAM,GAAb;IACE,OAAO,IAAI;EACb,CAAC;EAED;;;;EAIOA,2BAAQ,GAAf;IACE,OAAO,IAAI,CAAC/C,GAAG,CAAC,OAAO,CAAC;EAC1B,CAAC;EAED;;;;EAIO+C,2BAAQ,GAAf,UAAgBgB,KAAiB;IAC/B,IAAI,CAACqB,MAAM,CAAC;MACVrB,KAAK;KACN,CAAC;EACJ,CAAC;EAED;;;;;EAKOhB,6BAAU,GAAjB,UAAkBsC,IAAc,EAAErC,GAAW;IAC3C/C,GAAG,CAACoF,IAAI,EAAErC,GAAG,CAAC;IACd,IAAI,CAACsC,KAAK,EAAE,CAAC,CAAC;IACd,IAAI,CAACC,MAAM,EAAE;EACf,CAAC;EAED;;;EAGOxC,6BAAU,GAAjB;IACE,IAAMT,SAAS,GAAG,IAAI,CAACC,mBAAmB,CAAC,YAAY,CAAC;IACxDD,SAAS,IAAIA,SAAS,CAACgD,KAAK,EAAE;EAChC,CAAC;EAED;;;;;;EAMOvC,+BAAY,GAAnB,UAAoBsC,IAAc,EAAEG,KAAa,EAAEC,KAAc;IAC/DJ,IAAI,CAACG,KAAK,CAAC,GAAGC,KAAK;IACnB,IAAMC,WAAW,GAAG,IAAI,CAACnD,mBAAmB,CAAC,UAAQ8C,IAAI,CAACM,EAAI,CAAC;IAC/D,IAAID,WAAW,EAAE;MACf,IAAM3B,KAAK,GAAG,IAAI,CAAC6B,QAAQ,EAAE;MAC7B,IAAMC,KAAK,GAAG9B,KAAK,CAAC+B,OAAO,CAACT,IAAI,CAAC;MACjC,IAAMU,WAAW,GAAG,IAAI,CAACC,oBAAoB,EAAE,CAAC,CAAC;MACjD,IAAMC,UAAU,GAAG,IAAI,CAACC,QAAQ,CAACb,IAAI,EAAEQ,KAAK,EAAE,IAAI,CAACM,aAAa,EAAE,EAAEJ,WAAW,CAAC;MAChF,IAAI,CAACK,cAAc,CAACH,UAAU,EAAEP,WAAW,CAAC,CAAC,CAAC;MAC9C,IAAI,CAACW,iBAAiB,CAACX,WAAW,CAAC,CAAC,CAAC;;EAEzC,CAAC;EACD;;;;;EAKO3C,2BAAQ,GAAf,UAAgBsC,IAAc,EAAEG,KAAa;IAC3C,OAAO,CAAC,CAACH,IAAI,CAACG,KAAK,CAAC;EACtB,CAAC;EAEMzC,gCAAa,GAApB,UAAqBsC,IAAc;IACjC,IAAMrB,UAAU,GAAG,IAAI,CAAChE,GAAG,CAAC,YAAY,CAAC;IACzC,IAAMsG,GAAG,GAAG,EAAE;IACdxG,IAAI,CAACkE,UAAU,EAAE,UAACuC,CAAC,EAAEC,CAAC;MACpB,IAAInB,IAAI,CAACmB,CAAC,CAAC,EAAE;QACX;QACAF,GAAG,CAACG,IAAI,CAACD,CAAC,CAAC;;IAEf,CAAC,CAAC;IACF,OAAOF,GAAG;EACZ,CAAC;EAED;;;;EAIOvD,kCAAe,GAAtB,UAAuByC,KAAa;IAApC;IACE,IAAMzB,KAAK,GAAG,IAAI,CAAC2C,eAAe,CAAClB,KAAK,CAAC;IACzC1F,IAAI,CAACiE,KAAK,EAAE,UAACsB,IAAI;MACfhD,KAAI,CAACsE,YAAY,CAACtB,IAAI,EAAEG,KAAK,EAAE,KAAK,CAAC;IACvC,CAAC,CAAC;EACJ,CAAC;EAED;;;;;EAKOzC,kCAAe,GAAtB,UAAuByC,KAAa;IAApC;IACE,IAAMzB,KAAK,GAAG,IAAI,CAAC6B,QAAQ,EAAE;IAC7B,OAAO7F,MAAM,CAACgE,KAAK,EAAE,UAACsB,IAAI;MACxB,OAAOhD,KAAI,CAACuE,QAAQ,CAACvB,IAAI,EAAEG,KAAK,CAAC;IACnC,CAAC,CAAC;EACJ,CAAC;EAED;EACUzC,oCAAiB,GAA3B,UAA4B8D,KAAK;IAC/B,IAAI,CAACC,YAAY,EAAE;IACnB,IAAI,CAACC,SAAS,CAACF,KAAK,CAAC;EACvB,CAAC;EAED;EACQ9D,+BAAY,GAApB;IACE,IAAMgB,KAAK,GAAG,IAAI,CAAC/D,GAAG,CAAC,OAAO,CAAC;IAC/BF,IAAI,CAACiE,KAAK,EAAE,UAACsB,IAAI;MACf,IAAI,CAACA,IAAI,CAACM,EAAE,EAAE;QACZ;QACAN,IAAI,CAACM,EAAE,GAAGN,IAAI,CAAClC,IAAI;;IAEvB,CAAC,CAAC;EACJ,CAAC;EAED;EACQJ,4BAAS,GAAjB,UAAkB8D,KAAa;IAA/B;IACE,IAAMG,kBAAkB,GAAG,IAAI,CAACC,QAAQ,CAACJ,KAAK,EAAE;MAC9ClB,EAAE,EAAE,IAAI,CAACuB,YAAY,CAAC,sBAAsB,CAAC;MAC7C/D,IAAI,EAAE;KACP,CAAC;IACF,IAAMb,SAAS,GAAG,IAAI,CAAC2E,QAAQ,CAACD,kBAAkB,EAAE;MAClDrB,EAAE,EAAE,IAAI,CAACuB,YAAY,CAAC,YAAY,CAAC;MACnC/D,IAAI,EAAE;KACP,CAAC;IACF,IAAMM,UAAU,GAAG,IAAI,CAAC0C,aAAa,EAAE;IACvC,IAAM3C,SAAS,GAAG,IAAI,CAACxD,GAAG,CAAC,WAAW,CAAC;IACvC,IAAMqD,WAAW,GAAG,IAAI,CAACrD,GAAG,CAAC,aAAa,CAAC;IAC3C,IAAMsD,gBAAgB,GAAG,IAAI,CAACtD,GAAG,CAAC,kBAAkB,CAAC;IACrD,IAAMmH,YAAY,GAAG,IAAI,CAACnH,GAAG,CAAC,cAAc,CAAC;IAC7C,IAAMoH,MAAM,GAAGD,YAAY,CAACE,CAAC;IAC7B,IAAMC,MAAM,GAAGH,YAAY,CAACI,CAAC;IAC7B,IAAMC,MAAM,GAAG,IAAI,CAACxH,GAAG,CAAC,QAAQ,CAAC;IACjC,IAAM+D,KAAK,GAAG,IAAI,CAAC/D,GAAG,CAAC,OAAO,CAAC;IAC/B,IAAIyH,OAAO,GAAG,KAAK;IACnB,IAAIC,SAAS,GAAG,CAAC;IAEjB,IAAM9D,QAAQ,GAAG,IAAI,CAAC5D,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;IACvC,IAAM6D,SAAS,GAAG,IAAI,CAAC7D,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC;IACzC;IACAF,IAAI,CAACiE,KAAK,EAAE,UAACsB,IAAI,EAAEQ,KAAK;MACtB,IAAM8B,QAAQ,GAAGtF,KAAI,CAAC6D,QAAQ,CAACb,IAAI,EAAEQ,KAAK,EAAEpC,UAAU,EAAEnB,SAAS,CAAC;MAClE,IAAMsF,IAAI,GAAGD,QAAQ,CAACE,OAAO,EAAE;MAC/B,IAAMC,KAAK,GAAGtE,SAAS,IAAIoE,IAAI,CAACE,KAAK;MACrC,IAAIA,KAAK,GAAGJ,SAAS,EAAE;QACrBA,SAAS,GAAGI,KAAK;;MAEnB,IAAIN,MAAM,KAAK,YAAY,EAAE;QAC3B;QACA,IAAI5D,QAAQ,IAAIA,QAAQ,GAAGuD,YAAY,CAACE,CAAC,GAAGS,KAAK,GAAGV,MAAM,EAAE;UAC1D;UACAK,OAAO,GAAG,IAAI;UACdN,YAAY,CAACE,CAAC,GAAGD,MAAM;UACvBD,YAAY,CAACI,CAAC,IAAI9D,UAAU,GAAGH,gBAAgB;;QAEjDjB,KAAI,CAAC0F,aAAa,CAACJ,QAAQ,EAAER,YAAY,CAAC;QAC1CA,YAAY,CAACE,CAAC,IAAIS,KAAK,GAAGzE,WAAW;OACtC,MAAM;QACL;QACA,IAAIQ,SAAS,IAAIA,SAAS,GAAGsD,YAAY,CAACI,CAAC,GAAG9D,UAAU,GAAGH,gBAAgB,GAAGgE,MAAM,EAAE;UACpF;UACAG,OAAO,GAAG,IAAI;UACdN,YAAY,CAACE,CAAC,IAAIK,SAAS,GAAGrE,WAAW;UACzC8D,YAAY,CAACI,CAAC,GAAGD,MAAM;UACvBI,SAAS,GAAG,CAAC;;QAEfrF,KAAI,CAAC0F,aAAa,CAACJ,QAAQ,EAAER,YAAY,CAAC;QAC1CA,YAAY,CAACI,CAAC,IAAI9D,UAAU,GAAGH,gBAAgB,CAAC,CAAC;;IAErD,CAAC,CAAC;;IAEF,IAAImE,OAAO,IAAI,IAAI,CAACzH,GAAG,CAAC,UAAU,CAAC,EAAE;MACnC,IAAI,CAACgI,UAAU,GAAG,CAAC;MACnB,IAAI,CAACN,SAAS,GAAG,CAAC;MAClB,IAAI,CAAC5E,aAAa,GAAG,CAAC;MACtB,IAAI,CAACsE,MAAM,GAAGA,MAAM;MACpB,IAAI,CAACE,MAAM,GAAGA,MAAM;MACpB,IAAI,CAACW,gBAAgB,CAACpB,KAAK,EAAEvE,SAAS,CAAC;;EAE3C,CAAC;EACD;EACQS,gCAAa,GAArB;IACE,IAAIU,UAAU,GAAG,IAAI,CAACzD,GAAG,CAAC,YAAY,CAAC;IACvC,IAAI,CAACyD,UAAU,EAAE;MACP,WAAK,GAAwB,KAAI,CAACzD,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,OAAlD;MAEb,IAAIG,UAAU,CAAC+H,OAAK,CAAC,EAAE;QACrB,IAAMC,OAAK,GAAG,IAAI,CAACvC,QAAQ,EAAE;QAC7BuC,OAAK,CAACC,OAAO,CAAC,UAAC/C,IAAI,EAAEQ,KAAK;UAChB,YAAQ,yBAAUzE,SAAS,GAAK8G,OAAK,CAAC7C,IAAI,EAAEQ,KAAK,EAAEsC,OAAK,CAAC,UAAjD;UAChB,IAAI1E,UAAU,GAAGtC,QAAQ,EAAE;YACzBsC,UAAU,GAAGtC,QAAQ;;QAEzB,CAAC,CAAC;OACH,MAAM,IAAI+G,OAAK,EAAE;QAChBzE,UAAU,GAAGyE,OAAK,CAAC/G,QAAQ;;;IAG/B,OAAOsC,UAAU;EACnB,CAAC;EACD;EACQV,6BAAU,GAAlB,UAAmBsF,SAAiB,EAAEC,SAA0B,EAAEjD,IAAc,EAAE5B,UAAkB;IAClG,IAAM8E,WAAW;MACflB,CAAC,EAAE,CAAC;MACJE,CAAC,EAAE9D,UAAU,GAAG;IAAC,GACd6E,SAAS,CAAC1H,KAAK;MAClB+D,MAAM,EAAE3E,GAAG,CAACqF,IAAI,CAAC1E,MAAM,EAAE,QAAQ,EAAE,QAAQ;IAAC,IACzCX,GAAG,CAACqF,IAAI,CAAC1E,MAAM,EAAE,OAAO,EAAE,EAAE,CAAC,CACjC;IAED,IAAM6H,KAAK,GAAG,IAAI,CAACC,QAAQ,CAACJ,SAAS,EAAE;MACrCjF,IAAI,EAAE,QAAQ;MACduC,EAAE,EAAE,IAAI,CAACuB,YAAY,CAAC,UAAQ7B,IAAI,CAACM,EAAE,YAAS,CAAC;MAC/CxC,IAAI,EAAE,oBAAoB;MAC1BuF,KAAK,EAAEH;KACR,CAAC;IACF,IAAMX,IAAI,GAAGY,KAAK,CAACX,OAAO,EAAE;IAC5BW,KAAK,CAAC3F,IAAI,CAAC,GAAG,EAAE+E,IAAI,CAACE,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;IAE3B,SAAmBU,KAAK,CAAC3F,IAAI,EAAE;MAA7B2B,MAAM;MAAEzD,IAAI,UAAiB;IACrC,IAAIyD,MAAM,EAAE;MACVgE,KAAK,CAACG,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC;;IAE7B,IAAI5H,IAAI,EAAE;MACRyH,KAAK,CAACG,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC;;IAG3B,OAAOH,KAAK;EACd,CAAC;EACD;EACQzF,+BAAY,GAApB,UACEsF,SAAiB,EACjBO,QAAgB,EAChB5F,GAAsB,EACtBqC,IAAc,EACd5B,UAAkB,EAClBoF,SAAiB,EACjBhD,KAAa;IAEb,IAAMhB,SAAS,GAAG7B,GAAG,CAAC6B,SAAS;IACvB,SAAK,GAAK7B,GAAG,MAAR;IAEb,IAAM0F,KAAK;MACTrB,CAAC,EAAEwB,SAAS;MACZtB,CAAC,EAAE9D,UAAU,GAAG,CAAC;MACjBvC,IAAI,EAAE2D,SAAS,GAAGA,SAAS,CAACQ,IAAI,CAACuD,QAAQ,CAAC,EAAEvD,IAAI,EAAEQ,KAAK,CAAC,GAAGR,IAAI,CAACuD,QAAQ;IAAC,GACtExH,SAAS,GACRjB,UAAU,CAACS,KAAK,CAAC,GAAGA,KAAK,CAACyE,IAAI,EAAEQ,KAAK,EAAE,IAAI,CAACD,QAAQ,EAAE,CAAC,GAAGhF,KAAK,CACpE;IAED,OAAO,IAAI,CAAC6H,QAAQ,CAACJ,SAAS,EAAE;MAC9BjF,IAAI,EAAE,MAAM;MACZuC,EAAE,EAAE,IAAI,CAACuB,YAAY,CAAC,UAAQ7B,IAAI,CAACM,EAAE,SAAIiD,QAAU,CAAC;MACpDzF,IAAI,EAAE,iBAAeyF,QAAU;MAC/BF,KAAK;KACN,CAAC;EACJ,CAAC;EAEO3F,4BAAS,GAAjB,UAAkBsF,SAAiB,EAAES,QAAqB,EAAEzD,IAAc,EAAE5B,UAAkB,EAAE4D,CAAS;;IACvG,IAAMzG,KAAK,GAAGkI,QAAQ,CAAClI,KAAK,IAAI,EAAE;IAClC;IACA,IAAM8D,CAAC,SAAG9D,KAAK,CAAC8D,CAAC,mCAAIjB,UAAU,GAAG,CAAC;IACnC,IAAMsF,SAAS,GAAIrE,CAAC,GAAG,GAAG,GAAI,CAAC;IACzB,SAAW,CAAC2C,CAAC,GAAG3C,CAAC,EAAEjB,UAAU,GAAG,CAAC,GAAGiB,CAAC,CAAC;MAArCsE,EAAE;MAAEC,EAAE,QAA+B;IACtC,SAAW,CAACD,EAAE,GAAGtE,CAAC,EAAEuE,EAAE,GAAGvE,CAAC,CAAC;MAA1BwE,EAAE;MAAEC,EAAE,QAAoB;IAC3B,SAAW,CAACH,EAAE,EAAEG,EAAE,GAAGzE,CAAC,CAAC;MAAtB0E,EAAE;MAAEC,EAAE,QAAgB;IACvB,SAAW,CAAChC,CAAC,EAAE4B,EAAE,GAAGvE,CAAC,CAAC;MAArB4E,EAAE;MAAEC,EAAE,QAAe;IACpB,aAAS,GAAKlE,IAAI,UAAT;IACjB,IAAMqD,KAAK;MACTc,IAAI,EAAE,CACJ,CAAC,GAAG,EAAER,EAAE,EAAEC,EAAE,CAAC,EACb,CAAC,GAAG,EAAEvE,CAAC,EAAEA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEwE,EAAE,EAAEC,EAAE,CAAC,EAC5B,CAAC,GAAG,EAAED,EAAE,GAAGH,SAAS,EAAEI,EAAE,CAAC,EACzB,CAAC,GAAG,EAAED,EAAE,EAAEC,EAAE,CAAC,EACb,CAAC,GAAG,EAAEzE,CAAC,EAAEA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE0E,EAAE,EAAEC,EAAE,CAAC,EAC5B,CAAC,GAAG,EAAED,EAAE,EAAEC,EAAE,GAAGN,SAAS,CAAC,EACzB,CAAC,GAAG,EAAEK,EAAE,EAAEC,EAAE,CAAC,EACb,CAAC,GAAG,EAAE3E,CAAC,EAAEA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE4E,EAAE,EAAEC,EAAE,CAAC,EAC5B,CAAC,GAAG,EAAED,EAAE,GAAGP,SAAS,EAAEQ,EAAE,CAAC,EACzB,CAAC,GAAG,EAAED,EAAE,EAAEC,EAAE,CAAC,EACb,CAAC,GAAG,EAAE7E,CAAC,EAAEA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEsE,EAAE,EAAEC,EAAE,CAAC,EAC5B,CAAC,GAAG,EAAED,EAAE,EAAEC,EAAE,GAAGF,SAAS,CAAC,CAC1B;MACDvE,MAAM,EAAE,SAAS;MACjBzD,IAAI,EAAE;IAAS,GACZH,KAAK;MACRI,OAAO,EAAEyI,SAAS,GAAG,MAAC7I,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEI,OAAO,mCAAI,IAAI,GAAI;IAAC,EAClD;IAED,IAAM0I,UAAU,GAAG,IAAI,CAACjB,QAAQ,CAACJ,SAAS,EAAE;MAC1CjF,IAAI,EAAE,MAAM;MACZuC,EAAE,EAAE,IAAI,CAACuB,YAAY,CAAC,UAAQ7B,IAAI,CAACM,EAAE,WAAQ,CAAC;MAC9CxC,IAAI,EAAE,mBAAmB;MACzBuF,KAAK;KACN,CAAC;IACFgB,UAAU,CAACf,GAAG,CAAC,KAAK,EAAEG,QAAQ,CAACa,GAAG,CAAC;IACnC,OAAOD,UAAU;EACnB,CAAC;EAED;EACQ3G,2BAAQ,GAAhB,UAAiBsC,IAAc,EAAEQ,KAAa,EAAEpC,UAAkB,EAAEnB,SAAiB;IACnF,IAAMsH,OAAO,GAAG,UAAQvE,IAAI,CAACM,EAAI;IACjC;IACA,IAAMkE,YAAY,GAAG,IAAI,CAAC5C,QAAQ,CAAC3E,SAAS,EAAE;MAC5Ca,IAAI,EAAE,uBAAuB;MAC7BwC,EAAE,EAAE,IAAI,CAACuB,YAAY,CAAC,oBAAkB0C,OAAS,CAAC;MAClDE,cAAc,EAAE;QACdzE,IAAI;QACJQ,KAAK;;KAER,CAAC;IACF,IAAM8B,QAAQ,GAAG,IAAI,CAACV,QAAQ,CAAC4C,YAAY,EAAE;MAC3C1G,IAAI,EAAE,aAAa;MACnBwC,EAAE,EAAE,IAAI,CAACuB,YAAY,CAAC0C,OAAO,CAAC;MAC9BE,cAAc,EAAE;QACdzE,IAAI;QACJQ,KAAK;;KAER,CAAC;IACF,IAAMlF,MAAM,GAAG,IAAI,CAACX,GAAG,CAAC,QAAQ,CAAC;IACjC,IAAM0D,QAAQ,GAAG,IAAI,CAAC1D,GAAG,CAAC,UAAU,CAAC;IACrC,IAAM2D,SAAS,GAAG,IAAI,CAAC3D,GAAG,CAAC,WAAW,CAAC;IACvC,IAAMiE,cAAc,GAAG,IAAI,CAACjE,GAAG,CAAC,gBAAgB,CAAC;IACjD,IAAM8D,KAAK,GAAG,IAAI,CAAC9D,GAAG,CAAC,OAAO,CAAC;IAC/B,IAAMwD,SAAS,GAAG,IAAI,CAACuG,iBAAiB,EAAE;IAE1C,IAAIC,IAAI,GAAG,CAAC,CAAC,CAAC;IACd,IAAIrJ,MAAM,EAAE;MACV,IAAMsJ,WAAW,GAAG,IAAI,CAACC,UAAU,CAACvC,QAAQ,EAAEhH,MAAM,EAAE0E,IAAI,EAAE5B,UAAU,CAAC;MACvE,IAAIY,OAAO,GAAG1D,MAAM,CAAC0D,OAAO;MAC5B,IAAM8F,iBAAiB,GAAGnK,GAAG,CAACqF,IAAI,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;MAE1D,IAAInF,QAAQ,CAACiK,iBAAiB,CAAC,EAAE;QAC/B;QACA9F,OAAO,GAAG8F,iBAAiB;;MAG7BH,IAAI,GAAGC,WAAW,CAACpC,OAAO,EAAE,CAACuC,IAAI,GAAG/F,OAAO;;IAG7C,IAAIX,QAAQ,EAAE;MACZ,IAAM2G,SAAS,GAAG,IAAI,CAACC,YAAY,CAAC3C,QAAQ,EAAE,MAAM,EAAEjE,QAAQ,EAAE2B,IAAI,EAAE5B,UAAU,EAAEuG,IAAI,EAAEnE,KAAK,CAAC;MAC9F,IAAIrC,SAAS,EAAE;QACb;QACApD,aAAa,CAAC,IAAI,EAAEiK,SAAS,EAAEzK,KAAK,CAAC4D,SAAS,GAAGwG,IAAI,EAAE,CAAC,EAAExG,SAAS,CAAC,CAAC;;MAEvEwG,IAAI,GAAGK,SAAS,CAACxC,OAAO,EAAE,CAACuC,IAAI,GAAG1G,QAAQ,CAACW,OAAO;;IAGpD,IAAIV,SAAS,EAAE;MACb,IAAM4G,UAAU,GAAG,IAAI,CAACD,YAAY,CAAC3C,QAAQ,EAAE,OAAO,EAAEhE,SAAS,EAAE0B,IAAI,EAAE5B,UAAU,EAAEuG,IAAI,EAAEnE,KAAK,CAAC;MACjG,IAAIrC,SAAS,EAAE;QACb,IAAIG,SAAS,CAACiB,UAAU,EAAE;UACxB2F,UAAU,CAAC1H,IAAI,CAAC;YACdvB,SAAS,EAAE,OAAO;YAClB+F,CAAC,EAAE7D;WACJ,CAAC;UACFpD,aAAa,CAAC,IAAI,EAAEmK,UAAU,EAAE3K,KAAK,CAAC4D,SAAS,GAAGwG,IAAI,EAAE,CAAC,EAAExG,SAAS,CAAC,EAAE,MAAM,CAAC;SAC/E,MAAM;UACLpD,aAAa,CAAC,IAAI,EAAEmK,UAAU,EAAE3K,KAAK,CAAC4D,SAAS,GAAGwG,IAAI,EAAE,CAAC,EAAExG,SAAS,CAAC,CAAC;;;MAG1EwG,IAAI,GAAGO,UAAU,CAAC1C,OAAO,EAAE,CAACuC,IAAI,GAAGzG,SAAS,CAACU,OAAO;;IAGtD,IAAIP,KAAK,EAAE;MACT,IAAI,CAAC0G,SAAS,CAAC7C,QAAQ,EAAE7D,KAAK,EAAEuB,IAAI,EAAE5B,UAAU,EAAEuG,IAAI,CAAC;;IAGzD;IACA,IAAI/F,cAAc,EAAE;MAClB,IAAM2D,IAAI,GAAGD,QAAQ,CAACE,OAAO,EAAE;MAC/B,IAAM4C,SAAS,GAAG,IAAI,CAAChC,QAAQ,CAACd,QAAQ,EAAE;QACxCvE,IAAI,EAAE,MAAM;QACZD,IAAI,EAAE,wBAAwB;QAC9BwC,EAAE,EAAE,IAAI,CAACuB,YAAY,CAAI0C,OAAO,gBAAa,CAAC;QAC9ClB,KAAK;UACHrB,CAAC,EAAE,CAAC;UACJE,CAAC,EAAE,CAAC;UACJO,KAAK,EAAEF,IAAI,CAACE,KAAK;UACjB4C,MAAM,EAAEjH;QAAU,GACfQ,cAAc,CAACrD,KAAK;OAE1B,CAAC;MACF6J,SAAS,CAACE,MAAM,EAAE;;IAGpB,IAAI,CAACC,eAAe,CAACvF,IAAI,EAAEsC,QAAQ,CAAC;IACpC,OAAOA,QAAQ;EACjB,CAAC;EAED;EACQ5E,mCAAgB,GAAxB,UAAyBsF,SAAiB,EAAE/F,SAAiB;IAA7D;IACE,IAAM8E,MAAM,GAAG,IAAI,CAACA,MAAM;IAC1B,IAAME,MAAM,GAAG,IAAI,CAACA,MAAM;IAC1B,IAAME,MAAM,GAAG,IAAI,CAACxH,GAAG,CAAC,QAAQ,CAAC;IACjC,IAAM6K,SAAS,GAAGvI,SAAS,CAACwI,OAAO,CAAC,UAACzF,IAAI;MAAK,WAAI,CAACrF,GAAG,CAAC,MAAM,CAAC,KAAK,aAAa;IAAlC,CAAkC,CAAC;IACjF,IAAM4D,QAAQ,GAAG,IAAI,CAAC5D,GAAG,CAAC,UAAU,CAAC;IACrC,IAAM6D,SAAS,GAAG,IAAI,CAAC7D,GAAG,CAAC,WAAW,CAAC;IACvC,IAAMwD,SAAS,GAAG,IAAI,CAACxD,GAAG,CAAC,WAAW,CAAC;IACvC,IAAMqD,WAAW,GAAG,IAAI,CAACrD,GAAG,CAAC,aAAa,CAAC;IAC3C,IAAMyD,UAAU,GAAG,IAAI,CAAC0C,aAAa,EAAE;IACvC,IAAMjC,aAAa,GAA2BrE,OAAO,CAAC,EAAE,EAAEa,sBAAsB,EAAE,IAAI,CAACV,GAAG,CAAC,eAAe,CAAC,CAAC;IAC5G,IAAM+K,UAAU,GAAG,IAAI,CAACC,cAAc,CAAC3C,SAAS,EAAEb,MAAM,EAAE,OAAO,EAAEtD,aAAa,CAAC;IACjF,IAAM+G,cAAc,GAAGF,UAAU,CAAClD,OAAO,EAAE;IAC3C,IAAMV,YAAY,GAAG;MAAEE,CAAC,EAAED,MAAM;MAAEG,CAAC,EAAED;IAAM,CAAE;IAC7C,IAAI4D,KAAK,GAAG,CAAC;IACb,IAAIC,UAAU,GAAG,CAAC;IAClB,IAAIzD,SAAS,GAAG,CAAC;IACjB,IAAInE,YAAY,GAAG,CAAC;IACpB,IAAMD,gBAAgB,GAAG,IAAI,CAACtD,GAAG,CAAC,kBAAkB,CAAC;IACrD,IAAIwH,MAAM,KAAK,YAAY,EAAE;MAC3B,IAAM4D,MAAM,GAAG,IAAI,CAACpL,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC;MACtC,IAAMqL,cAAY,GAAG5H,UAAU,IAAI2H,MAAM,KAAK,CAAC,GAAG,CAAC,GAAG9H,gBAAgB,CAAC;MACvE,IAAI,CAAC0E,UAAU,GAAGqD,cAAY,GAAGD,MAAM;MACvCtL,IAAI,CAAC+K,SAAS,EAAE,UAACxF,IAAI;QACnB,IAAMuC,IAAI,GAAGvC,IAAI,CAACwC,OAAO,EAAE;QAC3B,IAAMC,KAAK,GAAGtE,SAAS,IAAIoE,IAAI,CAACE,KAAK;QACrC,IACGqD,UAAU,IAAIA,UAAU,GAAGhE,YAAY,CAACE,CAAC,GAAGS,KAAK,GAAGzE,WAAW,IAChEO,QAAQ,GAAGuD,YAAY,CAACE,CAAC,GAAGS,KAAK,GAAGzE,WAAW,GAAG4H,cAAc,CAACnD,KAAK,EACtE;UACA,IAAIoD,KAAK,KAAK,CAAC,EAAE;YACfC,UAAU,GAAGhE,YAAY,CAACE,CAAC,GAAGhE,WAAW;YACzChB,KAAI,CAACqF,SAAS,GAAGyD,UAAU;YAC3B9I,KAAI,CAAC0F,aAAa,CAACgD,UAAU,EAAE;cAC7B1D,CAAC,EAAEzD,QAAQ,GAAGP,WAAW,GAAG4H,cAAc,CAACnD,KAAK,GAAGmD,cAAc,CAACK,IAAI;cACtE/D,CAAC,EAAEJ,YAAY,CAACI,CAAC,GAAG9D,UAAU,GAAG,CAAC,GAAGwH,cAAc,CAACP,MAAM,GAAG,CAAC,GAAGO,cAAc,CAACM;aACjF,CAAC;;UAEJL,KAAK,IAAI,CAAC;UACV/D,YAAY,CAACE,CAAC,GAAGD,MAAM;UACvBD,YAAY,CAACI,CAAC,IAAI8D,cAAY;;QAEhChJ,KAAI,CAAC0F,aAAa,CAAC1C,IAAI,EAAE8B,YAAY,CAAC;QACtC9B,IAAI,CAACmG,SAAS,EAAE,CAACC,OAAO,CAAC;UACvBrI,IAAI,EAAE,MAAM;UACZsF,KAAK,EAAE;YACLrB,CAAC,EAAEF,YAAY,CAACE,CAAC;YACjBE,CAAC,EAAEJ,YAAY,CAACI,CAAC;YACjBO,KAAK,EAAEA,KAAK,GAAGzE,WAAW;YAC1BqH,MAAM,EAAEjH;;SAEX,CAAC;QACF0D,YAAY,CAACE,CAAC,IAAIS,KAAK,GAAGzE,WAAW;MACvC,CAAC,CAAC;KACH,MAAM;MACLvD,IAAI,CAAC+K,SAAS,EAAE,UAACxF,IAAI;QACnB,IAAMuC,IAAI,GAAGvC,IAAI,CAACwC,OAAO,EAAE;QAC3B,IAAID,IAAI,CAACE,KAAK,GAAGJ,SAAS,EAAE;UAC1BA,SAAS,GAAGE,IAAI,CAACE,KAAK;;MAE1B,CAAC,CAAC;MACFvE,YAAY,GAAGmE,SAAS;MACxBA,SAAS,IAAIrE,WAAW;MACxB,IAAIO,QAAQ,EAAE;QACZ;QACA8D,SAAS,GAAG3F,IAAI,CAAC2J,GAAG,CAAC9H,QAAQ,EAAE8D,SAAS,CAAC;QACzCnE,YAAY,GAAGxB,IAAI,CAAC2J,GAAG,CAAC9H,QAAQ,EAAEL,YAAY,CAAC;;MAEjD,IAAI,CAACmE,SAAS,GAAGA,SAAS;MAC1B,IAAI,CAACM,UAAU,GAAGnE,SAAS,GAAG9B,IAAI,CAAC4J,GAAG,CAACV,cAAc,CAACP,MAAM,EAAEjH,UAAU,GAAGH,gBAAgB,CAAC;MAC5F,IAAMsI,YAAU,GAAG7J,IAAI,CAAC8J,KAAK,CAAC,IAAI,CAAC7D,UAAU,IAAIvE,UAAU,GAAGH,gBAAgB,CAAC,CAAC;MAChFxD,IAAI,CAAC+K,SAAS,EAAE,UAACxF,IAAI,EAAEQ,KAAK;QAC1B,IAAIA,KAAK,KAAK,CAAC,IAAIA,KAAK,GAAG+F,YAAU,KAAK,CAAC,EAAE;UAC3CV,KAAK,IAAI,CAAC;UACV/D,YAAY,CAACE,CAAC,IAAIK,SAAS;UAC3BP,YAAY,CAACI,CAAC,GAAGD,MAAM;;QAEzBjF,KAAI,CAAC0F,aAAa,CAAC1C,IAAI,EAAE8B,YAAY,CAAC;QACtC9B,IAAI,CAACmG,SAAS,EAAE,CAACC,OAAO,CAAC;UACvBrI,IAAI,EAAE,MAAM;UACZsF,KAAK,EAAE;YACLrB,CAAC,EAAEF,YAAY,CAACE,CAAC;YACjBE,CAAC,EAAEJ,YAAY,CAACI,CAAC;YACjBO,KAAK,EAAEJ,SAAS;YAChBgD,MAAM,EAAEjH;;SAEX,CAAC;QACF0D,YAAY,CAACI,CAAC,IAAI9D,UAAU,GAAGH,gBAAgB;MACjD,CAAC,CAAC;MACF,IAAI,CAACR,aAAa,GAAGoI,KAAK;MAC1B,IAAI,CAACnD,aAAa,CAACgD,UAAU,EAAE;QAC7B1D,CAAC,EAAED,MAAM,GAAG7D,YAAY,GAAG,CAAC,GAAG0H,cAAc,CAACnD,KAAK,GAAG,CAAC,GAAGmD,cAAc,CAACK,IAAI;QAC7E/D,CAAC,EAAE1D,SAAS,GAAGoH,cAAc,CAACP,MAAM,GAAGO,cAAc,CAACM;OACvD,CAAC;;IAGJ,IAAI,IAAI,CAACvD,UAAU,IAAI,IAAI,CAACN,SAAS,EAAE;MACrC;MACApF,SAAS,CAACkJ,SAAS,EAAE,CAACC,OAAO,CAAC;QAC5BrI,IAAI,EAAE,MAAM;QACZsF,KAAK,EAAE;UACLrB,CAAC,EAAE,IAAI,CAACD,MAAM;UACdG,CAAC,EAAE,IAAI,CAACD,MAAM;UACdQ,KAAK,EAAE,IAAI,CAACJ,SAAS;UACrBgD,MAAM,EAAE,IAAI,CAAC1C;;OAEhB,CAAC;;IAEJ;IACA,IAAIR,MAAM,KAAK,YAAY,IAAI,IAAI,CAACxH,GAAG,CAAC,QAAQ,CAAC,EAAE;MACjD,IAAI,CAAC8C,aAAa,GAAGf,IAAI,CAAC+J,IAAI,CAACZ,KAAK,GAAG,IAAI,CAAClL,GAAG,CAAC,QAAQ,CAAC,CAAC;KAC3D,MAAM;MACL,IAAI,CAAC8C,aAAa,GAAGoI,KAAK;;IAE5B,IAAI,IAAI,CAAC1I,gBAAgB,GAAG,IAAI,CAACM,aAAa,EAAE;MAC9C,IAAI,CAACN,gBAAgB,GAAG,CAAC;;IAE3B,IAAI,CAACC,gBAAgB,CAACsI,UAAU,CAAC;IACjC;IACAzI,SAAS,CAACO,IAAI,CAAC,QAAQ,EAAE,IAAI,CAACF,0BAA0B,EAAE,CAAC;EAC7D,CAAC;EAED;;;EAGQI,iCAAc,GAAtB,UACE8D,KAAa,EACbW,MAAiC,EACjCtG,IAAY,EACZ6K,QAAiC;IAEjC,IAAM5E,YAAY,GAAG;MAAEE,CAAC,EAAE,CAAC;MAAEE,CAAC,EAAE;IAAC,CAAE;IACnC,IAAMI,QAAQ,GAAG,IAAI,CAACV,QAAQ,CAACJ,KAAK,EAAE;MACpClB,EAAE,EAAE,IAAI,CAACuB,YAAY,CAAC,kBAAkB,CAAC;MACzC/D,IAAI,EAAE;KACP,CAAC;IACF,IAAM6I,KAA+BhM,GAAG,CAAC+L,QAAQ,CAACpL,MAAM,EAAE,OAAO,EAAE,EAAE,CAAC;MAA9DsL,YAAS;MAAThL,IAAI,mBAAG,EAAE;MAAKiL,UAAU,cAA1B,QAA4B,CAAoC;IACtE,IAAMC,SAAS,GAAG,IAAI,CAACC,SAAS,CAC9BzE,QAAQ,EACRR,YAAY,EACZvF,eAAe,EACf4F,MAAM,KAAK,YAAY,GAAG,IAAI,GAAG,MAAM,EACvCvG,IAAI,EACJiL,UAAU,CACX;IACDC,SAAS,CAACE,EAAE,CAAC,OAAO,EAAE,IAAI,CAACC,gBAAgB,CAAC;IAC5C,IAAMC,aAAa,GAAGJ,SAAS,CAACtE,OAAO,EAAE;IACzCV,YAAY,CAACE,CAAC,IAAIkF,aAAa,CAACzE,KAAK,GAAG,CAAC;IAEzC,IAAM0E,SAAS,GAAG,IAAI,CAAC/D,QAAQ,CAACd,QAAQ,EAAE;MACxCvE,IAAI,EAAE,MAAM;MACZuC,EAAE,EAAE,IAAI,CAACuB,YAAY,CAAC,iBAAiB,CAAC;MACxC/D,IAAI,EAAE,iBAAiB;MACvBuF,KAAK;QACHrB,CAAC,EAAEF,YAAY,CAACE,CAAC;QACjBE,CAAC,EAAEJ,YAAY,CAACI,CAAC,GAAGtG,IAAI,GAAG,CAAC;QAC5BC,IAAI;QACJK,YAAY,EAAE;MAAQ,GACnBvB,GAAG,CAAC+L,QAAQ,CAAC7K,IAAI,EAAE,OAAO,CAAC;KAEjC,CAAC;IACF,IAAMuL,QAAQ,GAAGD,SAAS,CAAC3E,OAAO,EAAE;IACpCV,YAAY,CAACE,CAAC,IAAIoF,QAAQ,CAAC3E,KAAK,GAAG,CAAC;IAEpC,IAAM4E,UAAU,GAAG,IAAI,CAACN,SAAS,CAC/BzE,QAAQ,EACRR,YAAY,EACZxF,gBAAgB,EAChB6F,MAAM,KAAK,YAAY,GAAG,MAAM,GAAG,OAAO,EAC1CvG,IAAI,EACJiL,UAAU,CACX;IACDQ,UAAU,CAACL,EAAE,CAAC,OAAO,EAAE,IAAI,CAACM,iBAAiB,CAAC;IAE9C,OAAOhF,QAAQ;EACjB,CAAC;EAEO5E,mCAAgB,GAAxB,UAAyBgI,UAAmB;IAC1C,IAAM7G,aAAa,GAA2BrE,OAAO,CAAC,EAAE,EAAEa,sBAAsB,EAAE,IAAI,CAACV,GAAG,CAAC,eAAe,CAAC,CAAC;IACtG,SAAmDkE,aAAa,CAACvD,MAAM,CAACC,KAAK;MAA3EG,IAAI;MAAEC,OAAO;MAAEH,YAAY;MAAEC,eAAe,qBAA+B;IAEnF,IAAMI,IAAI,GAAM,IAAI,CAACsB,gBAAgB,SAAI,IAAI,CAACM,aAAe;IAC7D,IAAM0J,SAAS,GAAGzB,UAAU,GAAGA,UAAU,CAAC6B,WAAW,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAACrK,mBAAmB,CAAC,iBAAiB,CAAC;IACxG,IAAM4J,SAAS,GAAGpB,UAAU,GACxBA,UAAU,CAAC8B,QAAQ,CAAC,IAAI,CAAC3F,YAAY,CAACtF,eAAe,CAAC,CAAC,GACvD,IAAI,CAACW,mBAAmB,CAACX,eAAe,CAAC;IAC7C,IAAM8K,UAAU,GAAG3B,UAAU,GACzBA,UAAU,CAAC8B,QAAQ,CAAC,IAAI,CAAC3F,YAAY,CAACvF,gBAAgB,CAAC,CAAC,GACxD,IAAI,CAACY,mBAAmB,CAACZ,gBAAgB,CAAC;IAC9C6K,SAAS,CAAC3J,IAAI,CAAC,MAAM,EAAE3B,IAAI,CAAC;IAC5B;IACAiL,SAAS,CAACtJ,IAAI,CAAC,SAAS,EAAE,IAAI,CAACL,gBAAgB,KAAK,CAAC,GAAG1B,eAAe,GAAGE,OAAO,CAAC;IAClFmL,SAAS,CAACtJ,IAAI,CAAC,MAAM,EAAE,IAAI,CAACL,gBAAgB,KAAK,CAAC,GAAG3B,YAAY,GAAGE,IAAI,CAAC;IACzEoL,SAAS,CAACtJ,IAAI,CAAC,QAAQ,EAAE,IAAI,CAACL,gBAAgB,KAAK,CAAC,GAAG,aAAa,GAAG,SAAS,CAAC;IACjF;IACAkK,UAAU,CAAC7J,IAAI,CAAC,SAAS,EAAE,IAAI,CAACL,gBAAgB,KAAK,IAAI,CAACM,aAAa,GAAGhC,eAAe,GAAGE,OAAO,CAAC;IACpG0L,UAAU,CAAC7J,IAAI,CAAC,MAAM,EAAE,IAAI,CAACL,gBAAgB,KAAK,IAAI,CAACM,aAAa,GAAGjC,YAAY,GAAGE,IAAI,CAAC;IAC3F2L,UAAU,CAAC7J,IAAI,CAAC,QAAQ,EAAE,IAAI,CAACL,gBAAgB,KAAK,IAAI,CAACM,aAAa,GAAG,aAAa,GAAG,SAAS,CAAC;IACnG;IACA,IAAIgK,OAAO,GAAGX,SAAS,CAACtE,OAAO,EAAE,CAACuC,IAAI,GAAG,CAAC;IAC1CoC,SAAS,CAAC3J,IAAI,CAAC,GAAG,EAAEiK,OAAO,CAAC;IAC5BA,OAAO,IAAIN,SAAS,CAAC3E,OAAO,EAAE,CAACC,KAAK,GAAG,CAAC;IACxC,IAAI,CAACiF,eAAe,CAACL,UAAU,EAAE;MAAErF,CAAC,EAAEyF,OAAO;MAAEvF,CAAC,EAAE;IAAC,CAAE,CAAC;EAExD,CAAC;EAEOxE,4BAAS,GAAjB,UACE8D,KAAa,EACbM,YAAsC,EACtChE,IAAY,EACZ6J,SAA2C,EAC3C/L,IAAY,EACZL,KAAiD;IAEzC,KAAC,GAAQuG,YAAY,EAApB;MAAEI,CAAC,GAAKJ,YAAY,EAAjB;IACZ,IAAMqB,KAAK,GAAG,IAAI,CAACC,QAAQ,CAAC5B,KAAK,EAAE;MACjCzD,IAAI,EAAE,MAAM;MACZuC,EAAE,EAAE,IAAI,CAACuB,YAAY,CAAC/D,IAAI,CAAC;MAC3BA,IAAI;MACJuF,KAAK;QACHzH,IAAI;QACJ+L,SAAS;QACTxD,IAAI,EAAE,CAAC,CAAC,GAAG,EAAEnC,CAAC,GAAGpG,IAAI,GAAG,CAAC,EAAEsG,CAAC,CAAC,EAAE,CAAC,GAAG,EAAEF,CAAC,EAAEE,CAAC,GAAGtG,IAAI,CAAC,EAAE,CAAC,GAAG,EAAEoG,CAAC,GAAGpG,IAAI,EAAEsG,CAAC,GAAGtG,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QACpFgM,MAAM,EAAE;MAAS,GACdrM,KAAK;KAEX,CAAC;IACF4H,KAAK,CAAC3F,IAAI,CAAC,QAAQ,EAAExC,gBAAgB,CAAC;MAAEgH,CAAC,EAAEA,CAAC,GAAGpG,IAAI,GAAG,CAAC;MAAEsG,CAAC,EAAEA,CAAC,GAAGtG,IAAI,GAAG;IAAC,CAAE,EAAEY,UAAU,CAACmL,SAAS,CAAC,CAAC,CAAC;IAEnG,OAAOxE,KAAK;EACd,CAAC;EAED;;;EAGQzF,kCAAe,GAAvB,UAAwBmK,KAAa,EAAEC,KAA+B;IAC5D,KAAC,GAAQA,KAAK,EAAb;MAAE5F,CAAC,GAAK4F,KAAK,EAAV;IACN,SAAsBD,KAAK,CAACrK,IAAI,EAAE;MAAhC5B,IAAI;MAAE+L,SAAS,eAAiB;IACxC,IAAItK,MAAM,GAAGrC,gBAAgB,CAAC;MAAEgH,CAAC,EAAEA,CAAC,GAAGpG,IAAI,GAAG,CAAC;MAAEsG,CAAC,EAAEA,CAAC,GAAGtG,IAAI,GAAG;IAAC,CAAE,EAAEY,UAAU,CAACmL,SAAS,CAAC,CAAC;IAC1FE,KAAK,CAACrK,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,EAAEwE,CAAC,GAAGpG,IAAI,GAAG,CAAC,EAAEsG,CAAC,CAAC,EAAE,CAAC,GAAG,EAAEF,CAAC,EAAEE,CAAC,GAAGtG,IAAI,CAAC,EAAE,CAAC,GAAG,EAAEoG,CAAC,GAAGpG,IAAI,EAAEsG,CAAC,GAAGtG,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAClGiM,KAAK,CAACrK,IAAI,CAAC,QAAQ,EAAEH,MAAM,CAAC;EAC9B,CAAC;EAEOK,6CAA0B,GAAlC;IACQ,SAA8C,IAAI;MAAhDP,gBAAgB;MAAEkF,SAAS;MAAEM,UAAU,gBAAS;IACxD,IAAMR,MAAM,GAAG,IAAI,CAACxH,GAAG,CAAC,QAAQ,CAAC;IACjC,IAAMoN,SAAS,GACb5F,MAAM,KAAK,YAAY,GACnB;MACEH,CAAC,EAAE,CAAC;MACJE,CAAC,EAAES,UAAU,IAAI,CAAC,GAAGxF,gBAAgB;KACtC,GACD;MACE6E,CAAC,EAAEK,SAAS,IAAI,CAAC,GAAGlF,gBAAgB,CAAC;MACrC+E,CAAC,EAAE;KACJ;IAEP,OAAOjH,oBAAoB,CAAC8M,SAAS,CAAC;EACxC,CAAC;EAwCD;EACQrK,kCAAe,GAAvB,UAAwBsC,IAAc,EAAEsC,QAAgB;IACtD,IAAM0F,MAAM,GAAG,IAAI,CAACC,aAAa,CAACjI,IAAI,CAAC;IACvC,IAAMkI,SAAS,GAAGF,MAAM,CAACG,MAAM,GAAG,CAAC;IACnC,IAAID,SAAS,EAAE;MACb,IAAME,QAAQ,GAAG9F,QAAQ,CAACiF,WAAW,EAAE;MACvC,IAAMc,YAAU,GAAG,IAAI,CAAC1N,GAAG,CAAC,YAAY,CAAC;MACzCF,IAAI,CAAC2N,QAAQ,EAAE,UAACE,OAAO;QACrB,IAAMxK,IAAI,GAAGwK,OAAO,CAAC3N,GAAG,CAAC,MAAM,CAAC;QAChC,IAAM4N,MAAM,GAAGzK,IAAI,CAAC0K,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACnC,IAAMC,WAAW,GAAGvN,cAAc,CAAC8E,IAAI,EAAEuI,MAAM,EAAEF,YAAU,CAAC;QAC5D,IAAII,WAAW,EAAE;UACfH,OAAO,CAAC9K,IAAI,CAACiL,WAAW,CAAC;UACzB,IAAIF,MAAM,KAAK,QAAQ,IAAI,EAAED,OAAO,CAAC3N,GAAG,CAAC,UAAU,CAAC,IAAI2N,OAAO,CAAC3N,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE;YAC9E;YACA,IAAI2N,OAAO,CAAC3N,GAAG,CAAC,UAAU,CAAC,EAAE;cAC3B2N,OAAO,CAAC9K,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC;;YAE5B,IAAI8K,OAAO,CAAC3N,GAAG,CAAC,QAAQ,CAAC,EAAE;cACzB2N,OAAO,CAAC9K,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC;;;;MAIpC,CAAC,CAAC;;EAEN,CAAC;EAED;EACQE,oCAAiB,GAAzB;IACE,IAAMS,SAAS,GAAG,IAAI,CAACxD,GAAG,CAAC,WAAW,CAAC;IACvC,IAAIuD,YAAY,GAAG,IAAI,CAACvD,GAAG,CAAC,cAAc,CAAC;IAE3C,IAAIuD,YAAY,EAAE;MAChB;MACA,IAAIC,SAAS,EAAE;QACbD,YAAY,GAAGC,SAAS,IAAID,YAAY,GAAGC,SAAS,GAAGD,YAAY;;KAEtE,MAAM,IAAIC,SAAS,EAAE;MACpBD,YAAY,GAAGC,SAAS;;IAG1B,OAAOD,YAAY;EACrB,CAAC;EACH,eAAC;AAAD,CAAC,CAp0BsB9C,UAAU;AAs0BjC,eAAesC,QAAQ","names":["clamp","deepMix","each","filter","get","mix","isNumber","isFunction","ellipsisLabel","getMatrixByAngle","getMatrixByTranslate","getStatesStyle","Theme","LegendBase","DEFAULT_PAGE_NAVIGATOR","marker","style","inactiveFill","inactiveOpacity","fill","opacity","size","text","fontSize","textStyle","textColor","textAlign","textBaseline","fontFamily","fontWeight","lineHeight","RIGHT_ARROW_NAME","LEFT_ARROW_NAME","ROTATE_MAP","right","Math","PI","left","up","down","__extends","_this","itemGroup","getElementByLocalId","currentPageIndex","updateNavigation","matrix","getCurrentNavigationMatrix","animate","attr","totalPagesCnt","Category","cfg","_super","getDefaultCfg","name","type","itemSpacing","itemMarginBottom","maxItemWidth","itemWidth","itemHeight","itemName","itemValue","maxWidth","maxHeight","radio","items","itemStates","itemBackground","pageNavigator","defaultCfg","title","spacing","background","padding","stroke","lineColor","r","symbol","alignRight","formatter","active","nameStyle","unchecked","uncheckedColor","markerStyle","inactive","update","item","clear","render","state","value","itemElement","id","getItems","index","indexOf","offsetGroup","createOffScreenGroup","newElement","drawItem","getItemHeight","updateElements","clearUpdateStatus","rst","v","k","push","getItemsByState","setItemState","hasState","group","processItems","drawItems","itemContainerGroup","addGroup","getElementId","currentPoint","startX","x","startY","y","layout","wrapped","pageWidth","subGroup","bbox","getBBox","width","moveElementTo","pageHeight","adjustNavigation","style_1","items_1","forEach","container","markerCfg","markerAttrs","shape","addShape","attrs","set","textName","xPosition","radioCfg","lineWidth","x0","y0","x1","y1","x2","y2","x3","y3","path","showRadio","radioShape","tip","groupId","subContainer","delegateObject","getLimitItemWidth","curX","markerShape","drawMarker","itemMarkerSpacing","maxX","nameShape","drawItemText","valueShape","drawRadio","backShape","height","toBack","applyItemStates","subGroups","findAll","navigation","drawNavigation","navigationBBox","pages","widthLimit","maxRow","maxRowHeight_1","minX","minY","getParent","setClip","min","max","cntPerPage_1","floor","ceil","styleCfg","_a","_b","arrowStyle","leftArrow","drawArrow","on","onNavigationBack","leftArrowBBox","textShape","textBBox","rightArrow","onNavigationAfter","getChildren","findById","cursorX","updateArrowPath","direction","cursor","arrow","point","translate","states","getItemStates","hasStates","length","children","itemStates_1","element","elName","split","statesStyle"],"sources":["/home/iam/Documents/network/node_modules/@antv/component/src/legend/category.ts"],"sourcesContent":["import { IGroup, IShape } from '@antv/g-base';\nimport { clamp, deepMix, each, filter, get, mix, isNumber, isFunction } from '@antv/util';\nimport { IList } from '../interfaces';\nimport {\n  CategoryLegendCfg,\n  LegendPageNavigatorCfg,\n  LegendItemNameCfg,\n  LegendMarkerCfg,\n  ListItem,\n  LegendRadio,\n} from '../types';\nimport { ellipsisLabel } from '../util/label';\nimport { getMatrixByAngle, getMatrixByTranslate } from '../util/matrix';\nimport { getStatesStyle } from '../util/state';\nimport Theme from '../util/theme';\nimport LegendBase from './base';\n\n/**\n * 分页器 默认配置\n */\nconst DEFAULT_PAGE_NAVIGATOR = {\n  marker: {\n    style: {\n      inactiveFill: '#000',\n      inactiveOpacity: 0.45,\n      fill: '#000',\n      opacity: 1,\n      size: 12,\n    },\n  },\n  text: {\n    style: {\n      fill: '#ccc',\n      fontSize: 12,\n    },\n  },\n};\n\n// 默认 文本style\nconst textStyle = {\n  fill: Theme.textColor,\n  fontSize: 12,\n  textAlign: 'start',\n  textBaseline: 'middle',\n  fontFamily: Theme.fontFamily,\n  fontWeight: 'normal',\n  lineHeight: 12,\n};\n\nconst RIGHT_ARROW_NAME = 'navigation-arrow-right';\nconst LEFT_ARROW_NAME = 'navigation-arrow-left';\n\nconst ROTATE_MAP = {\n  right: (90 * Math.PI) / 180,\n  left: ((360 - 90) * Math.PI) / 180,\n  up: 0,\n  down: (180 * Math.PI) / 180,\n};\nclass Category extends LegendBase<CategoryLegendCfg> implements IList {\n  private currentPageIndex = 1;\n  private totalPagesCnt = 1;\n  private pageWidth = 0;\n  private pageHeight = 0;\n  private startX = 0;\n  private startY = 0;\n\n  public getDefaultCfg() {\n    const cfg = super.getDefaultCfg();\n    return {\n      ...cfg,\n      name: 'legend',\n      type: 'category',\n      itemSpacing: 24,\n      itemMarginBottom: 8,\n      maxItemWidth: null,\n      itemWidth: null,\n      itemHeight: null,\n      itemName: {},\n      itemValue: null,\n      maxWidth: null,\n      maxHeight: null,\n      marker: {},\n      radio: null,\n      items: [],\n      itemStates: {},\n      itemBackground: {},\n      pageNavigator: {},\n      defaultCfg: {\n        title: {\n          spacing: 5,\n          style: {\n            fill: Theme.textColor,\n            fontSize: 12,\n            textAlign: 'start',\n            textBaseline: 'top',\n          },\n        },\n        background: {\n          padding: 5,\n          style: {\n            stroke: Theme.lineColor,\n          },\n        },\n        itemBackground: {\n          style: {\n            opacity: 0,\n            fill: '#fff',\n          },\n        },\n        pageNavigator: DEFAULT_PAGE_NAVIGATOR,\n        itemName: {\n          spacing: 16, // 如果右边有 value 或者 RadioIcon 使用这个间距\n          style: textStyle,\n        },\n        marker: {\n          spacing: 8,\n          style: {\n            r: 6,\n            symbol: 'circle',\n          },\n        },\n        itemValue: {\n          alignRight: false, // 只有itemWidth 不为 null 时此属性有效\n          formatter: null,\n          style: textStyle,\n          spacing: 6, // 如果右边有 RadioIcon 使用在这个间距\n        },\n        itemStates: {\n          active: {\n            nameStyle: {\n              opacity: 0.8,\n            },\n          },\n          unchecked: {\n            nameStyle: {\n              fill: Theme.uncheckedColor,\n            },\n            markerStyle: {\n              fill: Theme.uncheckedColor,\n              stroke: Theme.uncheckedColor,\n            },\n          },\n          inactive: {\n            nameStyle: {\n              fill: Theme.uncheckedColor,\n            },\n            markerStyle: {\n              opacity: 0.2,\n            },\n          },\n        },\n      },\n    };\n  }\n\n  // 实现 IList 接口\n  public isList(): boolean {\n    return true;\n  }\n\n  /**\n   * 获取图例项\n   * @return {ListItem[]} 列表项集合\n   */\n  public getItems(): ListItem[] {\n    return this.get('items');\n  }\n\n  /**\n   * 设置列表项\n   * @param {ListItem[]} items 列表项集合\n   */\n  public setItems(items: ListItem[]) {\n    this.update({\n      items,\n    });\n  }\n\n  /**\n   * 更新列表项\n   * @param {ListItem} item 列表项\n   * @param {object}   cfg  列表项\n   */\n  public updateItem(item: ListItem, cfg: object) {\n    mix(item, cfg);\n    this.clear(); // 由于单个图例项变化，会引起全局变化，所以全部更新\n    this.render();\n  }\n\n  /**\n   * 清空列表\n   */\n  public clearItems() {\n    const itemGroup = this.getElementByLocalId('item-group');\n    itemGroup && itemGroup.clear();\n  }\n\n  /**\n   * 设置列表项的状态\n   * @param {ListItem} item  列表项\n   * @param {string}   state 状态名\n   * @param {boolean}  value 状态值, true, false\n   */\n  public setItemState(item: ListItem, state: string, value: boolean) {\n    item[state] = value;\n    const itemElement = this.getElementByLocalId(`item-${item.id}`);\n    if (itemElement) {\n      const items = this.getItems();\n      const index = items.indexOf(item);\n      const offsetGroup = this.createOffScreenGroup(); // 离屏的 group\n      const newElement = this.drawItem(item, index, this.getItemHeight(), offsetGroup);\n      this.updateElements(newElement, itemElement); // 更新整个分组\n      this.clearUpdateStatus(itemElement); // 清理更新状态，防止出现 bug\n    }\n  }\n  /**\n   * 是否存在指定的状态\n   * @param {ListItem} item  列表项\n   * @param {boolean} state 状态名\n   */\n  public hasState(item: ListItem, state: string): boolean {\n    return !!item[state];\n  }\n\n  public getItemStates(item: ListItem): string[] {\n    const itemStates = this.get('itemStates');\n    const rst = [];\n    each(itemStates, (v, k) => {\n      if (item[k]) {\n        // item.selected\n        rst.push(k);\n      }\n    });\n    return rst;\n  }\n\n  /**\n   * 清楚所有列表项的状态\n   * @param {string} state 状态值\n   */\n  public clearItemsState(state: string) {\n    const items = this.getItemsByState(state);\n    each(items, (item) => {\n      this.setItemState(item, state, false);\n    });\n  }\n\n  /**\n   * 根据状态获取图例项\n   * @param  {string}     state [description]\n   * @return {ListItem[]}       [description]\n   */\n  public getItemsByState(state: string): ListItem[] {\n    const items = this.getItems();\n    return filter(items, (item) => {\n      return this.hasState(item, state);\n    });\n  }\n\n  // 绘制 legend 的选项\n  protected drawLegendContent(group) {\n    this.processItems();\n    this.drawItems(group);\n  }\n\n  // 防止未设置 id\n  private processItems() {\n    const items = this.get('items');\n    each(items, (item) => {\n      if (!item.id) {\n        // 如果没有设置 id，默认使用 name\n        item.id = item.name;\n      }\n    });\n  }\n\n  // 绘制所有的图例选项\n  private drawItems(group: IGroup) {\n    const itemContainerGroup = this.addGroup(group, {\n      id: this.getElementId('item-container-group'),\n      name: 'legend-item-container-group',\n    });\n    const itemGroup = this.addGroup(itemContainerGroup, {\n      id: this.getElementId('item-group'),\n      name: 'legend-item-group',\n    });\n    const itemHeight = this.getItemHeight();\n    const itemWidth = this.get('itemWidth');\n    const itemSpacing = this.get('itemSpacing');\n    const itemMarginBottom = this.get('itemMarginBottom');\n    const currentPoint = this.get('currentPoint');\n    const startX = currentPoint.x;\n    const startY = currentPoint.y;\n    const layout = this.get('layout');\n    const items = this.get('items');\n    let wrapped = false;\n    let pageWidth = 0;\n\n    const maxWidth = this.get('maxWidth'); // 最大宽度，会导致 layout : 'horizontal' 时自动换行\n    const maxHeight = this.get('maxHeight'); // 最大高度，会导致出现分页\n    // 暂时不考虑分页\n    each(items, (item, index) => {\n      const subGroup = this.drawItem(item, index, itemHeight, itemGroup);\n      const bbox = subGroup.getBBox();\n      const width = itemWidth || bbox.width;\n      if (width > pageWidth) {\n        pageWidth = width;\n      }\n      if (layout === 'horizontal') {\n        // 如果水平布局\n        if (maxWidth && maxWidth < currentPoint.x + width - startX) {\n          // 检测是否换行\n          wrapped = true;\n          currentPoint.x = startX;\n          currentPoint.y += itemHeight + itemMarginBottom;\n        }\n        this.moveElementTo(subGroup, currentPoint);\n        currentPoint.x += width + itemSpacing;\n      } else {\n        // 如果垂直布局\n        if (maxHeight && maxHeight < currentPoint.y + itemHeight + itemMarginBottom - startY) {\n          // 换行\n          wrapped = true;\n          currentPoint.x += pageWidth + itemSpacing;\n          currentPoint.y = startY;\n          pageWidth = 0;\n        }\n        this.moveElementTo(subGroup, currentPoint);\n        currentPoint.y += itemHeight + itemMarginBottom; // itemSpacing 仅影响水平间距\n      }\n    });\n\n    if (wrapped && this.get('flipPage')) {\n      this.pageHeight = 0;\n      this.pageWidth = 0;\n      this.totalPagesCnt = 1;\n      this.startX = startX;\n      this.startY = startY;\n      this.adjustNavigation(group, itemGroup);\n    }\n  }\n  // 获取图例项的高度，如果未定义，则按照 name 的高度计算\n  private getItemHeight() {\n    let itemHeight = this.get('itemHeight');\n    if (!itemHeight) {\n      const { style }: LegendItemNameCfg = this.get('itemName') || {};\n\n      if (isFunction(style)) {\n        const items = this.getItems();\n        items.forEach((item, index) => {\n          const { fontSize } = { ...textStyle, ...style(item, index, items) };\n          if (itemHeight < fontSize) {\n            itemHeight = fontSize;\n          }\n        });\n      } else if (style) {\n        itemHeight = style.fontSize;\n      }\n    }\n    return itemHeight;\n  }\n  // 绘制 marker\n  private drawMarker(container: IGroup, markerCfg: LegendMarkerCfg, item: ListItem, itemHeight: number) {\n    const markerAttrs = {\n      x: 0,\n      y: itemHeight / 2,\n      ...markerCfg.style,\n      symbol: get(item.marker, 'symbol', 'circle'),\n      ...get(item.marker, 'style', {}),\n    };\n\n    const shape = this.addShape(container, {\n      type: 'marker',\n      id: this.getElementId(`item-${item.id}-marker`),\n      name: 'legend-item-marker',\n      attrs: markerAttrs,\n    });\n    const bbox = shape.getBBox();\n    shape.attr('x', bbox.width / 2); // marker 需要左对齐，所以不能占用左侧的空间\n\n    const { stroke, fill } = shape.attr();\n    if (stroke) {\n      shape.set('isStroke', true);\n    }\n    if (fill) {\n      shape.set('isFill', true);\n    }\n\n    return shape;\n  }\n  // 绘制文本\n  private drawItemText(\n    container: IGroup,\n    textName: string,\n    cfg: LegendItemNameCfg,\n    item: ListItem,\n    itemHeight: number,\n    xPosition: number,\n    index: number\n  ) {\n    const formatter = cfg.formatter;\n    const { style } = cfg;\n\n    const attrs = {\n      x: xPosition,\n      y: itemHeight / 2,\n      text: formatter ? formatter(item[textName], item, index) : item[textName],\n      ...textStyle,\n      ...(isFunction(style) ? style(item, index, this.getItems()) : style),\n    };\n\n    return this.addShape(container, {\n      type: 'text',\n      id: this.getElementId(`item-${item.id}-${textName}`),\n      name: `legend-item-${textName}`,\n      attrs,\n    });\n  }\n\n  private drawRadio(container: IGroup, radioCfg: LegendRadio, item: ListItem, itemHeight: number, x: number) {\n    const style = radioCfg.style || {};\n    // 以用户设置的 r 为主\n    const r = style.r ?? itemHeight / 2;\n    const lineWidth = (r * 3.6) / 8;\n    const [x0, y0] = [x + r, itemHeight / 2 - r];\n    const [x1, y1] = [x0 + r, y0 + r];\n    const [x2, y2] = [x0, y1 + r];\n    const [x3, y3] = [x, y0 + r];\n    const { showRadio } = item;\n    const attrs = {\n      path: [\n        ['M', x0, y0],\n        ['A', r, r, 0, 0, 1, x1, y1],\n        ['L', x1 - lineWidth, y1],\n        ['L', x1, y1],\n        ['A', r, r, 0, 0, 1, x2, y2],\n        ['L', x2, y2 - lineWidth],\n        ['L', x2, y2],\n        ['A', r, r, 0, 0, 1, x3, y3],\n        ['L', x3 + lineWidth, y3],\n        ['L', x3, y3],\n        ['A', r, r, 0, 0, 1, x0, y0],\n        ['L', x0, y0 + lineWidth],\n      ],\n      stroke: '#000000',\n      fill: '#ffffff',\n      ...style,\n      opacity: showRadio ? (style?.opacity ?? 0.45) : 0,\n    };\n\n    const radioShape = this.addShape(container, {\n      type: 'path',\n      id: this.getElementId(`item-${item.id}-radio`),\n      name: 'legend-item-radio',\n      attrs,\n    });\n    radioShape.set('tip', radioCfg.tip);\n    return radioShape;\n  }\n\n  // 绘制图例项\n  private drawItem(item: ListItem, index: number, itemHeight: number, itemGroup: IGroup) {\n    const groupId = `item-${item.id}`;\n    // 设置单独的 Group 用于 setClip\n    const subContainer = this.addGroup(itemGroup, {\n      name: 'legend-item-container',\n      id: this.getElementId(`item-container-${groupId}`),\n      delegateObject: {\n        item,\n        index,\n      },\n    });\n    const subGroup = this.addGroup(subContainer, {\n      name: 'legend-item',\n      id: this.getElementId(groupId),\n      delegateObject: {\n        item,\n        index,\n      },\n    });\n    const marker = this.get('marker');\n    const itemName = this.get('itemName');\n    const itemValue = this.get('itemValue');\n    const itemBackground = this.get('itemBackground');\n    const radio = this.get('radio');\n    const itemWidth = this.getLimitItemWidth();\n\n    let curX = 0; // 记录当前 x 的位置\n    if (marker) {\n      const markerShape = this.drawMarker(subGroup, marker, item, itemHeight);\n      let spacing = marker.spacing;\n      const itemMarkerSpacing = get(item, ['marker', 'spacing']);\n\n      if (isNumber(itemMarkerSpacing)) {\n        // 如果 item 有配置 marker.spacing，采用 item 的配置\n        spacing = itemMarkerSpacing;\n      }\n\n      curX = markerShape.getBBox().maxX + spacing;\n    }\n\n    if (itemName) {\n      const nameShape = this.drawItemText(subGroup, 'name', itemName, item, itemHeight, curX, index);\n      if (itemWidth) {\n        // 设置了 item 的最大宽度限制，并且超出了，进行省略处理\n        ellipsisLabel(true, nameShape, clamp(itemWidth - curX, 0, itemWidth));\n      }\n      curX = nameShape.getBBox().maxX + itemName.spacing;\n    }\n\n    if (itemValue) {\n      const valueShape = this.drawItemText(subGroup, 'value', itemValue, item, itemHeight, curX, index);\n      if (itemWidth) {\n        if (itemValue.alignRight) {\n          valueShape.attr({\n            textAlign: 'right',\n            x: itemWidth,\n          });\n          ellipsisLabel(true, valueShape, clamp(itemWidth - curX, 0, itemWidth), 'head');\n        } else {\n          ellipsisLabel(true, valueShape, clamp(itemWidth - curX, 0, itemWidth));\n        }\n      }\n      curX = valueShape.getBBox().maxX + itemValue.spacing;\n    }\n\n    if (radio) {\n      this.drawRadio(subGroup, radio, item, itemHeight, curX);\n    }\n\n    // 添加透明的背景，便于拾取和包围盒计算\n    if (itemBackground) {\n      const bbox = subGroup.getBBox();\n      const backShape = this.addShape(subGroup, {\n        type: 'rect',\n        name: 'legend-item-background',\n        id: this.getElementId(`${groupId}-background`),\n        attrs: {\n          x: 0,\n          y: 0,\n          width: bbox.width,\n          height: itemHeight,\n          ...itemBackground.style,\n        },\n      });\n      backShape.toBack();\n    }\n\n    this.applyItemStates(item, subGroup);\n    return subGroup;\n  }\n\n  // 加上分页器并重新排序 items\n  private adjustNavigation(container: IGroup, itemGroup: IGroup) {\n    const startX = this.startX;\n    const startY = this.startY;\n    const layout = this.get('layout');\n    const subGroups = itemGroup.findAll((item) => item.get('name') === 'legend-item');\n    const maxWidth = this.get('maxWidth');\n    const maxHeight = this.get('maxHeight');\n    const itemWidth = this.get('itemWidth');\n    const itemSpacing = this.get('itemSpacing');\n    const itemHeight = this.getItemHeight();\n    const pageNavigator: LegendPageNavigatorCfg = deepMix({}, DEFAULT_PAGE_NAVIGATOR, this.get('pageNavigator'));\n    const navigation = this.drawNavigation(container, layout, '00/00', pageNavigator);\n    const navigationBBox = navigation.getBBox();\n    const currentPoint = { x: startX, y: startY };\n    let pages = 1;\n    let widthLimit = 0;\n    let pageWidth = 0;\n    let maxItemWidth = 0;\n    const itemMarginBottom = this.get('itemMarginBottom');\n    if (layout === 'horizontal') {\n      const maxRow = this.get('maxRow') || 1;\n      const maxRowHeight = itemHeight + (maxRow === 1 ? 0 : itemMarginBottom);\n      this.pageHeight = maxRowHeight * maxRow;\n      each(subGroups, (item) => {\n        const bbox = item.getBBox();\n        const width = itemWidth || bbox.width;\n        if (\n          (widthLimit && widthLimit < currentPoint.x + width + itemSpacing) ||\n          maxWidth < currentPoint.x + width + itemSpacing + navigationBBox.width\n        ) {\n          if (pages === 1) {\n            widthLimit = currentPoint.x + itemSpacing;\n            this.pageWidth = widthLimit;\n            this.moveElementTo(navigation, {\n              x: maxWidth - itemSpacing - navigationBBox.width - navigationBBox.minX,\n              y: currentPoint.y + itemHeight / 2 - navigationBBox.height / 2 - navigationBBox.minY,\n            });\n          }\n          pages += 1;\n          currentPoint.x = startX;\n          currentPoint.y += maxRowHeight;\n        }\n        this.moveElementTo(item, currentPoint);\n        item.getParent().setClip({\n          type: 'rect',\n          attrs: {\n            x: currentPoint.x,\n            y: currentPoint.y,\n            width: width + itemSpacing,\n            height: itemHeight,\n          },\n        });\n        currentPoint.x += width + itemSpacing;\n      });\n    } else {\n      each(subGroups, (item) => {\n        const bbox = item.getBBox();\n        if (bbox.width > pageWidth) {\n          pageWidth = bbox.width;\n        }\n      });\n      maxItemWidth = pageWidth;\n      pageWidth += itemSpacing;\n      if (maxWidth) {\n        // maxWidth 限制加上\n        pageWidth = Math.min(maxWidth, pageWidth);\n        maxItemWidth = Math.min(maxWidth, maxItemWidth);\n      }\n      this.pageWidth = pageWidth;\n      this.pageHeight = maxHeight - Math.max(navigationBBox.height, itemHeight + itemMarginBottom);\n      const cntPerPage = Math.floor(this.pageHeight / (itemHeight + itemMarginBottom));\n      each(subGroups, (item, index) => {\n        if (index !== 0 && index % cntPerPage === 0) {\n          pages += 1;\n          currentPoint.x += pageWidth;\n          currentPoint.y = startY;\n        }\n        this.moveElementTo(item, currentPoint);\n        item.getParent().setClip({\n          type: 'rect',\n          attrs: {\n            x: currentPoint.x,\n            y: currentPoint.y,\n            width: pageWidth,\n            height: itemHeight,\n          },\n        });\n        currentPoint.y += itemHeight + itemMarginBottom;\n      });\n      this.totalPagesCnt = pages;\n      this.moveElementTo(navigation, {\n        x: startX + maxItemWidth / 2 - navigationBBox.width / 2 - navigationBBox.minX,\n        y: maxHeight - navigationBBox.height - navigationBBox.minY,\n      });\n    }\n\n    if (this.pageHeight && this.pageWidth) {\n      // 为了使固定的 clip 生效，clip 设置在 itemContainerGroup 上，itemGroup 需要在翻页时会设置 matrix\n      itemGroup.getParent().setClip({\n        type: 'rect',\n        attrs: {\n          x: this.startX,\n          y: this.startY,\n          width: this.pageWidth,\n          height: this.pageHeight,\n        },\n      });\n    }\n    // 重新计算 totalPagesCnt\n    if (layout === 'horizontal' && this.get('maxRow')) {\n      this.totalPagesCnt = Math.ceil(pages / this.get('maxRow'));\n    } else {\n      this.totalPagesCnt = pages;\n    }\n    if (this.currentPageIndex > this.totalPagesCnt) {\n      this.currentPageIndex = 1;\n    }\n    this.updateNavigation(navigation);\n    // update initial matrix\n    itemGroup.attr('matrix', this.getCurrentNavigationMatrix());\n  }\n\n  /**\n   * 绘制分页器\n   */\n  private drawNavigation(\n    group: IGroup,\n    layout: 'horizontal' | 'vertical',\n    text: string,\n    styleCfg?: LegendPageNavigatorCfg\n  ) {\n    const currentPoint = { x: 0, y: 0 };\n    const subGroup = this.addGroup(group, {\n      id: this.getElementId('navigation-group'),\n      name: 'legend-navigation',\n    });\n    const { size = 12, ...arrowStyle } = get(styleCfg.marker, 'style', {});\n    const leftArrow = this.drawArrow(\n      subGroup,\n      currentPoint,\n      LEFT_ARROW_NAME,\n      layout === 'horizontal' ? 'up' : 'left',\n      size,\n      arrowStyle\n    );\n    leftArrow.on('click', this.onNavigationBack);\n    const leftArrowBBox = leftArrow.getBBox();\n    currentPoint.x += leftArrowBBox.width + 2;\n\n    const textShape = this.addShape(subGroup, {\n      type: 'text',\n      id: this.getElementId('navigation-text'),\n      name: 'navigation-text',\n      attrs: {\n        x: currentPoint.x,\n        y: currentPoint.y + size / 2,\n        text,\n        textBaseline: 'middle',\n        ...get(styleCfg.text, 'style'),\n      },\n    });\n    const textBBox = textShape.getBBox();\n    currentPoint.x += textBBox.width + 2;\n\n    const rightArrow = this.drawArrow(\n      subGroup,\n      currentPoint,\n      RIGHT_ARROW_NAME,\n      layout === 'horizontal' ? 'down' : 'right',\n      size,\n      arrowStyle\n    );\n    rightArrow.on('click', this.onNavigationAfter);\n\n    return subGroup;\n  }\n\n  private updateNavigation(navigation?: IGroup) {\n    const pageNavigator: LegendPageNavigatorCfg = deepMix({}, DEFAULT_PAGE_NAVIGATOR, this.get('pageNavigator'));\n    const { fill, opacity, inactiveFill, inactiveOpacity } = pageNavigator.marker.style;\n\n    const text = `${this.currentPageIndex}/${this.totalPagesCnt}`;\n    const textShape = navigation ? navigation.getChildren()[1] : this.getElementByLocalId('navigation-text');\n    const leftArrow = navigation\n      ? navigation.findById(this.getElementId(LEFT_ARROW_NAME))\n      : this.getElementByLocalId(LEFT_ARROW_NAME);\n    const rightArrow = navigation\n      ? navigation.findById(this.getElementId(RIGHT_ARROW_NAME))\n      : this.getElementByLocalId(RIGHT_ARROW_NAME);\n    textShape.attr('text', text);\n    // 更新 left-arrow marker\n    leftArrow.attr('opacity', this.currentPageIndex === 1 ? inactiveOpacity : opacity);\n    leftArrow.attr('fill', this.currentPageIndex === 1 ? inactiveFill : fill);\n    leftArrow.attr('cursor', this.currentPageIndex === 1 ? 'not-allowed' : 'pointer');\n    // 更新 right-arrow marker\n    rightArrow.attr('opacity', this.currentPageIndex === this.totalPagesCnt ? inactiveOpacity : opacity);\n    rightArrow.attr('fill', this.currentPageIndex === this.totalPagesCnt ? inactiveFill : fill);\n    rightArrow.attr('cursor', this.currentPageIndex === this.totalPagesCnt ? 'not-allowed' : 'pointer');\n    // 更新位置\n    let cursorX = leftArrow.getBBox().maxX + 2;\n    textShape.attr('x', cursorX);\n    cursorX += textShape.getBBox().width + 2;\n    this.updateArrowPath(rightArrow, { x: cursorX, y: 0 });\n\n  }\n\n  private drawArrow(\n    group: IGroup,\n    currentPoint: { x: number; y: number },\n    name: string,\n    direction: 'left' | 'right' | 'up' | 'down',\n    size: number,\n    style?: LegendPageNavigatorCfg['marker']['style']\n  ) {\n    const { x, y } = currentPoint;\n    const shape = this.addShape(group, {\n      type: 'path',\n      id: this.getElementId(name),\n      name,\n      attrs: {\n        size,\n        direction,\n        path: [['M', x + size / 2, y], ['L', x, y + size], ['L', x + size, y + size], ['Z']],\n        cursor: 'pointer',\n        ...style,\n      },\n    });\n    shape.attr('matrix', getMatrixByAngle({ x: x + size / 2, y: y + size / 2 }, ROTATE_MAP[direction]));\n\n    return shape;\n  }\n\n  /**\n   * 更新分页器 arrow 组件\n   */\n  private updateArrowPath(arrow: IShape, point: { x: number; y: number }): void {\n    const { x, y } = point;\n    const { size, direction } = arrow.attr();\n    let matrix = getMatrixByAngle({ x: x + size / 2, y: y + size / 2 }, ROTATE_MAP[direction]);\n    arrow.attr('path', [['M', x + size / 2, y], ['L', x, y + size], ['L', x + size, y + size], ['Z']]);\n    arrow.attr('matrix', matrix);\n  }\n\n  private getCurrentNavigationMatrix() {\n    const { currentPageIndex, pageWidth, pageHeight } = this;\n    const layout = this.get('layout');\n    const translate =\n      layout === 'horizontal'\n        ? {\n            x: 0,\n            y: pageHeight * (1 - currentPageIndex),\n          }\n        : {\n            x: pageWidth * (1 - currentPageIndex),\n            y: 0,\n          };\n\n    return getMatrixByTranslate(translate);\n  }\n\n  private onNavigationBack = () => {\n    const itemGroup = this.getElementByLocalId('item-group');\n    if (this.currentPageIndex > 1) {\n      this.currentPageIndex -= 1;\n      this.updateNavigation();\n      const matrix = this.getCurrentNavigationMatrix();\n      if (this.get('animate')) {\n        itemGroup.animate(\n          {\n            matrix,\n          },\n          100\n        );\n      } else {\n        itemGroup.attr({ matrix });\n      }\n    }\n  };\n\n  private onNavigationAfter = () => {\n    const itemGroup = this.getElementByLocalId('item-group');\n    if (this.currentPageIndex < this.totalPagesCnt) {\n      this.currentPageIndex += 1;\n      this.updateNavigation();\n      const matrix = this.getCurrentNavigationMatrix();\n      if (this.get('animate')) {\n        itemGroup.animate(\n          {\n            matrix,\n          },\n          100\n        );\n      } else {\n        itemGroup.attr({ matrix });\n      }\n    }\n  };\n\n  // 附加状态对应的样式\n  private applyItemStates(item: ListItem, subGroup: IGroup) {\n    const states = this.getItemStates(item);\n    const hasStates = states.length > 0;\n    if (hasStates) {\n      const children = subGroup.getChildren();\n      const itemStates = this.get('itemStates');\n      each(children, (element) => {\n        const name = element.get('name');\n        const elName = name.split('-')[2]; // marker, name, value\n        const statesStyle = getStatesStyle(item, elName, itemStates);\n        if (statesStyle) {\n          element.attr(statesStyle);\n          if (elName === 'marker' && !(element.get('isStroke') && element.get('isFill'))) {\n            // 如果 marker 是单填充或者单描边的话，就不要额外添加 stroke 或这 fill 属性，否则会影响 unchecked 后的显示\n            if (element.get('isStroke')) {\n              element.attr('fill', null);\n            }\n            if (element.get('isFill')) {\n              element.attr('stroke', null);\n            }\n          }\n        }\n      });\n    }\n  }\n\n  // 获取 itemWidth 的最终设置\n  private getLimitItemWidth() {\n    const itemWidth = this.get('itemWidth');\n    let maxItemWidth = this.get('maxItemWidth');\n\n    if (maxItemWidth) {\n      // 设置了最大宽度\n      if (itemWidth) {\n        maxItemWidth = itemWidth <= maxItemWidth ? itemWidth : maxItemWidth;\n      }\n    } else if (itemWidth) {\n      maxItemWidth = itemWidth;\n    }\n\n    return maxItemWidth;\n  }\n}\n\nexport default Category;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}