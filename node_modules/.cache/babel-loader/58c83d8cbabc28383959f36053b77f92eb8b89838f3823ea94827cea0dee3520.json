{"ast":null,"code":"import React, { useEffect } from 'react';\nimport G6 from '@antv/g6';\nimport ChartLoading from '../../utils/createLoading';\nimport ErrorBoundary from '../../errorBoundary';\nimport useGraph from '../hooks/useGraph';\nimport { customIconNode } from './customItems';\nimport { defaultLabelCfg, defaultStateStyles } from './constants';\nimport { getGraphSize, renderMinimap, getGraphId, renderGraph, bindEvents, useProps } from './utils';\nvar defaultNodeStyle = {\n  fill: '#91d5ff',\n  stroke: '#40a9ff',\n  radius: 2\n};\nvar defaultEdgeStyle = {\n  stroke: '#91d5ff',\n  endArrow: {\n    path: 'M 0,0 L 12, 6 L 9,0 L 12, -6 Z',\n    fill: '#91d5ff',\n    d: -20\n  }\n};\nvar defaultLayout = {\n  type: 'compactBox',\n  direction: 'TB',\n  getId: function getId(d) {\n    return d.id;\n  },\n  getHeight: function getHeight() {\n    return 16;\n  },\n  getWidth: function getWidth() {\n    return 16;\n  },\n  getVGap: function getVGap() {\n    return 40;\n  },\n  getHGap: function getHGap() {\n    return 70;\n  }\n};\nvar defaultProps = {\n  nodeType: 'rect',\n  edgeType: 'flow-line',\n  collapseExpand: false,\n  nodeSize: [120, 40],\n  nodeLabelCfg: defaultLabelCfg,\n  edgeLabelCfg: defaultLabelCfg,\n  layout: defaultLayout,\n  enableEdit: false,\n  nodeStyle: defaultNodeStyle,\n  edgeStyle: defaultEdgeStyle,\n  nodeStateStyles: defaultStateStyles,\n  edgeStateStyles: defaultStateStyles,\n  autoFit: true\n};\nvar graphs = {};\nvar OrganizationTreeGraphComponent = function (props) {\n  var uProps = useProps(props, defaultProps);\n  var data = uProps.data,\n    className = uProps.className,\n    style = uProps.style,\n    width = uProps.width,\n    height = uProps.height,\n    _a = uProps.nodeType,\n    nodeType = _a === void 0 ? 'rect' : _a,\n    _b = uProps.edgeType,\n    edgeType = _b === void 0 ? 'flow-line' : _b,\n    _c = uProps.collapseExpand,\n    collapseExpand = _c === void 0 ? false : _c,\n    _d = uProps.nodeSize,\n    nodeSize = _d === void 0 ? [120, 40] : _d,\n    _e = uProps.nodeLabelCfg,\n    nodeLabelCfg = _e === void 0 ? defaultLabelCfg : _e,\n    _f = uProps.edgeLabelCfg,\n    edgeLabelCfg = _f === void 0 ? defaultLabelCfg : _f,\n    _g = uProps.layout,\n    layout = _g === void 0 ? defaultLayout : _g,\n    _h = uProps.enableEdit,\n    enableEdit = _h === void 0 ? false : _h,\n    minimapCfg = uProps.minimapCfg,\n    _j = uProps.nodeStyle,\n    nodeStyle = _j === void 0 ? defaultNodeStyle : _j,\n    _k = uProps.edgeStyle,\n    edgeStyle = _k === void 0 ? defaultEdgeStyle : _k,\n    _l = uProps.nodeStateStyles,\n    nodeStateStyles = _l === void 0 ? defaultStateStyles : _l,\n    _m = uProps.edgeStateStyles,\n    edgeStateStyles = _m === void 0 ? defaultStateStyles : _m,\n    _o = uProps.autoFit,\n    autoFit = _o === void 0 ? true : _o,\n    graphRef = uProps.graphRef,\n    onReady = uProps.onReady,\n    loading = uProps.loading,\n    loadingTemplate = uProps.loadingTemplate,\n    errorTemplate = uProps.errorTemplate;\n  var container = React.useRef(null);\n  var graph = React.useRef(null);\n  var graphId = getGraphId(graph);\n  useGraph(graphs[graphId], uProps, container);\n  useEffect(function () {\n    var graphSize = getGraphSize(width, height, container);\n    if (nodeType === 'icon-node') {\n      customIconNode({\n        enableEdit: enableEdit\n      });\n    }\n    var graph = graphs[graphId];\n    if (!graph) {\n      graph = new G6.TreeGraph({\n        container: container.current,\n        width: graphSize[0],\n        height: graphSize[1],\n        linkCenter: true,\n        modes: {\n          default: ['drag-canvas', 'zoom-canvas']\n        },\n        defaultNode: {\n          type: nodeType,\n          size: nodeSize,\n          style: nodeStyle,\n          labelCfg: nodeLabelCfg\n        },\n        defaultEdge: {\n          type: edgeType,\n          style: edgeStyle,\n          labelCfg: edgeLabelCfg\n        },\n        nodeStateStyles: nodeStateStyles,\n        edgeStateStyles: edgeStateStyles,\n        layout: layout,\n        fitView: autoFit\n      });\n      graphs[graphId] = graph;\n    }\n    if (graphRef) {\n      graphRef.current = graph;\n    }\n    renderMinimap(minimapCfg, graph);\n    renderGraph(graph, data);\n    if (onReady) {\n      onReady(graph);\n    }\n    if (collapseExpand) {\n      graph.addBehaviors({\n        type: 'collapse-expand'\n      }, 'default');\n    }\n    bindEvents(graph, props);\n    return function () {\n      if (graphs[graphId]) {\n        graphs[graphId].destroy();\n        delete graphs[graphId];\n      }\n    };\n  }, []);\n  return React.createElement(ErrorBoundary, {\n    errorTemplate: errorTemplate\n  }, loading && React.createElement(ChartLoading, {\n    loadingTemplate: loadingTemplate\n  }), React.createElement(\"div\", {\n    className: className,\n    style: style,\n    ref: container\n  }));\n};\nexport default OrganizationTreeGraphComponent;","map":{"version":3,"names":["React","useEffect","G6","ChartLoading","ErrorBoundary","useGraph","customIconNode","defaultLabelCfg","defaultStateStyles","getGraphSize","renderMinimap","getGraphId","renderGraph","bindEvents","useProps","defaultNodeStyle","fill","stroke","radius","defaultEdgeStyle","endArrow","path","d","defaultLayout","type","direction","getId","id","getHeight","getWidth","getVGap","getHGap","defaultProps","nodeType","edgeType","collapseExpand","nodeSize","nodeLabelCfg","edgeLabelCfg","layout","enableEdit","nodeStyle","edgeStyle","nodeStateStyles","edgeStateStyles","autoFit","graphs","OrganizationTreeGraphComponent","props","uProps","data","className","style","width","height","_a","_b","_c","_d","_e","_f","_g","_h","minimapCfg","_j","_k","_l","_m","_o","graphRef","onReady","loading","loadingTemplate","errorTemplate","container","useRef","graph","graphId","graphSize","TreeGraph","current","linkCenter","modes","default","defaultNode","size","labelCfg","defaultEdge","fitView","addBehaviors","destroy","createElement","ref"],"sources":["/home/iam/Documents/LocalWeb-master/node_modules/@ant-design/graphs/es/obsolescent/graph/organizationTreeGraph.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport G6 from '@antv/g6';\nimport ChartLoading from '../../utils/createLoading';\nimport ErrorBoundary from '../../errorBoundary';\nimport useGraph from '../hooks/useGraph';\nimport { customIconNode } from './customItems';\nimport { defaultLabelCfg, defaultStateStyles } from './constants';\nimport { getGraphSize, renderMinimap, getGraphId, renderGraph, bindEvents, useProps } from './utils';\nvar defaultNodeStyle = {\n    fill: '#91d5ff',\n    stroke: '#40a9ff',\n    radius: 2,\n};\nvar defaultEdgeStyle = {\n    stroke: '#91d5ff',\n    endArrow: {\n        path: 'M 0,0 L 12, 6 L 9,0 L 12, -6 Z',\n        fill: '#91d5ff',\n        d: -20,\n    },\n};\nvar defaultLayout = {\n    type: 'compactBox',\n    direction: 'TB',\n    getId: function getId(d) {\n        return d.id;\n    },\n    getHeight: function getHeight() {\n        return 16;\n    },\n    getWidth: function getWidth() {\n        return 16;\n    },\n    getVGap: function getVGap() {\n        return 40;\n    },\n    getHGap: function getHGap() {\n        return 70;\n    },\n};\nvar defaultProps = {\n    nodeType: 'rect',\n    edgeType: 'flow-line',\n    collapseExpand: false,\n    nodeSize: [120, 40],\n    nodeLabelCfg: defaultLabelCfg,\n    edgeLabelCfg: defaultLabelCfg,\n    layout: defaultLayout,\n    enableEdit: false,\n    nodeStyle: defaultNodeStyle,\n    edgeStyle: defaultEdgeStyle,\n    nodeStateStyles: defaultStateStyles,\n    edgeStateStyles: defaultStateStyles,\n    autoFit: true,\n};\nvar graphs = {};\nvar OrganizationTreeGraphComponent = function (props) {\n    var uProps = useProps(props, defaultProps);\n    var data = uProps.data, className = uProps.className, style = uProps.style, width = uProps.width, height = uProps.height, _a = uProps.nodeType, nodeType = _a === void 0 ? 'rect' : _a, _b = uProps.edgeType, edgeType = _b === void 0 ? 'flow-line' : _b, _c = uProps.collapseExpand, collapseExpand = _c === void 0 ? false : _c, _d = uProps.nodeSize, nodeSize = _d === void 0 ? [120, 40] : _d, _e = uProps.nodeLabelCfg, nodeLabelCfg = _e === void 0 ? defaultLabelCfg : _e, _f = uProps.edgeLabelCfg, edgeLabelCfg = _f === void 0 ? defaultLabelCfg : _f, _g = uProps.layout, layout = _g === void 0 ? defaultLayout : _g, _h = uProps.enableEdit, enableEdit = _h === void 0 ? false : _h, minimapCfg = uProps.minimapCfg, _j = uProps.nodeStyle, nodeStyle = _j === void 0 ? defaultNodeStyle : _j, _k = uProps.edgeStyle, edgeStyle = _k === void 0 ? defaultEdgeStyle : _k, _l = uProps.nodeStateStyles, nodeStateStyles = _l === void 0 ? defaultStateStyles : _l, _m = uProps.edgeStateStyles, edgeStateStyles = _m === void 0 ? defaultStateStyles : _m, _o = uProps.autoFit, autoFit = _o === void 0 ? true : _o, graphRef = uProps.graphRef, onReady = uProps.onReady, loading = uProps.loading, loadingTemplate = uProps.loadingTemplate, errorTemplate = uProps.errorTemplate;\n    var container = React.useRef(null);\n    var graph = React.useRef(null);\n    var graphId = getGraphId(graph);\n    useGraph(graphs[graphId], uProps, container);\n    useEffect(function () {\n        var graphSize = getGraphSize(width, height, container);\n        if (nodeType === 'icon-node') {\n            customIconNode({ enableEdit: enableEdit });\n        }\n        var graph = graphs[graphId];\n        if (!graph) {\n            graph = new G6.TreeGraph({\n                container: container.current,\n                width: graphSize[0],\n                height: graphSize[1],\n                linkCenter: true,\n                modes: {\n                    default: ['drag-canvas', 'zoom-canvas'],\n                },\n                defaultNode: {\n                    type: nodeType,\n                    size: nodeSize,\n                    style: nodeStyle,\n                    labelCfg: nodeLabelCfg,\n                },\n                defaultEdge: {\n                    type: edgeType,\n                    style: edgeStyle,\n                    labelCfg: edgeLabelCfg,\n                },\n                nodeStateStyles: nodeStateStyles,\n                edgeStateStyles: edgeStateStyles,\n                layout: layout,\n                fitView: autoFit,\n            });\n            graphs[graphId] = graph;\n        }\n        if (graphRef) {\n            graphRef.current = graph;\n        }\n        renderMinimap(minimapCfg, graph);\n        renderGraph(graph, data);\n        if (onReady) {\n            onReady(graph);\n        }\n        if (collapseExpand) {\n            graph.addBehaviors({\n                type: 'collapse-expand',\n            }, 'default');\n        }\n        bindEvents(graph, props);\n        return function () {\n            if (graphs[graphId]) {\n                graphs[graphId].destroy();\n                delete graphs[graphId];\n            }\n        };\n    }, []);\n    return (React.createElement(ErrorBoundary, { errorTemplate: errorTemplate },\n        loading && React.createElement(ChartLoading, { loadingTemplate: loadingTemplate }),\n        React.createElement(\"div\", { className: className, style: style, ref: container })));\n};\nexport default OrganizationTreeGraphComponent;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,EAAE,MAAM,UAAU;AACzB,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,aAAa,MAAM,qBAAqB;AAC/C,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,SAASC,cAAc,QAAQ,eAAe;AAC9C,SAASC,eAAe,EAAEC,kBAAkB,QAAQ,aAAa;AACjE,SAASC,YAAY,EAAEC,aAAa,EAAEC,UAAU,EAAEC,WAAW,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,SAAS;AACpG,IAAIC,gBAAgB,GAAG;EACnBC,IAAI,EAAE,SAAS;EACfC,MAAM,EAAE,SAAS;EACjBC,MAAM,EAAE;AACZ,CAAC;AACD,IAAIC,gBAAgB,GAAG;EACnBF,MAAM,EAAE,SAAS;EACjBG,QAAQ,EAAE;IACNC,IAAI,EAAE,gCAAgC;IACtCL,IAAI,EAAE,SAAS;IACfM,CAAC,EAAE,CAAC;EACR;AACJ,CAAC;AACD,IAAIC,aAAa,GAAG;EAChBC,IAAI,EAAE,YAAY;EAClBC,SAAS,EAAE,IAAI;EACfC,KAAK,EAAE,SAASA,KAAK,CAACJ,CAAC,EAAE;IACrB,OAAOA,CAAC,CAACK,EAAE;EACf,CAAC;EACDC,SAAS,EAAE,SAASA,SAAS,GAAG;IAC5B,OAAO,EAAE;EACb,CAAC;EACDC,QAAQ,EAAE,SAASA,QAAQ,GAAG;IAC1B,OAAO,EAAE;EACb,CAAC;EACDC,OAAO,EAAE,SAASA,OAAO,GAAG;IACxB,OAAO,EAAE;EACb,CAAC;EACDC,OAAO,EAAE,SAASA,OAAO,GAAG;IACxB,OAAO,EAAE;EACb;AACJ,CAAC;AACD,IAAIC,YAAY,GAAG;EACfC,QAAQ,EAAE,MAAM;EAChBC,QAAQ,EAAE,WAAW;EACrBC,cAAc,EAAE,KAAK;EACrBC,QAAQ,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC;EACnBC,YAAY,EAAE9B,eAAe;EAC7B+B,YAAY,EAAE/B,eAAe;EAC7BgC,MAAM,EAAEhB,aAAa;EACrBiB,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE1B,gBAAgB;EAC3B2B,SAAS,EAAEvB,gBAAgB;EAC3BwB,eAAe,EAAEnC,kBAAkB;EACnCoC,eAAe,EAAEpC,kBAAkB;EACnCqC,OAAO,EAAE;AACb,CAAC;AACD,IAAIC,MAAM,GAAG,CAAC,CAAC;AACf,IAAIC,8BAA8B,GAAG,UAAUC,KAAK,EAAE;EAClD,IAAIC,MAAM,GAAGnC,QAAQ,CAACkC,KAAK,EAAEhB,YAAY,CAAC;EAC1C,IAAIkB,IAAI,GAAGD,MAAM,CAACC,IAAI;IAAEC,SAAS,GAAGF,MAAM,CAACE,SAAS;IAAEC,KAAK,GAAGH,MAAM,CAACG,KAAK;IAAEC,KAAK,GAAGJ,MAAM,CAACI,KAAK;IAAEC,MAAM,GAAGL,MAAM,CAACK,MAAM;IAAEC,EAAE,GAAGN,MAAM,CAAChB,QAAQ;IAAEA,QAAQ,GAAGsB,EAAE,KAAK,KAAK,CAAC,GAAG,MAAM,GAAGA,EAAE;IAAEC,EAAE,GAAGP,MAAM,CAACf,QAAQ;IAAEA,QAAQ,GAAGsB,EAAE,KAAK,KAAK,CAAC,GAAG,WAAW,GAAGA,EAAE;IAAEC,EAAE,GAAGR,MAAM,CAACd,cAAc;IAAEA,cAAc,GAAGsB,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,GAAGA,EAAE;IAAEC,EAAE,GAAGT,MAAM,CAACb,QAAQ;IAAEA,QAAQ,GAAGsB,EAAE,KAAK,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,CAAC,GAAGA,EAAE;IAAEC,EAAE,GAAGV,MAAM,CAACZ,YAAY;IAAEA,YAAY,GAAGsB,EAAE,KAAK,KAAK,CAAC,GAAGpD,eAAe,GAAGoD,EAAE;IAAEC,EAAE,GAAGX,MAAM,CAACX,YAAY;IAAEA,YAAY,GAAGsB,EAAE,KAAK,KAAK,CAAC,GAAGrD,eAAe,GAAGqD,EAAE;IAAEC,EAAE,GAAGZ,MAAM,CAACV,MAAM;IAAEA,MAAM,GAAGsB,EAAE,KAAK,KAAK,CAAC,GAAGtC,aAAa,GAAGsC,EAAE;IAAEC,EAAE,GAAGb,MAAM,CAACT,UAAU;IAAEA,UAAU,GAAGsB,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,GAAGA,EAAE;IAAEC,UAAU,GAAGd,MAAM,CAACc,UAAU;IAAEC,EAAE,GAAGf,MAAM,CAACR,SAAS;IAAEA,SAAS,GAAGuB,EAAE,KAAK,KAAK,CAAC,GAAGjD,gBAAgB,GAAGiD,EAAE;IAAEC,EAAE,GAAGhB,MAAM,CAACP,SAAS;IAAEA,SAAS,GAAGuB,EAAE,KAAK,KAAK,CAAC,GAAG9C,gBAAgB,GAAG8C,EAAE;IAAEC,EAAE,GAAGjB,MAAM,CAACN,eAAe;IAAEA,eAAe,GAAGuB,EAAE,KAAK,KAAK,CAAC,GAAG1D,kBAAkB,GAAG0D,EAAE;IAAEC,EAAE,GAAGlB,MAAM,CAACL,eAAe;IAAEA,eAAe,GAAGuB,EAAE,KAAK,KAAK,CAAC,GAAG3D,kBAAkB,GAAG2D,EAAE;IAAEC,EAAE,GAAGnB,MAAM,CAACJ,OAAO;IAAEA,OAAO,GAAGuB,EAAE,KAAK,KAAK,CAAC,GAAG,IAAI,GAAGA,EAAE;IAAEC,QAAQ,GAAGpB,MAAM,CAACoB,QAAQ;IAAEC,OAAO,GAAGrB,MAAM,CAACqB,OAAO;IAAEC,OAAO,GAAGtB,MAAM,CAACsB,OAAO;IAAEC,eAAe,GAAGvB,MAAM,CAACuB,eAAe;IAAEC,aAAa,GAAGxB,MAAM,CAACwB,aAAa;EACjuC,IAAIC,SAAS,GAAG1E,KAAK,CAAC2E,MAAM,CAAC,IAAI,CAAC;EAClC,IAAIC,KAAK,GAAG5E,KAAK,CAAC2E,MAAM,CAAC,IAAI,CAAC;EAC9B,IAAIE,OAAO,GAAGlE,UAAU,CAACiE,KAAK,CAAC;EAC/BvE,QAAQ,CAACyC,MAAM,CAAC+B,OAAO,CAAC,EAAE5B,MAAM,EAAEyB,SAAS,CAAC;EAC5CzE,SAAS,CAAC,YAAY;IAClB,IAAI6E,SAAS,GAAGrE,YAAY,CAAC4C,KAAK,EAAEC,MAAM,EAAEoB,SAAS,CAAC;IACtD,IAAIzC,QAAQ,KAAK,WAAW,EAAE;MAC1B3B,cAAc,CAAC;QAAEkC,UAAU,EAAEA;MAAW,CAAC,CAAC;IAC9C;IACA,IAAIoC,KAAK,GAAG9B,MAAM,CAAC+B,OAAO,CAAC;IAC3B,IAAI,CAACD,KAAK,EAAE;MACRA,KAAK,GAAG,IAAI1E,EAAE,CAAC6E,SAAS,CAAC;QACrBL,SAAS,EAAEA,SAAS,CAACM,OAAO;QAC5B3B,KAAK,EAAEyB,SAAS,CAAC,CAAC,CAAC;QACnBxB,MAAM,EAAEwB,SAAS,CAAC,CAAC,CAAC;QACpBG,UAAU,EAAE,IAAI;QAChBC,KAAK,EAAE;UACHC,OAAO,EAAE,CAAC,aAAa,EAAE,aAAa;QAC1C,CAAC;QACDC,WAAW,EAAE;UACT5D,IAAI,EAAES,QAAQ;UACdoD,IAAI,EAAEjD,QAAQ;UACdgB,KAAK,EAAEX,SAAS;UAChB6C,QAAQ,EAAEjD;QACd,CAAC;QACDkD,WAAW,EAAE;UACT/D,IAAI,EAAEU,QAAQ;UACdkB,KAAK,EAAEV,SAAS;UAChB4C,QAAQ,EAAEhD;QACd,CAAC;QACDK,eAAe,EAAEA,eAAe;QAChCC,eAAe,EAAEA,eAAe;QAChCL,MAAM,EAAEA,MAAM;QACdiD,OAAO,EAAE3C;MACb,CAAC,CAAC;MACFC,MAAM,CAAC+B,OAAO,CAAC,GAAGD,KAAK;IAC3B;IACA,IAAIP,QAAQ,EAAE;MACVA,QAAQ,CAACW,OAAO,GAAGJ,KAAK;IAC5B;IACAlE,aAAa,CAACqD,UAAU,EAAEa,KAAK,CAAC;IAChChE,WAAW,CAACgE,KAAK,EAAE1B,IAAI,CAAC;IACxB,IAAIoB,OAAO,EAAE;MACTA,OAAO,CAACM,KAAK,CAAC;IAClB;IACA,IAAIzC,cAAc,EAAE;MAChByC,KAAK,CAACa,YAAY,CAAC;QACfjE,IAAI,EAAE;MACV,CAAC,EAAE,SAAS,CAAC;IACjB;IACAX,UAAU,CAAC+D,KAAK,EAAE5B,KAAK,CAAC;IACxB,OAAO,YAAY;MACf,IAAIF,MAAM,CAAC+B,OAAO,CAAC,EAAE;QACjB/B,MAAM,CAAC+B,OAAO,CAAC,CAACa,OAAO,EAAE;QACzB,OAAO5C,MAAM,CAAC+B,OAAO,CAAC;MAC1B;IACJ,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EACN,OAAQ7E,KAAK,CAAC2F,aAAa,CAACvF,aAAa,EAAE;IAAEqE,aAAa,EAAEA;EAAc,CAAC,EACvEF,OAAO,IAAIvE,KAAK,CAAC2F,aAAa,CAACxF,YAAY,EAAE;IAAEqE,eAAe,EAAEA;EAAgB,CAAC,CAAC,EAClFxE,KAAK,CAAC2F,aAAa,CAAC,KAAK,EAAE;IAAExC,SAAS,EAAEA,SAAS;IAAEC,KAAK,EAAEA,KAAK;IAAEwC,GAAG,EAAElB;EAAU,CAAC,CAAC,CAAC;AAC3F,CAAC;AACD,eAAe3B,8BAA8B"},"metadata":{},"sourceType":"module","externalDependencies":[]}