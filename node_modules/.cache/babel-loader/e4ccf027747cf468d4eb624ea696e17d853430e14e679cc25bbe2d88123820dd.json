{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { registerShape } from '@antv/g2';\nimport { isNumber, mix, reduce } from '@antv/util';\nimport { transform } from '../../../utils/matrix';\nvar DURATION = 5000;\n/**\n * 一个线性映射的函数\n * @param min\n * @param max\n * @param factor\n */\nfunction lerp(min, max, factor) {\n  return min + (max - min) * factor;\n}\n/**\n * 波浪的 attrs\n * @param cfg\n */\nfunction getFillAttrs(cfg) {\n  var attrs = __assign({\n    opacity: 1\n  }, cfg.style);\n  if (cfg.color && !attrs.fill) {\n    attrs.fill = cfg.color;\n  }\n  return attrs;\n}\n/**\n * shape 的 attrs\n * @param cfg\n */\nfunction getLineAttrs(cfg) {\n  var defaultAttrs = {\n    fill: '#fff',\n    fillOpacity: 0,\n    lineWidth: 4\n  };\n  var attrs = mix({}, defaultAttrs, cfg.style);\n  if (cfg.color && !attrs.stroke) {\n    attrs.stroke = cfg.color;\n  }\n  if (isNumber(cfg.opacity)) {\n    attrs.opacity = attrs.strokeOpacity = cfg.opacity;\n  }\n  return attrs;\n}\n/**\n * 用贝塞尔曲线模拟正弦波\n * Using Bezier curves to fit sine wave.\n * There is 4 control points for each curve of wave,\n * which is at 1/4 wave length of the sine wave.\n *\n * The control points for a wave from (a) to (d) are a-b-c-d:\n *          c *----* d\n *     b *\n *       |\n * ... a * ..................\n *\n * whose positions are a: (0, 0), b: (0.5, 0.5), c: (1, 1), d: (PI / 2, 1)\n *\n * @param x          x position of the left-most point (a)\n * @param stage      0-3, stating which part of the wave it is\n * @param waveLength wave length of the sine wave\n * @param amplitude  wave amplitude\n * @return 正弦片段曲线\n */\nfunction getWaterWavePositions(x, stage, waveLength, amplitude) {\n  if (stage === 0) {\n    return [[x + 1 / 2 * waveLength / Math.PI / 2, amplitude / 2], [x + 1 / 2 * waveLength / Math.PI, amplitude], [x + waveLength / 4, amplitude]];\n  }\n  if (stage === 1) {\n    return [[x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 2), amplitude], [x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 1), amplitude / 2], [x + waveLength / 4, 0]];\n  }\n  if (stage === 2) {\n    return [[x + 1 / 2 * waveLength / Math.PI / 2, -amplitude / 2], [x + 1 / 2 * waveLength / Math.PI, -amplitude], [x + waveLength / 4, -amplitude]];\n  }\n  return [[x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 2), -amplitude], [x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 1), -amplitude / 2], [x + waveLength / 4, 0]];\n}\n/**\n * 获取水波路径\n * @param radius          半径\n * @param waterLevel      水位\n * @param waveLength      波长\n * @param phase           相位\n * @param amplitude       震幅\n * @param cx              圆心x\n * @param cy              圆心y\n * @return path            路径\n * @reference http://gitlab.alipay-inc.com/datavis/g6/blob/1.2.0/src/graph/utils/path.js#L135\n */\nfunction getWaterWavePath(radius, waterLevel, waveLength, phase, amplitude, cx, cy) {\n  var curves = Math.ceil(2 * radius / waveLength * 4) * 4;\n  var path = [];\n  var _phase = phase;\n  // map phase to [-Math.PI * 2, 0]\n  while (_phase < -Math.PI * 2) {\n    _phase += Math.PI * 2;\n  }\n  while (_phase > 0) {\n    _phase -= Math.PI * 2;\n  }\n  _phase = _phase / Math.PI / 2 * waveLength;\n  var left = cx - radius + _phase - radius * 2;\n  /**\n   * top-left corner as start point\n   *\n   * draws this point\n   *  |\n   * \\|/\n   *  ~~~~~~~~\n   *  |      |\n   *  +------+\n   */\n  path.push(['M', left, waterLevel]);\n  /**\n   * top wave\n   *\n   * ~~~~~~~~ <- draws this sine wave\n   * |      |\n   * +------+\n   */\n  var waveRight = 0;\n  for (var c = 0; c < curves; ++c) {\n    var stage = c % 4;\n    var pos = getWaterWavePositions(c * waveLength / 4, stage, waveLength, amplitude);\n    path.push(['C', pos[0][0] + left, -pos[0][1] + waterLevel, pos[1][0] + left, -pos[1][1] + waterLevel, pos[2][0] + left, -pos[2][1] + waterLevel]);\n    if (c === curves - 1) {\n      waveRight = pos[2][0];\n    }\n  }\n  /**\n   * top-right corner\n   *\n   *                       ~~~~~~~~\n   * 3. draws this line -> |      | <- 1. draws this line\n   *                       +------+\n   *                          ^\n   *                          |\n   *                  2. draws this line\n   */\n  path.push(['L', waveRight + left, cy + radius]);\n  path.push(['L', left, cy + radius]);\n  path.push(['Z']);\n  // path.push(['L', left, waterLevel]);\n  return path;\n}\n/**\n * 添加水波\n * @param x           中心x\n * @param y           中心y\n * @param level       水位等级 0～1\n * @param waveCount   水波数\n * @param waveAttrs      色值\n * @param group       图组\n * @param clip        用于剪切的图形\n * @param radius      绘制图形的高度\n * @param waveLength  波的长度\n */\nexport function addWaterWave(x, y, level, waveCount, waveAttrs, group, clip, radius, waveLength, animation) {\n  // 盒子属性 颜色 宽高\n  var fill = waveAttrs.fill,\n    opacity = waveAttrs.opacity;\n  var bbox = clip.getBBox();\n  var width = bbox.maxX - bbox.minX;\n  var height = bbox.maxY - bbox.minY;\n  // 循环 waveCount 个数\n  for (var idx = 0; idx < waveCount; idx++) {\n    var factor = waveCount <= 1 ? 1 : idx / (waveCount - 1);\n    // 画波\n    var wave = group.addShape('path', {\n      name: \"waterwave-path\",\n      attrs: {\n        // 波形路径配置\n        path: getWaterWavePath(radius, bbox.minY + height * level, waveLength, 0, width / 32,\n        // 波幅高度\n        x, y),\n        fill: fill,\n        opacity: lerp(0.2, 0.9, factor) * opacity\n      }\n    });\n    try {\n      // 默认 underfind 开启动画\n      if (animation === false) return;\n      var matrix = transform([['t', waveLength, 0]]);\n      wave.stopAnimate();\n      wave.animate({\n        matrix: matrix\n      }, {\n        duration: lerp(0.5 * DURATION, DURATION, factor),\n        repeat: true\n      });\n    } catch (e) {\n      // TODO off-screen canvas 中动画会找不到 canvas\n      console.warn('off-screen group animate error!');\n    }\n  }\n}\n/**\n *\n * @param x 中心 x\n * @param y 中心 y\n * @param width 外接矩形的宽\n * @param height 外接矩形的高\n */\nfunction pin(x, y, width, height) {\n  var w = width * 2 / 3;\n  var h = Math.max(w, height);\n  var r = w / 2;\n  // attrs of the upper circle\n  var cx = x;\n  var cy = r + y - h / 2;\n  var theta = Math.asin(r / ((h - r) * 0.85));\n  var dy = Math.sin(theta) * r;\n  var dx = Math.cos(theta) * r;\n  // the start point of the path\n  var x0 = cx - dx;\n  var y0 = cy + dy;\n  // control point\n  var cpX = x;\n  var cpY = cy + r / Math.sin(theta);\n  return \"\\n      M \" + x0 + \" \" + y0 + \"\\n      A \" + r + \" \" + r + \" 0 1 1 \" + (x0 + dx * 2) + \" \" + y0 + \"\\n      Q \" + cpX + \" \" + cpY + \" \" + x + \" \" + (y + h / 2) + \"\\n      Q \" + cpX + \" \" + cpY + \" \" + x0 + \" \" + y0 + \"\\n      Z \\n    \";\n}\n/**\n *\n * @param x 中心 x\n * @param y 中心 y\n * @param width 外接矩形的宽\n * @param height 外接矩形的高\n */\nfunction circle(x, y, width, height) {\n  var rx = width / 2;\n  var ry = height / 2;\n  return \"\\n      M \" + x + \" \" + (y - ry) + \" \\n      a \" + rx + \" \" + ry + \" 0 1 0 0 \" + ry * 2 + \"\\n      a \" + rx + \" \" + ry + \" 0 1 0 0 \" + -ry * 2 + \"\\n      Z\\n    \";\n}\n/**\n *\n * @param x 中心 x\n * @param y 中心 y\n * @param width 外接矩形的宽\n * @param height 外接矩形的高\n */\nfunction diamond(x, y, width, height) {\n  var h = height / 2;\n  var w = width / 2;\n  return \"\\n      M \" + x + \" \" + (y - h) + \"\\n      L \" + (x + w) + \" \" + y + \"\\n      L \" + x + \" \" + (y + h) + \"\\n      L \" + (x - w) + \" \" + y + \"\\n      Z\\n    \";\n}\n/**\n *\n * @param x 中心 x\n * @param y 中心 y\n * @param width 外接矩形的宽\n * @param height 外接矩形的高\n */\nfunction triangle(x, y, width, height) {\n  var h = height / 2;\n  var w = width / 2;\n  return \"\\n      M \" + x + \" \" + (y - h) + \"\\n      L \" + (x + w) + \" \" + (y + h) + \"\\n      L \" + (x - w) + \" \" + (y + h) + \"\\n      Z\\n    \";\n}\n/**\n *\n * @param x 中心 x\n * @param y 中心 y\n * @param width 外接矩形的宽\n * @param height 外接矩形的高\n */\nfunction rect(x, y, width, height) {\n  var GOLDEN_SECTION_RATIO = 0.618;\n  var h = height / 2;\n  var w = width / 2 * GOLDEN_SECTION_RATIO;\n  return \"\\n      M \" + (x - w) + \" \" + (y - h) + \"\\n      L \" + (x + w) + \" \" + (y - h) + \"\\n      L \" + (x + w) + \" \" + (y + h) + \"\\n      L \" + (x - w) + \" \" + (y + h) + \"\\n      Z\\n    \";\n}\nvar builtInShapeByName = {\n  pin: pin,\n  circle: circle,\n  diamond: diamond,\n  triangle: triangle,\n  rect: rect\n};\nregisterShape('interval', 'liquid-fill-gauge', {\n  draw: function (cfg, container) {\n    var cx = 0.5;\n    var cy = 0.5;\n    var customInfo = cfg.customInfo;\n    var _a = customInfo,\n      radio = _a.radius,\n      shape = _a.shape,\n      shapeStyle = _a.shapeStyle,\n      background = _a.background,\n      animation = _a.animation;\n    var outline = customInfo.outline;\n    var wave = customInfo.wave;\n    var border = outline.border,\n      distance = outline.distance;\n    var waveCount = wave.count,\n      waveLength = wave.length;\n    // 获取最小 minX\n    var minX = reduce(cfg.points, function (r, p) {\n      return Math.min(r, p.x);\n    }, Infinity);\n    var center = this.parsePoint({\n      x: cx,\n      y: cy\n    });\n    var minXPoint = this.parsePoint({\n      x: minX,\n      y: cy\n    });\n    var halfWidth = center.x - minXPoint.x;\n    // 保证半径是 画布宽高最小值的 radius 值\n    var radius = Math.min(halfWidth, minXPoint.y * radio);\n    var waveAttrs = getFillAttrs(cfg);\n    var outlineAttrs = getLineAttrs(mix({}, cfg, outline));\n    var innerRadius = radius - border / 2;\n    var buildPath = typeof shape === 'function' ? shape : builtInShapeByName[shape] || builtInShapeByName['circle'];\n    var shapePath = buildPath(center.x, center.y, innerRadius * 2, innerRadius * 2);\n    // 1. 当 shapeStyle 不为空时，绘制形状样式作为背景\n    if (shapeStyle) {\n      container.addShape('path', {\n        name: 'shape',\n        attrs: __assign({\n          path: shapePath\n        }, shapeStyle)\n      });\n    }\n    // 2. 绘制一个波\n    var waves = container.addGroup({\n      name: 'waves'\n    });\n    // 3. 波对应的 clip 裁剪形状\n    var clipPath = waves.setClip({\n      type: 'path',\n      attrs: {\n        path: shapePath\n      }\n    });\n    // 4. 绘制波形\n    addWaterWave(center.x, center.y, 1 - cfg.points[1].y, waveCount, waveAttrs, waves, clipPath, radius * 2, waveLength, animation);\n    // 5. 绘制一个 distance 宽的 border\n    container.addShape('path', {\n      name: 'distance',\n      attrs: {\n        path: shapePath,\n        fill: 'transparent',\n        lineWidth: border + distance * 2,\n        stroke: background === 'transparent' ? '#fff' : background\n      }\n    });\n    // 6. 绘制一个 border 宽的 border\n    container.addShape('path', {\n      name: 'wrap',\n      attrs: mix(outlineAttrs, {\n        path: shapePath,\n        fill: 'transparent',\n        lineWidth: border\n      })\n    });\n    return container;\n  }\n});","map":{"version":3,"mappings":"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","names":["registerShape","isNumber","mix","reduce","transform","DURATION","lerp","min","max","factor","getFillAttrs","cfg","attrs","opacity","style","color","fill","getLineAttrs","defaultAttrs","fillOpacity","lineWidth","stroke","strokeOpacity","getWaterWavePositions","x","stage","waveLength","amplitude","Math","PI","getWaterWavePath","radius","waterLevel","phase","cx","cy","curves","ceil","path","_phase","left","push","waveRight","c","pos","addWaterWave","y","level","waveCount","waveAttrs","group","clip","animation","bbox","getBBox","width","maxX","minX","height","maxY","minY","idx","wave","addShape","name","matrix","stopAnimate","animate","duration","repeat","e","console","warn","pin","w","h","r","theta","asin","dy","sin","dx","cos","x0","y0","cpX","cpY","circle","rx","ry","diamond","triangle","rect","GOLDEN_SECTION_RATIO","builtInShapeByName","draw","container","customInfo","radio","shape","shapeStyle","background","outline","distance","points","p","Infinity","center","parsePoint","minXPoint","halfWidth","outlineAttrs","innerRadius","border","buildPath","shapePath","waves","addGroup","clipPath","setClip","type"],"sources":["/home/iam/Documents/network/node_modules/@antv/g2plot/src/plots/liquid/shapes/liquid.ts"],"sourcesContent":["import { IGroup, IShape } from '@antv/g-base';\nimport { registerShape } from '@antv/g2';\nimport { isNumber, mix, reduce } from '@antv/util';\nimport { Point, ShapeStyle } from '../../../types';\nimport { transform } from '../../../utils/matrix';\nimport { CustomInfo, LiquidOptions } from '../types';\n\nconst DURATION = 5000;\n\n/**\n * 一个线性映射的函数\n * @param min\n * @param max\n * @param factor\n */\nfunction lerp(min: number, max: number, factor: number) {\n  return min + (max - min) * factor;\n}\n\n/**\n * 波浪的 attrs\n * @param cfg\n */\nfunction getFillAttrs(cfg: ShapeStyle) {\n  const attrs = { opacity: 1, ...cfg.style };\n\n  if (cfg.color && !attrs.fill) {\n    attrs.fill = cfg.color;\n  }\n\n  return attrs;\n}\n\n/**\n * shape 的 attrs\n * @param cfg\n */\nfunction getLineAttrs(cfg: ShapeStyle) {\n  const defaultAttrs = {\n    fill: '#fff',\n    fillOpacity: 0,\n    lineWidth: 4,\n  };\n  const attrs = mix({}, defaultAttrs, cfg.style);\n\n  if (cfg.color && !attrs.stroke) {\n    attrs.stroke = cfg.color;\n  }\n  if (isNumber(cfg.opacity)) {\n    attrs.opacity = attrs.strokeOpacity = cfg.opacity;\n  }\n\n  return attrs;\n}\n\n/**\n * 用贝塞尔曲线模拟正弦波\n * Using Bezier curves to fit sine wave.\n * There is 4 control points for each curve of wave,\n * which is at 1/4 wave length of the sine wave.\n *\n * The control points for a wave from (a) to (d) are a-b-c-d:\n *          c *----* d\n *     b *\n *       |\n * ... a * ..................\n *\n * whose positions are a: (0, 0), b: (0.5, 0.5), c: (1, 1), d: (PI / 2, 1)\n *\n * @param x          x position of the left-most point (a)\n * @param stage      0-3, stating which part of the wave it is\n * @param waveLength wave length of the sine wave\n * @param amplitude  wave amplitude\n * @return 正弦片段曲线\n */\nfunction getWaterWavePositions(x: number, stage: number, waveLength: number, amplitude: number) {\n  if (stage === 0) {\n    return [\n      [x + ((1 / 2) * waveLength) / Math.PI / 2, amplitude / 2],\n      [x + ((1 / 2) * waveLength) / Math.PI, amplitude],\n      [x + waveLength / 4, amplitude],\n    ];\n  }\n  if (stage === 1) {\n    return [\n      [x + (((1 / 2) * waveLength) / Math.PI / 2) * (Math.PI - 2), amplitude],\n      [x + (((1 / 2) * waveLength) / Math.PI / 2) * (Math.PI - 1), amplitude / 2],\n      [x + waveLength / 4, 0],\n    ];\n  }\n  if (stage === 2) {\n    return [\n      [x + ((1 / 2) * waveLength) / Math.PI / 2, -amplitude / 2],\n      [x + ((1 / 2) * waveLength) / Math.PI, -amplitude],\n      [x + waveLength / 4, -amplitude],\n    ];\n  }\n  return [\n    [x + (((1 / 2) * waveLength) / Math.PI / 2) * (Math.PI - 2), -amplitude],\n    [x + (((1 / 2) * waveLength) / Math.PI / 2) * (Math.PI - 1), -amplitude / 2],\n    [x + waveLength / 4, 0],\n  ];\n}\n/**\n * 获取水波路径\n * @param radius          半径\n * @param waterLevel      水位\n * @param waveLength      波长\n * @param phase           相位\n * @param amplitude       震幅\n * @param cx              圆心x\n * @param cy              圆心y\n * @return path            路径\n * @reference http://gitlab.alipay-inc.com/datavis/g6/blob/1.2.0/src/graph/utils/path.js#L135\n */\nfunction getWaterWavePath(\n  radius: number,\n  waterLevel: number,\n  waveLength: number,\n  phase: number,\n  amplitude: number,\n  cx: number,\n  cy: number\n) {\n  const curves = Math.ceil(((2 * radius) / waveLength) * 4) * 4;\n  const path = [];\n  let _phase = phase;\n\n  // map phase to [-Math.PI * 2, 0]\n  while (_phase < -Math.PI * 2) {\n    _phase += Math.PI * 2;\n  }\n  while (_phase > 0) {\n    _phase -= Math.PI * 2;\n  }\n  _phase = (_phase / Math.PI / 2) * waveLength;\n\n  const left = cx - radius + _phase - radius * 2;\n  /**\n   * top-left corner as start point\n   *\n   * draws this point\n   *  |\n   * \\|/\n   *  ~~~~~~~~\n   *  |      |\n   *  +------+\n   */\n  path.push(['M', left, waterLevel]);\n\n  /**\n   * top wave\n   *\n   * ~~~~~~~~ <- draws this sine wave\n   * |      |\n   * +------+\n   */\n  let waveRight = 0;\n  for (let c = 0; c < curves; ++c) {\n    const stage = c % 4;\n    const pos = getWaterWavePositions((c * waveLength) / 4, stage, waveLength, amplitude);\n    path.push([\n      'C',\n      pos[0][0] + left,\n      -pos[0][1] + waterLevel,\n      pos[1][0] + left,\n      -pos[1][1] + waterLevel,\n      pos[2][0] + left,\n      -pos[2][1] + waterLevel,\n    ]);\n\n    if (c === curves - 1) {\n      waveRight = pos[2][0];\n    }\n  }\n\n  /**\n   * top-right corner\n   *\n   *                       ~~~~~~~~\n   * 3. draws this line -> |      | <- 1. draws this line\n   *                       +------+\n   *                          ^\n   *                          |\n   *                  2. draws this line\n   */\n  path.push(['L', waveRight + left, cy + radius]);\n  path.push(['L', left, cy + radius]);\n  path.push(['Z']);\n  // path.push(['L', left, waterLevel]);\n  return path;\n}\n\n/**\n * 添加水波\n * @param x           中心x\n * @param y           中心y\n * @param level       水位等级 0～1\n * @param waveCount   水波数\n * @param waveAttrs      色值\n * @param group       图组\n * @param clip        用于剪切的图形\n * @param radius      绘制图形的高度\n * @param waveLength  波的长度\n */\nexport function addWaterWave(\n  x: number,\n  y: number,\n  level: number,\n  waveCount: number,\n  waveAttrs: ShapeStyle,\n  group: IGroup,\n  clip: IShape,\n  radius: number,\n  waveLength: number,\n  animation: LiquidOptions['animation']\n) {\n  // 盒子属性 颜色 宽高\n  const { fill, opacity } = waveAttrs;\n  const bbox = clip.getBBox();\n  const width = bbox.maxX - bbox.minX;\n  const height = bbox.maxY - bbox.minY;\n\n  // 循环 waveCount 个数\n  for (let idx = 0; idx < waveCount; idx++) {\n    const factor = waveCount <= 1 ? 1 : idx / (waveCount - 1);\n\n    // 画波\n    const wave = group.addShape('path', {\n      name: `waterwave-path`,\n      attrs: {\n        // 波形路径配置\n        path: getWaterWavePath(\n          radius,\n          bbox.minY + height * level,\n          waveLength,\n          0,\n          width / 32, // 波幅高度\n          x,\n          y\n        ),\n        fill,\n        opacity: lerp(0.2, 0.9, factor) * opacity,\n      },\n    });\n\n    try {\n      // 默认 underfind 开启动画\n      if (animation === false) return;\n      const matrix = transform([['t', waveLength, 0]]);\n\n      wave.stopAnimate();\n      wave.animate(\n        { matrix },\n        {\n          duration: lerp(0.5 * DURATION, DURATION, factor),\n          repeat: true,\n        }\n      );\n    } catch (e) {\n      // TODO off-screen canvas 中动画会找不到 canvas\n      console.warn('off-screen group animate error!');\n    }\n  }\n}\n\n/**\n *\n * @param x 中心 x\n * @param y 中心 y\n * @param width 外接矩形的宽\n * @param height 外接矩形的高\n */\nfunction pin(x: number, y: number, width: number, height: number) {\n  const w = (width * 2) / 3;\n  const h = Math.max(w, height);\n  const r = w / 2;\n\n  // attrs of the upper circle\n  const cx = x;\n  const cy = r + y - h / 2;\n  const theta = Math.asin(r / ((h - r) * 0.85));\n  const dy = Math.sin(theta) * r;\n  const dx = Math.cos(theta) * r;\n\n  // the start point of the path\n  const x0 = cx - dx;\n  const y0 = cy + dy;\n\n  // control point\n  const cpX = x;\n  const cpY = cy + r / Math.sin(theta);\n\n  return `\n      M ${x0} ${y0}\n      A ${r} ${r} 0 1 1 ${x0 + dx * 2} ${y0}\n      Q ${cpX} ${cpY} ${x} ${y + h / 2}\n      Q ${cpX} ${cpY} ${x0} ${y0}\n      Z \n    `;\n}\n\n/**\n *\n * @param x 中心 x\n * @param y 中心 y\n * @param width 外接矩形的宽\n * @param height 外接矩形的高\n */\nfunction circle(x: number, y: number, width: number, height: number) {\n  const rx = width / 2;\n  const ry = height / 2;\n  return `\n      M ${x} ${y - ry} \n      a ${rx} ${ry} 0 1 0 0 ${ry * 2}\n      a ${rx} ${ry} 0 1 0 0 ${-ry * 2}\n      Z\n    `;\n}\n\n/**\n *\n * @param x 中心 x\n * @param y 中心 y\n * @param width 外接矩形的宽\n * @param height 外接矩形的高\n */\nfunction diamond(x: number, y: number, width: number, height: number) {\n  const h = height / 2;\n  const w = width / 2;\n  return `\n      M ${x} ${y - h}\n      L ${x + w} ${y}\n      L ${x} ${y + h}\n      L ${x - w} ${y}\n      Z\n    `;\n}\n\n/**\n *\n * @param x 中心 x\n * @param y 中心 y\n * @param width 外接矩形的宽\n * @param height 外接矩形的高\n */\nfunction triangle(x: number, y: number, width: number, height: number) {\n  const h = height / 2;\n  const w = width / 2;\n  return `\n      M ${x} ${y - h}\n      L ${x + w} ${y + h}\n      L ${x - w} ${y + h}\n      Z\n    `;\n}\n\n/**\n *\n * @param x 中心 x\n * @param y 中心 y\n * @param width 外接矩形的宽\n * @param height 外接矩形的高\n */\nfunction rect(x: number, y: number, width: number, height: number) {\n  const GOLDEN_SECTION_RATIO = 0.618;\n  const h = height / 2;\n  const w = (width / 2) * GOLDEN_SECTION_RATIO;\n  return `\n      M ${x - w} ${y - h}\n      L ${x + w} ${y - h}\n      L ${x + w} ${y + h}\n      L ${x - w} ${y + h}\n      Z\n    `;\n}\n\nconst builtInShapeByName = {\n  pin,\n  circle,\n  diamond,\n  triangle,\n  rect,\n};\n\nregisterShape('interval', 'liquid-fill-gauge', {\n  draw(cfg: any, container: IGroup) {\n    const cx = 0.5;\n    const cy = 0.5;\n\n    const { customInfo } = cfg;\n    const { radius: radio, shape, shapeStyle, background, animation } = customInfo as CustomInfo;\n    const outline: LiquidOptions['outline'] = customInfo.outline;\n    const wave: LiquidOptions['wave'] = customInfo.wave;\n    const { border, distance } = outline;\n    const { count: waveCount, length: waveLength } = wave;\n\n    // 获取最小 minX\n    const minX = reduce(\n      cfg.points as Point[],\n      (r: number, p: Point) => {\n        return Math.min(r, p.x);\n      },\n      Infinity\n    );\n\n    const center = this.parsePoint({ x: cx, y: cy });\n    const minXPoint = this.parsePoint({ x: minX, y: cy });\n    const halfWidth = center.x - minXPoint.x;\n\n    // 保证半径是 画布宽高最小值的 radius 值\n    const radius = Math.min(halfWidth, minXPoint.y * radio);\n    const waveAttrs = getFillAttrs(cfg);\n    const outlineAttrs = getLineAttrs(mix({}, cfg, outline));\n    const innerRadius = radius - border / 2;\n\n    const buildPath = typeof shape === 'function' ? shape : builtInShapeByName[shape] || builtInShapeByName['circle'];\n    const shapePath = buildPath(center.x, center.y, innerRadius * 2, innerRadius * 2);\n\n    // 1. 当 shapeStyle 不为空时，绘制形状样式作为背景\n    if (shapeStyle) {\n      container.addShape('path', {\n        name: 'shape',\n        attrs: {\n          path: shapePath,\n          ...shapeStyle,\n        },\n      });\n    }\n\n    // 2. 绘制一个波\n    const waves = container.addGroup({\n      name: 'waves',\n    });\n\n    // 3. 波对应的 clip 裁剪形状\n    const clipPath = waves.setClip({\n      type: 'path',\n      attrs: {\n        path: shapePath,\n      },\n    });\n\n    // 4. 绘制波形\n    addWaterWave(\n      center.x,\n      center.y,\n      1 - (cfg.points[1] as Point).y,\n      waveCount,\n      waveAttrs,\n      waves,\n      clipPath,\n      radius * 2,\n      waveLength,\n      animation\n    );\n\n    // 5. 绘制一个 distance 宽的 border\n    container.addShape('path', {\n      name: 'distance',\n      attrs: {\n        path: shapePath,\n        fill: 'transparent',\n        lineWidth: border + distance * 2,\n        stroke: background === 'transparent' ? '#fff' : background,\n      },\n    });\n\n    // 6. 绘制一个 border 宽的 border\n    container.addShape('path', {\n      name: 'wrap',\n      attrs: mix(outlineAttrs, {\n        path: shapePath,\n        fill: 'transparent',\n        lineWidth: border,\n      }),\n    });\n\n    return container;\n  },\n});\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}