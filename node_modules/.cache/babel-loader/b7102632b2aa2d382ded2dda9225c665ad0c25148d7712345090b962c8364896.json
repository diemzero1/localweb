{"ast":null,"code":"import { __assign, __rest, __spreadArrays } from \"tslib\";\nimport { get, isFunction, uniq } from '@antv/util';\nimport { animation, annotation, interaction as baseInteraction, legend, pattern, scale, theme } from '../../adaptor/common';\nimport { polygon as polygonAdaptor } from '../../adaptor/geometries';\nimport { deepAssign, findGeometry, flow, transformLabel } from '../../utils';\nimport { getAdjustAppendPadding } from '../../utils/padding';\nimport { RAW_FIELDS, SUNBURST_ANCESTOR_FIELD, SUNBURST_PATH_FIELD, SUNBURST_Y_FIELD } from './constant';\nimport { transformData } from './utils';\n/**\n * geometry 配置处理\n * @param params\n */\nfunction geometry(params) {\n  var chart = params.chart,\n    options = params.options;\n  var color = options.color,\n    _a = options.colorField,\n    colorField = _a === void 0 ? SUNBURST_ANCESTOR_FIELD : _a,\n    sunburstStyle = options.sunburstStyle,\n    _b = options.rawFields,\n    rawFields = _b === void 0 ? [] : _b;\n  var data = transformData(options);\n  chart.data(data);\n  // 特殊处理下样式，如果没有设置 fillOpacity 的时候，默认根据层级进行填充透明度\n  var style;\n  if (sunburstStyle) {\n    style = function (datum) {\n      return deepAssign({}, {\n        fillOpacity: Math.pow(0.85, datum.depth)\n      }, isFunction(sunburstStyle) ? sunburstStyle(datum) : sunburstStyle);\n    };\n  }\n  // geometry\n  polygonAdaptor(deepAssign({}, params, {\n    options: {\n      xField: 'x',\n      yField: 'y',\n      seriesField: colorField,\n      rawFields: uniq(__spreadArrays(RAW_FIELDS, rawFields)),\n      polygon: {\n        color: color,\n        style: style\n      }\n    }\n  }));\n  return params;\n}\n/**\n * axis 配置\n * @param params\n */\nexport function axis(params) {\n  var chart = params.chart;\n  chart.axis(false);\n  return params;\n}\n/**\n * 数据标签\n * @param params\n */\nfunction label(params) {\n  var chart = params.chart,\n    options = params.options;\n  var label = options.label;\n  var geometry = findGeometry(chart, 'polygon');\n  // 默认不展示，undefined 也不展示\n  if (!label) {\n    geometry.label(false);\n  } else {\n    var _a = label.fields,\n      fields = _a === void 0 ? ['name'] : _a,\n      callback = label.callback,\n      cfg = __rest(label, [\"fields\", \"callback\"]);\n    geometry.label({\n      fields: fields,\n      callback: callback,\n      cfg: transformLabel(cfg)\n    });\n  }\n  return params;\n}\n/**\n * coord 配置\n * @param params\n */\nfunction coordinate(params) {\n  var chart = params.chart,\n    options = params.options;\n  var innerRadius = options.innerRadius,\n    radius = options.radius,\n    reflect = options.reflect;\n  var coord = chart.coordinate({\n    type: 'polar',\n    cfg: {\n      innerRadius: innerRadius,\n      radius: radius\n    }\n  });\n  if (reflect) {\n    coord.reflect(reflect);\n  }\n  return params;\n}\n/**\n * meta 配置\n * @param params\n */\nexport function meta(params) {\n  var _a;\n  var options = params.options;\n  var hierarchyConfig = options.hierarchyConfig,\n    meta = options.meta;\n  return flow(scale({}, (_a = {}, _a[SUNBURST_Y_FIELD] = get(meta, get(hierarchyConfig, ['field'], 'value')), _a)))(params);\n}\n/**\n * tooltip 配置\n * @param params\n */\nexport function tooltip(params) {\n  var chart = params.chart,\n    options = params.options;\n  var tooltip = options.tooltip;\n  if (tooltip === false) {\n    chart.tooltip(false);\n  } else {\n    var tooltipOptions = tooltip;\n    // 设置了 fields，就不进行 customItems 了; 设置 formatter 时，需要搭配 fields\n    if (!get(tooltip, 'fields')) {\n      tooltipOptions = deepAssign({}, {\n        customItems: function (items) {\n          return items.map(function (item) {\n            var scales = get(chart.getOptions(), 'scales');\n            var pathFormatter = get(scales, [SUNBURST_PATH_FIELD, 'formatter'], function (v) {\n              return v;\n            });\n            var valueFormatter = get(scales, [SUNBURST_Y_FIELD, 'formatter'], function (v) {\n              return v;\n            });\n            return __assign(__assign({}, item), {\n              name: pathFormatter(item.data[SUNBURST_PATH_FIELD]),\n              value: valueFormatter(item.data.value)\n            });\n          });\n        }\n      }, tooltipOptions);\n    }\n    chart.tooltip(tooltipOptions);\n  }\n  return params;\n}\nfunction adaptorInteraction(options) {\n  var drilldown = options.drilldown,\n    _a = options.interactions,\n    interactions = _a === void 0 ? [] : _a;\n  if (drilldown === null || drilldown === void 0 ? void 0 : drilldown.enabled) {\n    return deepAssign({}, options, {\n      interactions: __spreadArrays(interactions, [{\n        type: 'drill-down',\n        cfg: {\n          drillDownConfig: drilldown,\n          transformData: transformData\n        }\n      }])\n    });\n  }\n  return options;\n}\n/**\n * 交互配置\n * @param params\n * @returns\n */\nfunction interaction(params) {\n  var chart = params.chart,\n    options = params.options;\n  var drilldown = options.drilldown;\n  baseInteraction({\n    chart: chart,\n    options: adaptorInteraction(options)\n  });\n  // 适应下钻交互面包屑\n  if (drilldown === null || drilldown === void 0 ? void 0 : drilldown.enabled) {\n    // 为面包屑留出 25px 的空间\n    chart.appendPadding = getAdjustAppendPadding(chart.appendPadding, get(drilldown, ['breadCrumb', 'position']));\n  }\n  return params;\n}\n/**\n * 旭日图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(theme, pattern('sunburstStyle'), geometry, axis, meta, legend, coordinate, tooltip, label, interaction, animation, annotation())(params);\n}","map":{"version":3,"mappings":"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","names":["get","isFunction","uniq","animation","annotation","interaction","baseInteraction","legend","pattern","scale","theme","polygon","polygonAdaptor","deepAssign","findGeometry","flow","transformLabel","getAdjustAppendPadding","RAW_FIELDS","SUNBURST_ANCESTOR_FIELD","SUNBURST_PATH_FIELD","SUNBURST_Y_FIELD","transformData","geometry","params","options","_a","colorField","sunburstStyle","_b","rawFields","data","chart","style","datum","fillOpacity","Math","depth","xField","yField","seriesField","color","axis","label","fields","callback","cfg","coordinate","radius","reflect","coord","type","innerRadius","meta","hierarchyConfig","tooltip","tooltipOptions","customItems","items","map","item","scales","getOptions","pathFormatter","v","valueFormatter","name","value","adaptorInteraction","interactions","drilldown","enabled","drillDownConfig","appendPadding","adaptor"],"sources":["/home/iam/Documents/network/node_modules/@antv/g2plot/src/plots/sunburst/adaptor.ts"],"sourcesContent":["import { Types } from '@antv/g2';\nimport { get, isFunction, uniq } from '@antv/util';\nimport {\n  animation,\n  annotation,\n  interaction as baseInteraction,\n  legend,\n  pattern,\n  scale,\n  theme,\n} from '../../adaptor/common';\nimport { polygon as polygonAdaptor } from '../../adaptor/geometries';\nimport { Params } from '../../core/adaptor';\nimport { Datum } from '../../types';\nimport { deepAssign, findGeometry, flow, transformLabel } from '../../utils';\nimport { getAdjustAppendPadding } from '../../utils/padding';\nimport { RAW_FIELDS, SUNBURST_ANCESTOR_FIELD, SUNBURST_PATH_FIELD, SUNBURST_Y_FIELD } from './constant';\nimport { SunburstOptions } from './types';\nimport { transformData } from './utils';\n\n/**\n * geometry 配置处理\n * @param params\n */\nfunction geometry(params: Params<SunburstOptions>): Params<SunburstOptions> {\n  const { chart, options } = params;\n  const { color, colorField = SUNBURST_ANCESTOR_FIELD, sunburstStyle, rawFields = [] } = options;\n  const data = transformData(options);\n  chart.data(data);\n\n  // 特殊处理下样式，如果没有设置 fillOpacity 的时候，默认根据层级进行填充透明度\n  let style;\n  if (sunburstStyle) {\n    style = (datum: Datum) => {\n      return deepAssign(\n        {},\n        {\n          fillOpacity: 0.85 ** datum.depth,\n        },\n        isFunction(sunburstStyle) ? sunburstStyle(datum) : sunburstStyle\n      );\n    };\n  }\n\n  // geometry\n  polygonAdaptor(\n    deepAssign({}, params, {\n      options: {\n        xField: 'x',\n        yField: 'y',\n        seriesField: colorField,\n        rawFields: uniq([...RAW_FIELDS, ...rawFields]),\n        polygon: {\n          color,\n          style,\n        },\n      },\n    })\n  );\n\n  return params;\n}\n\n/**\n * axis 配置\n * @param params\n */\nexport function axis(params: Params<SunburstOptions>): Params<SunburstOptions> {\n  const { chart } = params;\n  chart.axis(false);\n  return params;\n}\n\n/**\n * 数据标签\n * @param params\n */\nfunction label(params: Params<SunburstOptions>): Params<SunburstOptions> {\n  const { chart, options } = params;\n  const { label } = options;\n\n  const geometry = findGeometry(chart, 'polygon');\n\n  // 默认不展示，undefined 也不展示\n  if (!label) {\n    geometry.label(false);\n  } else {\n    const { fields = ['name'], callback, ...cfg } = label;\n    geometry.label({\n      fields,\n      callback,\n      cfg: transformLabel(cfg),\n    });\n  }\n\n  return params;\n}\n\n/**\n * coord 配置\n * @param params\n */\nfunction coordinate(params: Params<SunburstOptions>): Params<SunburstOptions> {\n  const { chart, options } = params;\n  const { innerRadius, radius, reflect } = options;\n\n  const coord = chart.coordinate({\n    type: 'polar',\n    cfg: {\n      innerRadius,\n      radius,\n    },\n  });\n  if (reflect) {\n    coord.reflect(reflect);\n  }\n\n  return params;\n}\n/**\n * meta 配置\n * @param params\n */\nexport function meta(params: Params<SunburstOptions>): Params<SunburstOptions> {\n  const { options } = params;\n  const { hierarchyConfig, meta } = options;\n\n  return flow(\n    scale(\n      {},\n      {\n        [SUNBURST_Y_FIELD]: get(meta, get(hierarchyConfig, ['field'], 'value')),\n      }\n    )\n  )(params);\n}\n\n/**\n * tooltip 配置\n * @param params\n */\nexport function tooltip(params: Params<SunburstOptions>): Params<SunburstOptions> {\n  const { chart, options } = params;\n  const { tooltip } = options;\n\n  if (tooltip === false) {\n    chart.tooltip(false);\n  } else {\n    let tooltipOptions = tooltip;\n    // 设置了 fields，就不进行 customItems 了; 设置 formatter 时，需要搭配 fields\n    if (!get(tooltip, 'fields')) {\n      tooltipOptions = deepAssign(\n        {},\n        {\n          customItems: (items: Types.TooltipItem[]) =>\n            items.map((item) => {\n              const scales = get(chart.getOptions(), 'scales');\n              const pathFormatter = get(scales, [SUNBURST_PATH_FIELD, 'formatter'], (v) => v);\n              const valueFormatter = get(scales, [SUNBURST_Y_FIELD, 'formatter'], (v) => v);\n              return {\n                ...item,\n                name: pathFormatter(item.data[SUNBURST_PATH_FIELD]),\n                value: valueFormatter(item.data.value),\n              };\n            }),\n        },\n        tooltipOptions\n      );\n    }\n    chart.tooltip(tooltipOptions);\n  }\n\n  return params;\n}\n\nfunction adaptorInteraction(options: SunburstOptions): SunburstOptions {\n  const { drilldown, interactions = [] } = options;\n\n  if (drilldown?.enabled) {\n    return deepAssign({}, options, {\n      interactions: [\n        ...interactions,\n        {\n          type: 'drill-down',\n          cfg: { drillDownConfig: drilldown, transformData },\n        },\n      ],\n    });\n  }\n  return options;\n}\n\n/**\n * 交互配置\n * @param params\n * @returns\n */\nfunction interaction(params: Params<SunburstOptions>): Params<SunburstOptions> {\n  const { chart, options } = params;\n\n  const { drilldown } = options;\n\n  baseInteraction({\n    chart,\n    options: adaptorInteraction(options),\n  });\n\n  // 适应下钻交互面包屑\n  if (drilldown?.enabled) {\n    // 为面包屑留出 25px 的空间\n    chart.appendPadding = getAdjustAppendPadding(chart.appendPadding, get(drilldown, ['breadCrumb', 'position']));\n  }\n\n  return params;\n}\n\n/**\n * 旭日图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<SunburstOptions>) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(\n    theme,\n    pattern('sunburstStyle'),\n    geometry,\n    axis,\n    meta,\n    legend,\n    coordinate,\n    tooltip,\n    label,\n    interaction,\n    animation,\n    annotation()\n  )(params);\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}