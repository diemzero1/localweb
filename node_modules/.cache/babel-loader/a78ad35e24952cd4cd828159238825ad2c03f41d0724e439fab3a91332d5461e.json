{"ast":null,"code":"import { getSize } from './get-size';\nimport { defaultStatusBarWidth } from '../constants';\nimport { isNumber } from '@antv/util';\nexport var getStatusCfg = function (cfg, cardSize) {\n  var _a = cfg !== null && cfg !== void 0 ? cfg : {},\n    _b = _a.size,\n    size = _b === void 0 ? [] : _b,\n    _c = _a.position,\n    position = _c === void 0 ? 'left' : _c;\n  var _d = getSize(size),\n    width = _d[0],\n    height = _d[1];\n  var cardWidth = cardSize[0],\n    cardHeight = cardSize[1];\n  var x = 0;\n  var y = 0;\n  var w = 0;\n  var h = 0;\n  switch (position) {\n    case 'top':\n      x = 0;\n      y = 0;\n      w = width !== null && width !== void 0 ? width : cardWidth;\n      h = height !== null && height !== void 0 ? height : defaultStatusBarWidth;\n      break;\n    case 'left':\n      x = 0;\n      y = 0;\n      w = width !== null && width !== void 0 ? width : defaultStatusBarWidth;\n      h = height !== null && height !== void 0 ? height : cardHeight;\n      break;\n    case 'right':\n      x = cardWidth - (isNumber(width) ? width : defaultStatusBarWidth);\n      y = 0;\n      w = width !== null && width !== void 0 ? width : defaultStatusBarWidth;\n      h = height !== null && height !== void 0 ? height : cardHeight;\n      break;\n    case 'bottom':\n      x = 0;\n      y = cardHeight - (isNumber(height) ? height : defaultStatusBarWidth);\n      w = width !== null && width !== void 0 ? width : cardWidth;\n      h = height !== null && height !== void 0 ? height : defaultStatusBarWidth;\n      break;\n  }\n  return {\n    x: x,\n    y: y,\n    width: w,\n    height: h\n  };\n};","map":{"version":3,"names":["getSize","defaultStatusBarWidth","isNumber","getStatusCfg","cfg","cardSize","_a","_b","size","_c","position","_d","width","height","cardWidth","cardHeight","x","y","w","h"],"sources":["/home/iam/Documents/network/node_modules/@ant-design/graphs/es/utils/get-status-cfg.js"],"sourcesContent":["import { getSize } from './get-size';\nimport { defaultStatusBarWidth } from '../constants';\nimport { isNumber } from '@antv/util';\nexport var getStatusCfg = function (cfg, cardSize) {\n    var _a = cfg !== null && cfg !== void 0 ? cfg : {}, _b = _a.size, size = _b === void 0 ? [] : _b, _c = _a.position, position = _c === void 0 ? 'left' : _c;\n    var _d = getSize(size), width = _d[0], height = _d[1];\n    var cardWidth = cardSize[0], cardHeight = cardSize[1];\n    var x = 0;\n    var y = 0;\n    var w = 0;\n    var h = 0;\n    switch (position) {\n        case 'top':\n            x = 0;\n            y = 0;\n            w = width !== null && width !== void 0 ? width : cardWidth;\n            h = height !== null && height !== void 0 ? height : defaultStatusBarWidth;\n            break;\n        case 'left':\n            x = 0;\n            y = 0;\n            w = width !== null && width !== void 0 ? width : defaultStatusBarWidth;\n            h = height !== null && height !== void 0 ? height : cardHeight;\n            break;\n        case 'right':\n            x = cardWidth - (isNumber(width) ? width : defaultStatusBarWidth);\n            y = 0;\n            w = width !== null && width !== void 0 ? width : defaultStatusBarWidth;\n            h = height !== null && height !== void 0 ? height : cardHeight;\n            break;\n        case 'bottom':\n            x = 0;\n            y = cardHeight - (isNumber(height) ? height : defaultStatusBarWidth);\n            w = width !== null && width !== void 0 ? width : cardWidth;\n            h = height !== null && height !== void 0 ? height : defaultStatusBarWidth;\n            break;\n    }\n    return {\n        x: x,\n        y: y,\n        width: w,\n        height: h,\n    };\n};\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,YAAY;AACpC,SAASC,qBAAqB,QAAQ,cAAc;AACpD,SAASC,QAAQ,QAAQ,YAAY;AACrC,OAAO,IAAIC,YAAY,GAAG,UAAUC,GAAG,EAAEC,QAAQ,EAAE;EAC/C,IAAIC,EAAE,GAAGF,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAK,KAAK,CAAC,GAAGA,GAAG,GAAG,CAAC,CAAC;IAAEG,EAAE,GAAGD,EAAE,CAACE,IAAI;IAAEA,IAAI,GAAGD,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAGA,EAAE;IAAEE,EAAE,GAAGH,EAAE,CAACI,QAAQ;IAAEA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAC,GAAG,MAAM,GAAGA,EAAE;EAC1J,IAAIE,EAAE,GAAGX,OAAO,CAACQ,IAAI,CAAC;IAAEI,KAAK,GAAGD,EAAE,CAAC,CAAC,CAAC;IAAEE,MAAM,GAAGF,EAAE,CAAC,CAAC,CAAC;EACrD,IAAIG,SAAS,GAAGT,QAAQ,CAAC,CAAC,CAAC;IAAEU,UAAU,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACrD,IAAIW,CAAC,GAAG,CAAC;EACT,IAAIC,CAAC,GAAG,CAAC;EACT,IAAIC,CAAC,GAAG,CAAC;EACT,IAAIC,CAAC,GAAG,CAAC;EACT,QAAQT,QAAQ;IACZ,KAAK,KAAK;MACNM,CAAC,GAAG,CAAC;MACLC,CAAC,GAAG,CAAC;MACLC,CAAC,GAAGN,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,KAAK,CAAC,GAAGA,KAAK,GAAGE,SAAS;MAC1DK,CAAC,GAAGN,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAGA,MAAM,GAAGZ,qBAAqB;MACzE;IACJ,KAAK,MAAM;MACPe,CAAC,GAAG,CAAC;MACLC,CAAC,GAAG,CAAC;MACLC,CAAC,GAAGN,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,KAAK,CAAC,GAAGA,KAAK,GAAGX,qBAAqB;MACtEkB,CAAC,GAAGN,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAGA,MAAM,GAAGE,UAAU;MAC9D;IACJ,KAAK,OAAO;MACRC,CAAC,GAAGF,SAAS,IAAIZ,QAAQ,CAACU,KAAK,CAAC,GAAGA,KAAK,GAAGX,qBAAqB,CAAC;MACjEgB,CAAC,GAAG,CAAC;MACLC,CAAC,GAAGN,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,KAAK,CAAC,GAAGA,KAAK,GAAGX,qBAAqB;MACtEkB,CAAC,GAAGN,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAGA,MAAM,GAAGE,UAAU;MAC9D;IACJ,KAAK,QAAQ;MACTC,CAAC,GAAG,CAAC;MACLC,CAAC,GAAGF,UAAU,IAAIb,QAAQ,CAACW,MAAM,CAAC,GAAGA,MAAM,GAAGZ,qBAAqB,CAAC;MACpEiB,CAAC,GAAGN,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,KAAK,CAAC,GAAGA,KAAK,GAAGE,SAAS;MAC1DK,CAAC,GAAGN,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAGA,MAAM,GAAGZ,qBAAqB;MACzE;EAAM;EAEd,OAAO;IACHe,CAAC,EAAEA,CAAC;IACJC,CAAC,EAAEA,CAAC;IACJL,KAAK,EAAEM,CAAC;IACRL,MAAM,EAAEM;EACZ,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}