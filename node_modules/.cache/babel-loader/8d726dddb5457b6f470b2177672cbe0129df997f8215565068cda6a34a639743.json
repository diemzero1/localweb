{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Event, VIEW_LIFE_CIRCLE } from '@antv/g2';\nimport { Plot } from '../../core/plot';\nimport { getProgressData } from '../progress/utils';\nimport { adaptor, statistic } from './adaptor';\nimport { DEFAULT_OPTIONS } from './constants';\nvar RingProgress = /** @class */function (_super) {\n  __extends(RingProgress, _super);\n  function RingProgress() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** 图表类型 */\n    _this.type = 'ring-process';\n    return _this;\n  }\n  /**\n   * 获取默认配置项\n   * 供外部使用\n   */\n  RingProgress.getDefaultOptions = function () {\n    return DEFAULT_OPTIONS;\n  };\n  /**\n   * 更新数据\n   * @param percent\n   */\n  RingProgress.prototype.changeData = function (percent) {\n    this.chart.emit(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA, Event.fromData(this.chart, VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA, null));\n    this.updateOption({\n      percent: percent\n    });\n    this.chart.data(getProgressData(percent));\n    // todo 后续让 G2 层在 afterrender 之后，来重绘 annotations\n    statistic({\n      chart: this.chart,\n      options: this.options\n    }, true);\n    this.chart.emit(VIEW_LIFE_CIRCLE.AFTER_CHANGE_DATA, Event.fromData(this.chart, VIEW_LIFE_CIRCLE.AFTER_CHANGE_DATA, null));\n  };\n  RingProgress.prototype.getDefaultOptions = function () {\n    return RingProgress.getDefaultOptions();\n  };\n  /**\n   * 获取 环形进度图 的适配器\n   */\n  RingProgress.prototype.getSchemaAdaptor = function () {\n    return adaptor;\n  };\n  return RingProgress;\n}(Plot);\nexport { RingProgress };","map":{"version":3,"mappings":";AAAA,SAASA,KAAK,EAAEC,gBAAgB,QAAQ,UAAU;AAElD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SAASC,eAAe,QAAQ,mBAAmB;AACnD,SAASC,OAAO,EAAEC,SAAS,QAAQ,WAAW;AAC9C,SAASC,eAAe,QAAQ,aAAa;AAK7C;EAAkCC;EAAlC;IAAA;IASE;IACOC,UAAI,GAAW,cAAc;;EAiCtC;EA1CE;;;;EAIOC,8BAAiB,GAAxB;IACE,OAAOH,eAAe;EACxB,CAAC;EAKD;;;;EAIOG,iCAAU,GAAjB,UAAkBC,OAAe;IAC/B,IAAI,CAACC,KAAK,CAACC,IAAI,CACbX,gBAAgB,CAACY,kBAAkB,EACnCb,KAAK,CAACc,QAAQ,CAAC,IAAI,CAACH,KAAK,EAAEV,gBAAgB,CAACY,kBAAkB,EAAE,IAAI,CAAC,CACtE;IACD,IAAI,CAACE,YAAY,CAAC;MAAEL,OAAO;IAAA,CAAE,CAAC;IAE9B,IAAI,CAACC,KAAK,CAACK,IAAI,CAACb,eAAe,CAACO,OAAO,CAAC,CAAC;IACzC;IACAL,SAAS,CAAC;MAAEM,KAAK,EAAE,IAAI,CAACA,KAAK;MAAEM,OAAO,EAAE,IAAI,CAACA;IAAO,CAAE,EAAE,IAAI,CAAC;IAE7D,IAAI,CAACN,KAAK,CAACC,IAAI,CACbX,gBAAgB,CAACiB,iBAAiB,EAClClB,KAAK,CAACc,QAAQ,CAAC,IAAI,CAACH,KAAK,EAAEV,gBAAgB,CAACiB,iBAAiB,EAAE,IAAI,CAAC,CACrE;EACH,CAAC;EAEST,wCAAiB,GAA3B;IACE,OAAOA,YAAY,CAACU,iBAAiB,EAAE;EACzC,CAAC;EAED;;;EAGUV,uCAAgB,GAA1B;IACE,OAAOL,OAAO;EAChB,CAAC;EACH,mBAAC;AAAD,CAAC,CA3CiCF,IAAI","names":["Event","VIEW_LIFE_CIRCLE","Plot","getProgressData","adaptor","statistic","DEFAULT_OPTIONS","__extends","_this","RingProgress","percent","chart","emit","BEFORE_CHANGE_DATA","fromData","updateOption","data","options","AFTER_CHANGE_DATA","getDefaultOptions"],"sources":["/home/iam/Documents/network/node_modules/@antv/g2plot/src/plots/ring-progress/index.ts"],"sourcesContent":["import { Event, VIEW_LIFE_CIRCLE } from '@antv/g2';\nimport { Adaptor } from '../../core/adaptor';\nimport { Plot } from '../../core/plot';\nimport { getProgressData } from '../progress/utils';\nimport { adaptor, statistic } from './adaptor';\nimport { DEFAULT_OPTIONS } from './constants';\nimport { RingProgressOptions } from './types';\n\nexport type { RingProgressOptions };\n\nexport class RingProgress extends Plot<RingProgressOptions> {\n  /**\n   * 获取默认配置项\n   * 供外部使用\n   */\n  static getDefaultOptions(): Partial<RingProgressOptions> {\n    return DEFAULT_OPTIONS;\n  }\n\n  /** 图表类型 */\n  public type: string = 'ring-process';\n\n  /**\n   * 更新数据\n   * @param percent\n   */\n  public changeData(percent: number) {\n    this.chart.emit(\n      VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA,\n      Event.fromData(this.chart, VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA, null)\n    );\n    this.updateOption({ percent });\n\n    this.chart.data(getProgressData(percent));\n    // todo 后续让 G2 层在 afterrender 之后，来重绘 annotations\n    statistic({ chart: this.chart, options: this.options }, true);\n\n    this.chart.emit(\n      VIEW_LIFE_CIRCLE.AFTER_CHANGE_DATA,\n      Event.fromData(this.chart, VIEW_LIFE_CIRCLE.AFTER_CHANGE_DATA, null)\n    );\n  }\n\n  protected getDefaultOptions() {\n    return RingProgress.getDefaultOptions();\n  }\n\n  /**\n   * 获取 环形进度图 的适配器\n   */\n  protected getSchemaAdaptor(): Adaptor<RingProgressOptions> {\n    return adaptor;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}