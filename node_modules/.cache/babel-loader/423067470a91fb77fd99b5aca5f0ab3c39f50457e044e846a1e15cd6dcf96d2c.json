{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Action, Util } from '@antv/g2';\nimport { each, get } from '@antv/util';\nimport { renderStatistic } from '../../../../utils/statistic';\nimport { getCurrentElement } from '../util';\n/**\n * Pie 中心文本事件的 Action\n */\nvar StatisticAction = /** @class */function (_super) {\n  __extends(StatisticAction, _super);\n  function StatisticAction() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  StatisticAction.prototype.getAnnotations = function (_view) {\n    var view = _view || this.context.view;\n    // @ts-ignore\n    return view.getController('annotation').option;\n  };\n  StatisticAction.prototype.getInitialAnnotation = function () {\n    return this.initialAnnotation;\n  };\n  StatisticAction.prototype.init = function () {\n    var _this = this;\n    var view = this.context.view;\n    view.removeInteraction('tooltip');\n    view.on('afterchangesize', function () {\n      var annotations = _this.getAnnotations(view);\n      _this.initialAnnotation = annotations;\n    });\n  };\n  StatisticAction.prototype.change = function (arg) {\n    var _a = this.context,\n      view = _a.view,\n      event = _a.event;\n    if (!this.initialAnnotation) {\n      this.initialAnnotation = this.getAnnotations();\n    }\n    var data = get(event, ['data', 'data']);\n    if (event.type.match('legend-item')) {\n      var delegateObject = Util.getDelegationObject(this.context);\n      // @ts-ignore\n      var colorField_1 = view.getGroupedFields()[0];\n      if (delegateObject && colorField_1) {\n        var item_1 = delegateObject.item;\n        data = view.getData().find(function (d) {\n          return d[colorField_1] === item_1.value;\n        });\n      }\n    }\n    if (data) {\n      var annotations = get(arg, 'annotations', []);\n      var statistic = get(arg, 'statistic', {});\n      // 先清空标注，再重新渲染\n      view.getController('annotation').clear(true);\n      // 先进行其他 annotations，再去渲染统计文本\n      each(annotations, function (annotation) {\n        if (typeof annotation === 'object') {\n          view.annotation()[annotation.type](annotation);\n        }\n      });\n      renderStatistic(view, {\n        statistic: statistic,\n        plotType: 'pie'\n      }, data);\n      view.render(true);\n    }\n    // 交互的时候，把 shape 提前\n    var ele = getCurrentElement(this.context);\n    if (ele) {\n      ele.shape.toFront();\n    }\n  };\n  StatisticAction.prototype.reset = function () {\n    var view = this.context.view;\n    var annotationController = view.getController('annotation');\n    annotationController.clear(true);\n    var initialStatistic = this.getInitialAnnotation();\n    each(initialStatistic, function (a) {\n      view.annotation()[a.type](a);\n    });\n    view.render(true);\n  };\n  return StatisticAction;\n}(Action);\nexport { StatisticAction };","map":{"version":3,"mappings":"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","names":["Action","Util","each","get","renderStatistic","getCurrentElement","__extends","StatisticAction","_view","view","context","getController","option","initialAnnotation","removeInteraction","on","annotations","_this","getAnnotations","arg","event","data","type","match","delegateObject","getDelegationObject","colorField_1","getGroupedFields","getData","find","d","item_1","value","statistic","clear","annotation","plotType","render","ele","shape","toFront","annotationController","initialStatistic","getInitialAnnotation","a"],"sources":["/home/iam/Documents/LocalWeb-master/node_modules/@antv/g2plot/src/plots/pie/interactions/actions/statistic-active.ts"],"sourcesContent":["import { Action, Types, Util, View } from '@antv/g2';\nimport { each, get } from '@antv/util';\nimport { Annotation } from '../../../../types/annotation';\nimport { renderStatistic } from '../../../../utils/statistic';\nimport { PieOptions } from '../../types';\nimport { getCurrentElement } from '../util';\n\n/**\n * Pie 中心文本事件的 Action\n */\nexport class StatisticAction extends Action {\n  private initialAnnotation;\n\n  private getAnnotations(_view?: View): object[] {\n    const view = _view || this.context.view;\n    // @ts-ignore\n    return view.getController('annotation').option;\n  }\n\n  private getInitialAnnotation(): Types.ComponentOption[] | null {\n    return this.initialAnnotation;\n  }\n\n  init() {\n    const { view } = this.context;\n    view.removeInteraction('tooltip');\n\n    view.on('afterchangesize', () => {\n      const annotations = this.getAnnotations(view);\n      this.initialAnnotation = annotations;\n    });\n  }\n\n  public change(arg?: Pick<PieOptions, 'annotations' | 'statistic'>) {\n    const { view, event } = this.context;\n    if (!this.initialAnnotation) {\n      this.initialAnnotation = this.getAnnotations();\n    }\n\n    let data = get(event, ['data', 'data']);\n    if (event.type.match('legend-item')) {\n      const delegateObject = Util.getDelegationObject(this.context);\n      // @ts-ignore\n      const colorField = view.getGroupedFields()[0];\n      if (delegateObject && colorField) {\n        const { item } = delegateObject;\n        data = view.getData().find((d) => d[colorField] === item.value);\n      }\n    }\n\n    if (data) {\n      const annotations = get(arg, 'annotations', []);\n      const statistic = get(arg, 'statistic', {});\n      // 先清空标注，再重新渲染\n      view.getController('annotation').clear(true);\n      // 先进行其他 annotations，再去渲染统计文本\n      each(annotations, (annotation: Annotation) => {\n        if (typeof annotation === 'object') {\n          view.annotation()[annotation.type](annotation);\n        }\n      });\n      renderStatistic(view, { statistic, plotType: 'pie' }, data);\n      view.render(true);\n    }\n\n    // 交互的时候，把 shape 提前\n    const ele = getCurrentElement(this.context);\n    if (ele) {\n      ele.shape.toFront();\n    }\n  }\n\n  public reset() {\n    const { view } = this.context;\n    const annotationController = view.getController('annotation');\n    annotationController.clear(true);\n    const initialStatistic = this.getInitialAnnotation();\n    each(initialStatistic, (a) => {\n      view.annotation()[a.type](a);\n    });\n    view.render(true);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}