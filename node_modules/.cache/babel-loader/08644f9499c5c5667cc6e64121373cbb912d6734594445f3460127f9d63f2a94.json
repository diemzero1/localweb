{"ast":null,"code":"export var radialSectorLayout = function radialSectorLayout(params) {\n  var center = params.center,\n    eventNodePosition = params.eventNodePosition,\n    allNodes = params.nodes,\n    layoutNodes = params.layoutNodes,\n    _a = params.options,\n    options = _a === void 0 ? {} : _a;\n  var _b = options,\n    _c = _b.unitRadius,\n    unitRadius = _c === void 0 ? 80 : _c,\n    _d = _b.nodeSize,\n    nodeSize = _d === void 0 ? 20 : _d,\n    _e = _b.nodeSpacing,\n    nodeSpacing = _e === void 0 ? 10 : _e;\n  if (!layoutNodes.length) layoutNodes;\n  // 过滤已经在画布上的节点\n  var pureLayoutNodes = layoutNodes.filter(function (node) {\n    return allNodes.findIndex(function (n) {\n      var id = n.id;\n      return id === node.id;\n    }) !== -1;\n  });\n  if (!pureLayoutNodes.length) return layoutNodes;\n  var getDistance = function getDistance(point1, point2) {\n    var dx = point1.x - point2.x;\n    var dy = point1.y - point2.y;\n    return Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));\n  };\n  // 节点裁剪\n  var centerX = center[0],\n    centerY = center[1];\n  var ex = eventNodePosition[0],\n    ey = eventNodePosition[1];\n  var diffX = ex - centerX;\n  var diffY = ey - centerY;\n  var allNodePositions = [];\n  allNodes.forEach(function (n) {\n    var id = n.id,\n      x = n.x,\n      y = n.y;\n    allNodePositions.push({\n      id: id,\n      x: x,\n      y: y,\n      layer: Math.round(getDistance({\n        x: x,\n        y: y\n      }, {\n        x: centerX,\n        y: centerY\n      })) / unitRadius\n    });\n  });\n  var currentRadius = Math.sqrt(Math.pow(diffX, 2) + Math.pow(diffY, 2));\n  var degree = Math.atan2(diffY, diffX);\n  var minRadius = currentRadius + unitRadius;\n  var pureNodePositions = [];\n  var getNodesPosition = function getNodesPosition(nodes, r) {\n    var degreeStep = 2 * Math.asin((nodeSize + nodeSpacing) / 2 / r);\n    pureNodePositions = [];\n    var l = nodes.length - 1;\n    nodes.forEach(function (n, i) {\n      n.x = centerX + r * Math.cos(degree + (-l / 2 + i) * degreeStep);\n      n.y = centerY + r * Math.sin(degree + (-l / 2 + i) * degreeStep);\n      pureNodePositions.push({\n        x: n.x,\n        y: n.y\n      });\n    });\n  };\n  var checkOverlap = function checkOverlap(nodesPosition, pureNodesPosition) {\n    var hasOverlap = false;\n    var checkLayer = Math.round(minRadius / unitRadius);\n    var loopNodes = nodesPosition.filter(function (n) {\n      return n.layer === checkLayer;\n    });\n    for (var i = 0; i < loopNodes.length; i++) {\n      var n = loopNodes[i];\n      // 因为是同心圆布局，最先相交的应该是收尾节点\n      if (getDistance(pureNodesPosition[0], n) < nodeSize || getDistance(pureNodesPosition[pureNodesPosition.length - 1], n) < nodeSize) {\n        hasOverlap = true;\n        break;\n      }\n    }\n    return hasOverlap;\n  };\n  getNodesPosition(pureLayoutNodes, minRadius);\n  while (checkOverlap(allNodePositions, pureNodePositions)) {\n    minRadius += unitRadius;\n    getNodesPosition(pureLayoutNodes, minRadius);\n  }\n  return layoutNodes;\n};","map":{"version":3,"names":["radialSectorLayout","params","center","eventNodePosition","allNodes","nodes","layoutNodes","_a","options","_b","_c","unitRadius","_d","nodeSize","_e","nodeSpacing","length","pureLayoutNodes","filter","node","findIndex","n","id","getDistance","point1","point2","dx","x","dy","y","Math","sqrt","pow","centerX","centerY","ex","ey","diffX","diffY","allNodePositions","forEach","push","layer","round","currentRadius","degree","atan2","minRadius","pureNodePositions","getNodesPosition","r","degreeStep","asin","l","i","cos","sin","checkOverlap","nodesPosition","pureNodesPosition","hasOverlap","checkLayer","loopNodes"],"sources":["/home/iam/Documents/network/node_modules/@ant-design/graphs/es/layout/radial-sector.js"],"sourcesContent":["export var radialSectorLayout = function (params) {\n    var center = params.center, eventNodePosition = params.eventNodePosition, allNodes = params.nodes, layoutNodes = params.layoutNodes, _a = params.options, options = _a === void 0 ? {} : _a;\n    var _b = options, _c = _b.unitRadius, unitRadius = _c === void 0 ? 80 : _c, _d = _b.nodeSize, nodeSize = _d === void 0 ? 20 : _d, _e = _b.nodeSpacing, nodeSpacing = _e === void 0 ? 10 : _e;\n    if (!layoutNodes.length)\n        layoutNodes;\n    // 过滤已经在画布上的节点\n    var pureLayoutNodes = layoutNodes.filter(function (node) {\n        return (allNodes.findIndex(function (n) {\n            var id = n.id;\n            return id === node.id;\n        }) !== -1);\n    });\n    if (!pureLayoutNodes.length)\n        return layoutNodes;\n    var getDistance = function (point1, point2) {\n        var dx = point1.x - point2.x;\n        var dy = point1.y - point2.y;\n        return Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));\n    };\n    // 节点裁剪\n    var centerX = center[0], centerY = center[1];\n    var ex = eventNodePosition[0], ey = eventNodePosition[1];\n    var diffX = ex - centerX;\n    var diffY = ey - centerY;\n    var allNodePositions = [];\n    allNodes.forEach(function (n) {\n        var id = n.id, x = n.x, y = n.y;\n        allNodePositions.push({\n            id: id,\n            x: x,\n            y: y,\n            layer: Math.round(getDistance({ x: x, y: y }, { x: centerX, y: centerY })) / unitRadius,\n        });\n    });\n    var currentRadius = Math.sqrt(Math.pow(diffX, 2) + Math.pow(diffY, 2));\n    var degree = Math.atan2(diffY, diffX);\n    var minRadius = currentRadius + unitRadius;\n    var pureNodePositions = [];\n    var getNodesPosition = function (nodes, r) {\n        var degreeStep = 2 * Math.asin((nodeSize + nodeSpacing) / 2 / r);\n        pureNodePositions = [];\n        var l = nodes.length - 1;\n        nodes.forEach(function (n, i) {\n            n.x = centerX + r * Math.cos(degree + (-l / 2 + i) * degreeStep);\n            n.y = centerY + r * Math.sin(degree + (-l / 2 + i) * degreeStep);\n            pureNodePositions.push({ x: n.x, y: n.y });\n        });\n    };\n    var checkOverlap = function (nodesPosition, pureNodesPosition) {\n        var hasOverlap = false;\n        var checkLayer = Math.round(minRadius / unitRadius);\n        var loopNodes = nodesPosition.filter(function (n) { return n.layer === checkLayer; });\n        for (var i = 0; i < loopNodes.length; i++) {\n            var n = loopNodes[i];\n            // 因为是同心圆布局，最先相交的应该是收尾节点\n            if (getDistance(pureNodesPosition[0], n) < nodeSize ||\n                getDistance(pureNodesPosition[pureNodesPosition.length - 1], n) < nodeSize) {\n                hasOverlap = true;\n                break;\n            }\n        }\n        return hasOverlap;\n    };\n    getNodesPosition(pureLayoutNodes, minRadius);\n    while (checkOverlap(allNodePositions, pureNodePositions)) {\n        minRadius += unitRadius;\n        getNodesPosition(pureLayoutNodes, minRadius);\n    }\n    return layoutNodes;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}