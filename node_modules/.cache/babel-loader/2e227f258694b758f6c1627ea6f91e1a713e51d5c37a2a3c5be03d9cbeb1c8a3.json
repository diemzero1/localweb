{"ast":null,"code":"import { filter } from '@antv/util';\n/** 先引入brush 交互 */\nimport '../interactions/brush';\nimport { getInteractionCfg } from '../interactions/brush';\nimport { deepAssign } from '../utils';\nvar BRUSH_TYPES = ['brush', 'brush-x', 'brush-y', 'brush-highlight', 'brush-x-highlight', 'brush-y-highlight'];\n/**\n * brush 交互\n */\nexport function brushInteraction(params) {\n  var options = params.options;\n  var brush = options.brush;\n  // 先过滤掉 brush 等交互\n  var interactions = filter(options.interactions || [], function (i) {\n    return BRUSH_TYPES.indexOf(i.type) === -1;\n  });\n  // 设置 brush 交互\n  if (brush === null || brush === void 0 ? void 0 : brush.enabled) {\n    BRUSH_TYPES.forEach(function (type) {\n      var enable = false;\n      switch (brush.type) {\n        case 'x-rect':\n          enable = type === (brush.action === 'highlight' ? 'brush-x-highlight' : 'brush-x');\n          break;\n        case 'y-rect':\n          enable = type === (brush.action === 'highlight' ? 'brush-y-highlight' : 'brush-y');\n          break;\n        default:\n          enable = type === (brush.action === 'highlight' ? 'brush-highlight' : 'brush');\n          break;\n      }\n      var obj = {\n        type: type,\n        enable: enable\n      };\n      if (brush) {\n        obj.cfg = getInteractionCfg(type, brush.type, brush);\n      }\n      interactions.push(obj);\n    });\n    // 塞入 button 配置 (G2Plot 的封装)\n    if ((brush === null || brush === void 0 ? void 0 : brush.action) !== 'highlight') {\n      interactions.push({\n        type: 'filter-action',\n        cfg: {\n          buttonConfig: brush.button\n        }\n      });\n    }\n  }\n  return deepAssign({}, params, {\n    options: {\n      interactions: interactions\n    }\n  });\n}","map":{"version":3,"mappings":"AAAA,SAASA,MAAM,QAAQ,YAAY;AAEnC;AACA,OAAO,uBAAuB;AAC9B,SAASC,iBAAiB,QAAQ,uBAAuB;AAEzD,SAASC,UAAU,QAAQ,UAAU;AAIrC,IAAMC,WAAW,GAAG,CAAC,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,iBAAiB,EAAE,mBAAmB,EAAE,mBAAmB,CAAC;AAEhH;;;AAGA,OAAM,SAAUC,gBAAgB,CAA8BC,MAAiB;EACrE,WAAO,GAAKA,MAAM,QAAX;EAEP,SAAK,GAAKC,OAAO,MAAZ;EAEb;EACA,IAAMC,YAAY,GAAGP,MAAM,CAACM,OAAO,CAACC,YAAY,IAAI,EAAE,EAAE,UAACC,CAAC;IAAK,kBAAW,CAACC,OAAO,CAACD,CAAC,CAACE,IAAI,CAAC,KAAK,CAAC,CAAC;EAAlC,CAAkC,CAAC;EAElG;EACA,IAAIC,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEC,OAAO,EAAE;IAClBT,WAAW,CAACU,OAAO,CAAC,UAACH,IAAI;MACvB,IAAII,MAAM,GAAG,KAAK;MAClB,QAAQH,KAAK,CAACD,IAAI;QAChB,KAAK,QAAQ;UACXI,MAAM,GAAGJ,IAAI,MAAMC,KAAK,CAACI,MAAM,KAAK,WAAW,GAAG,mBAAmB,GAAG,SAAS,CAAC;UAClF;QACF,KAAK,QAAQ;UACXD,MAAM,GAAGJ,IAAI,MAAMC,KAAK,CAACI,MAAM,KAAK,WAAW,GAAG,mBAAmB,GAAG,SAAS,CAAC;UAClF;QACF;UACED,MAAM,GAAGJ,IAAI,MAAMC,KAAK,CAACI,MAAM,KAAK,WAAW,GAAG,iBAAiB,GAAG,OAAO,CAAC;UAC9E;MAAM;MAEV,IAAMC,GAAG,GAA0B;QAAEN,IAAI;QAAEI,MAAM;MAAA,CAAE;MAEnD,IAAIH,KAAK,EAAE;QACTK,GAAG,CAACC,GAAG,GAAGhB,iBAAiB,CAACS,IAAI,EAAEC,KAAK,CAACD,IAAI,EAAEC,KAAK,CAAC;;MAEtDJ,YAAY,CAACW,IAAI,CAACF,GAAG,CAAC;IACxB,CAAC,CAAC;IAEF;IACA,IAAI,MAAK,aAALL,KAAK,uBAALA,KAAK,CAAEI,MAAM,MAAK,WAAW,EAAE;MACjCR,YAAY,CAACW,IAAI,CAAC;QAChBR,IAAI,EAAE,eAAe;QACrBO,GAAG,EAAE;UACHE,YAAY,EAAER,KAAK,CAACS;;OAEvB,CAAC;;;EAGN,OAAOlB,UAAU,CAAC,EAAE,EAAEG,MAAM,EAAE;IAAEC,OAAO,EAAE;MAAEC,YAAY;IAAA;EAAE,CAAE,CAAC;AAC9D","names":["filter","getInteractionCfg","deepAssign","BRUSH_TYPES","brushInteraction","params","options","interactions","i","indexOf","type","brush","enabled","forEach","enable","action","obj","cfg","push","buttonConfig","button"],"sources":["/home/iam/Documents/LocalWeb-master/node_modules/@antv/g2plot/src/adaptor/brush.ts"],"sourcesContent":["import { filter } from '@antv/util';\nimport { Params } from '../core/adaptor';\n/** 先引入brush 交互 */\nimport '../interactions/brush';\nimport { getInteractionCfg } from '../interactions/brush';\nimport { BrushCfg, Interaction, Options as BaseOptions, Writable } from '../types';\nimport { deepAssign } from '../utils';\n\ntype Options = Pick<BaseOptions, 'interactions'> & { brush?: BrushCfg };\n\nconst BRUSH_TYPES = ['brush', 'brush-x', 'brush-y', 'brush-highlight', 'brush-x-highlight', 'brush-y-highlight'];\n\n/**\n * brush 交互\n */\nexport function brushInteraction<O extends Options = Options>(params: Params<O>): Params<O> {\n  const { options } = params;\n\n  const { brush } = options;\n\n  // 先过滤掉 brush 等交互\n  const interactions = filter(options.interactions || [], (i) => BRUSH_TYPES.indexOf(i.type) === -1);\n\n  // 设置 brush 交互\n  if (brush?.enabled) {\n    BRUSH_TYPES.forEach((type) => {\n      let enable = false;\n      switch (brush.type) {\n        case 'x-rect':\n          enable = type === (brush.action === 'highlight' ? 'brush-x-highlight' : 'brush-x');\n          break;\n        case 'y-rect':\n          enable = type === (brush.action === 'highlight' ? 'brush-y-highlight' : 'brush-y');\n          break;\n        default:\n          enable = type === (brush.action === 'highlight' ? 'brush-highlight' : 'brush');\n          break;\n      }\n      const obj: Writable<Interaction> = { type, enable };\n\n      if (brush) {\n        obj.cfg = getInteractionCfg(type, brush.type, brush);\n      }\n      interactions.push(obj);\n    });\n\n    // 塞入 button 配置 (G2Plot 的封装)\n    if (brush?.action !== 'highlight') {\n      interactions.push({\n        type: 'filter-action',\n        cfg: {\n          buttonConfig: brush.button,\n        },\n      });\n    }\n  }\n  return deepAssign({}, params, { options: { interactions } });\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}