{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { each, every, find, findIndex, get, isBoolean, isEqual, isObject } from '@antv/util';\nimport { animation as commonAnimation, annotation as commonAnnotation, interaction as commonInteraction, limitInPlot as commonLimitInPlot, scale, theme as commonTheme } from '../../adaptor/common';\nimport { deepAssign, flow } from '../../utils';\nimport { percent } from '../../utils/transform/percent';\nimport { findViewById } from '../../utils/view';\nimport { LEFT_AXES_VIEW, RIGHT_AXES_VIEW } from './constant';\nimport { AxisType, DualAxesGeometry } from './types';\nimport { drawSingleGeometry } from './util/geometry';\nimport { getViewLegendItems } from './util/legend';\nimport { getGeometryOption, getYAxisWithDefault, isColumn, transformObjectToArray } from './util/option';\nimport { doSliderFilter } from './util/render-sider';\n/**\n * transformOptions，双轴图整体的取参逻辑如下\n * 1. get index getOptions: 对应的是默认的图表参数，如 appendPadding，syncView 等\n * 2. get adpator transformOption: 对应的是双轴图的默认参数，deepAssign 优先级从低到高如下\n *    2.1 defaultoption，如 tooltip，legend\n *    2.2 用户填写 options\n *    2.3 根据用户填写的 options 补充的数组型 options，如 yaxis，GeometryOption，因为 deepAssign 无法 assign 数组\n *\n * @param params\n */\nexport function transformOptions(params) {\n  var _a;\n  var options = params.options;\n  var _b = options.geometryOptions,\n    geometryOptions = _b === void 0 ? [] : _b,\n    xField = options.xField,\n    yField = options.yField;\n  var allLine = every(geometryOptions, function (_a) {\n    var geometry = _a.geometry;\n    return geometry === DualAxesGeometry.Line || geometry === undefined;\n  });\n  return deepAssign({}, {\n    options: {\n      geometryOptions: [],\n      meta: (_a = {}, _a[xField] = {\n        // 默认为 cat 类型\n        type: 'cat',\n        // x 轴一定是同步 scale 的\n        sync: true,\n        // 如果有没有柱子，则\n        range: allLine ? [0, 1] : undefined\n      }, _a),\n      tooltip: {\n        showMarkers: allLine,\n        // 存在柱状图，不显示 crosshairs\n        showCrosshairs: allLine,\n        shared: true,\n        crosshairs: {\n          type: 'x'\n        }\n      },\n      interactions: !allLine ? [{\n        type: 'legend-visible-filter'\n      }, {\n        type: 'active-region'\n      }] : [{\n        type: 'legend-visible-filter'\n      }],\n      legend: {\n        position: 'top-left'\n      }\n    }\n  }, params, {\n    options: {\n      // yAxis\n      yAxis: transformObjectToArray(yField, options.yAxis),\n      // geometryOptions\n      geometryOptions: [getGeometryOption(xField, yField[0], geometryOptions[0]), getGeometryOption(xField, yField[1], geometryOptions[1])],\n      // annotations\n      annotations: transformObjectToArray(yField, options.annotations)\n    }\n  });\n}\n/**\n * 创建 双轴图 中绘制图形的 view，提前创建是因为 theme 适配器的需要\n * @param params\n */\nfunction createViews(params) {\n  var _a, _b;\n  var chart = params.chart,\n    options = params.options;\n  var geometryOptions = options.geometryOptions;\n  var SORT_MAP = {\n    line: 0,\n    column: 1\n  };\n  // 包含配置，id，数据的结构\n  var geometries = [{\n    type: (_a = geometryOptions[0]) === null || _a === void 0 ? void 0 : _a.geometry,\n    id: LEFT_AXES_VIEW\n  }, {\n    type: (_b = geometryOptions[1]) === null || _b === void 0 ? void 0 : _b.geometry,\n    id: RIGHT_AXES_VIEW\n  }];\n  // 将线的 view 放置在更上一层，防止线柱遮挡。先柱后先\n  geometries.sort(function (a, b) {\n    return -SORT_MAP[a.type] + SORT_MAP[b.type];\n  }).forEach(function (g) {\n    return chart.createView({\n      id: g.id\n    });\n  });\n  return params;\n}\n/**\n * 绘制图形\n * @param params\n */\nfunction geometry(params) {\n  var chart = params.chart,\n    options = params.options;\n  var xField = options.xField,\n    yField = options.yField,\n    geometryOptions = options.geometryOptions,\n    data = options.data,\n    tooltip = options.tooltip;\n  // 包含配置，id，数据的结构\n  var geometries = [__assign(__assign({}, geometryOptions[0]), {\n    id: LEFT_AXES_VIEW,\n    data: data[0],\n    yField: yField[0]\n  }), __assign(__assign({}, geometryOptions[1]), {\n    id: RIGHT_AXES_VIEW,\n    data: data[1],\n    yField: yField[1]\n  })];\n  geometries.forEach(function (geometry) {\n    var id = geometry.id,\n      data = geometry.data,\n      yField = geometry.yField;\n    // 百分比柱状图需要额外处理一次数据\n    var isPercent = isColumn(geometry) && geometry.isPercent;\n    var formatData = isPercent ? percent(data, yField, xField, yField) : data;\n    var view = findViewById(chart, id).data(formatData);\n    var tooltipOptions = isPercent ? __assign({\n      formatter: function (datum) {\n        return {\n          name: datum[geometry.seriesField] || yField,\n          value: (Number(datum[yField]) * 100).toFixed(2) + '%'\n        };\n      }\n    }, tooltip) : tooltip;\n    // 绘制图形\n    drawSingleGeometry({\n      chart: view,\n      options: {\n        xField: xField,\n        yField: yField,\n        tooltip: tooltipOptions,\n        geometryOption: geometry\n      }\n    });\n  });\n  return params;\n}\nexport function color(params) {\n  var _a;\n  var chart = params.chart,\n    options = params.options;\n  var geometryOptions = options.geometryOptions;\n  var themeColor = ((_a = chart.getTheme()) === null || _a === void 0 ? void 0 : _a.colors10) || [];\n  var start = 0;\n  /* 为 geometry 添加默认 color。\n   * 1. 若 geometryOptions 存在 color，则在 drawGeometry 时已处理\n   * 2. 若 不存在 color，获取 Geometry group scales个数，在 theme color 10 中提取\n   * 3. 为防止 group 过多导致右色板无值或值很少，右 view 面板在依次提取剩下的 N 个 后再 concat 一次 themeColor\n   * 4. 为简便获取 Geometry group scales个数，在绘制完后再执行 color\n   * 5. 考虑之后将不同 view 使用同一个色板的需求沉淀到 g2\n   */\n  chart.once('beforepaint', function () {\n    each(geometryOptions, function (geometryOption, index) {\n      var view = findViewById(chart, index === 0 ? LEFT_AXES_VIEW : RIGHT_AXES_VIEW);\n      if (geometryOption.color) return;\n      var groupScale = view.getGroupScales();\n      var count = get(groupScale, [0, 'values', 'length'], 1);\n      var color = themeColor.slice(start, start + count).concat(index === 0 ? [] : themeColor);\n      view.geometries.forEach(function (geometry) {\n        if (geometryOption.seriesField) {\n          geometry.color(geometryOption.seriesField, color);\n        } else {\n          geometry.color(color[0]);\n        }\n      });\n      start += count;\n    });\n    chart.render(true);\n  });\n  return params;\n}\n/**\n * meta 配置\n * @param params\n */\nexport function meta(params) {\n  var _a, _b;\n  var chart = params.chart,\n    options = params.options;\n  var xAxis = options.xAxis,\n    yAxis = options.yAxis,\n    xField = options.xField,\n    yField = options.yField;\n  scale((_a = {}, _a[xField] = xAxis, _a[yField[0]] = yAxis[0], _a))(deepAssign({}, params, {\n    chart: findViewById(chart, LEFT_AXES_VIEW)\n  }));\n  scale((_b = {}, _b[xField] = xAxis, _b[yField[1]] = yAxis[1], _b))(deepAssign({}, params, {\n    chart: findViewById(chart, RIGHT_AXES_VIEW)\n  }));\n  return params;\n}\n/**\n * axis 配置\n * @param params\n */\nexport function axis(params) {\n  var chart = params.chart,\n    options = params.options;\n  var leftView = findViewById(chart, LEFT_AXES_VIEW);\n  var rightView = findViewById(chart, RIGHT_AXES_VIEW);\n  var xField = options.xField,\n    yField = options.yField,\n    xAxis = options.xAxis,\n    yAxis = options.yAxis;\n  chart.axis(xField, false);\n  chart.axis(yField[0], false);\n  chart.axis(yField[1], false);\n  // 左 View\n  leftView.axis(xField, xAxis);\n  leftView.axis(yField[0], getYAxisWithDefault(yAxis[0], AxisType.Left));\n  // 右 Y 轴\n  rightView.axis(xField, false);\n  rightView.axis(yField[1], getYAxisWithDefault(yAxis[1], AxisType.Right));\n  return params;\n}\n/**\n * tooltip 配置\n * @param params\n */\nexport function tooltip(params) {\n  var chart = params.chart,\n    options = params.options;\n  var tooltip = options.tooltip;\n  var leftView = findViewById(chart, LEFT_AXES_VIEW);\n  var rightView = findViewById(chart, RIGHT_AXES_VIEW);\n  // tooltip 经过 getDefaultOption 处理后，一定不为 undefined\n  chart.tooltip(tooltip);\n  // 在 view 上添加 tooltip，使得 shared 和 interaction active-region 起作用\n  // view 应该继承 chart 里的 shared，但是从表现看来，继承有点问题\n  leftView.tooltip({\n    shared: true\n  });\n  rightView.tooltip({\n    shared: true\n  });\n  return params;\n}\n/**\n * interaction 配置\n * @param params\n */\nexport function interaction(params) {\n  var chart = params.chart;\n  commonInteraction(deepAssign({}, params, {\n    chart: findViewById(chart, LEFT_AXES_VIEW)\n  }));\n  commonInteraction(deepAssign({}, params, {\n    chart: findViewById(chart, RIGHT_AXES_VIEW)\n  }));\n  return params;\n}\n/**\n * annotation 配置\n * @param params\n */\nexport function annotation(params) {\n  var chart = params.chart,\n    options = params.options;\n  var annotations = options.annotations;\n  var a1 = get(annotations, [0]);\n  var a2 = get(annotations, [1]);\n  commonAnnotation(a1)(deepAssign({}, params, {\n    chart: findViewById(chart, LEFT_AXES_VIEW),\n    options: {\n      annotations: a1\n    }\n  }));\n  commonAnnotation(a2)(deepAssign({}, params, {\n    chart: findViewById(chart, RIGHT_AXES_VIEW),\n    options: {\n      annotations: a2\n    }\n  }));\n  return params;\n}\nexport function theme(params) {\n  var chart = params.chart;\n  /*\n   * 双轴图中，部分组件是绘制在子 view 层（例如 axis，line），部分组件是绘制在 chart （例如 legend)\n   * 为 chart 和 子 view 均注册 theme，使其自行遵循 G2 theme geometry > view > chart 进行渲染。\n   */\n  commonTheme(deepAssign({}, params, {\n    chart: findViewById(chart, LEFT_AXES_VIEW)\n  }));\n  commonTheme(deepAssign({}, params, {\n    chart: findViewById(chart, RIGHT_AXES_VIEW)\n  }));\n  commonTheme(params);\n  return params;\n}\nexport function animation(params) {\n  var chart = params.chart;\n  commonAnimation(deepAssign({}, params, {\n    chart: findViewById(chart, LEFT_AXES_VIEW)\n  }));\n  commonAnimation(deepAssign({}, params, {\n    chart: findViewById(chart, RIGHT_AXES_VIEW)\n  }));\n  return params;\n}\n/**\n * 双轴图 limitInPlot\n * @param params\n */\nexport function limitInPlot(params) {\n  var chart = params.chart,\n    options = params.options;\n  var yAxis = options.yAxis;\n  commonLimitInPlot(deepAssign({}, params, {\n    chart: findViewById(chart, LEFT_AXES_VIEW),\n    options: {\n      yAxis: yAxis[0]\n    }\n  }));\n  commonLimitInPlot(deepAssign({}, params, {\n    chart: findViewById(chart, RIGHT_AXES_VIEW),\n    options: {\n      yAxis: yAxis[1]\n    }\n  }));\n  return params;\n}\n/**\n * legend 配置\n * 使用 custom，便于和类似于分组柱状图-单折线图的逻辑统一\n * @param params\n */\nexport function legend(params) {\n  var chart = params.chart,\n    options = params.options;\n  var legend = options.legend,\n    geometryOptions = options.geometryOptions,\n    yField = options.yField,\n    data = options.data;\n  var leftView = findViewById(chart, LEFT_AXES_VIEW);\n  var rightView = findViewById(chart, RIGHT_AXES_VIEW);\n  if (legend === false) {\n    chart.legend(false);\n  } else if (isObject(legend) && legend.custom === true) {\n    chart.legend(legend);\n  } else {\n    var leftLegend_1 = get(geometryOptions, [0, 'legend'], legend);\n    var rightLegend_1 = get(geometryOptions, [1, 'legend'], legend);\n    // 均使用自定义图例\n    chart.once('beforepaint', function () {\n      var leftItems = data[0].length ? getViewLegendItems({\n        view: leftView,\n        geometryOption: geometryOptions[0],\n        yField: yField[0],\n        legend: leftLegend_1\n      }) : [];\n      var rightItems = data[1].length ? getViewLegendItems({\n        view: rightView,\n        geometryOption: geometryOptions[1],\n        yField: yField[1],\n        legend: rightLegend_1\n      }) : [];\n      chart.legend(deepAssign({}, legend, {\n        custom: true,\n        // todo 修改类型定义\n        // @ts-ignore\n        items: leftItems.concat(rightItems)\n      }));\n    });\n    if (geometryOptions[0].seriesField) {\n      leftView.legend(geometryOptions[0].seriesField, leftLegend_1);\n    }\n    if (geometryOptions[1].seriesField) {\n      rightView.legend(geometryOptions[1].seriesField, rightLegend_1);\n    }\n    // 自定义图例交互\n    chart.on('legend-item:click', function (evt) {\n      var delegateObject = get(evt, 'gEvent.delegateObject', {});\n      if (delegateObject && delegateObject.item) {\n        var _a = delegateObject.item,\n          field_1 = _a.value,\n          isGeometry = _a.isGeometry,\n          viewId = _a.viewId;\n        // geometry 的时候，直接使用 view.changeVisible\n        if (isGeometry) {\n          var idx = findIndex(yField, function (yF) {\n            return yF === field_1;\n          });\n          if (idx > -1) {\n            var geometries = get(findViewById(chart, viewId), 'geometries');\n            each(geometries, function (g) {\n              g.changeVisible(!delegateObject.item.unchecked);\n            });\n          }\n        } else {\n          var legendItem_1 = get(chart.getController('legend'), 'option.items', []);\n          // 分组柱线图\n          each(chart.views, function (view) {\n            // 单折柱图\n            var groupScale = view.getGroupScales();\n            each(groupScale, function (scale) {\n              if (scale.values && scale.values.indexOf(field_1) > -1) {\n                view.filter(scale.field, function (value) {\n                  var curLegendItem = find(legendItem_1, function (item) {\n                    return item.value === value;\n                  });\n                  // 使用 legend 中的 unchecked 来判断，使得支持关闭多个图例\n                  return !curLegendItem.unchecked;\n                });\n              }\n            });\n            chart.render(true);\n          });\n        }\n      }\n    });\n  }\n  return params;\n}\n/**\n * 双轴图 slider 适配器\n * @param params\n */\nexport function slider(params) {\n  var chart = params.chart,\n    options = params.options;\n  var slider = options.slider;\n  var leftView = findViewById(chart, LEFT_AXES_VIEW);\n  var rightView = findViewById(chart, RIGHT_AXES_VIEW);\n  if (slider) {\n    // 左 View\n    leftView.option('slider', slider);\n    // 监听左侧 slider 改变事件， 同步右侧 View 视图\n    leftView.on('slider:valuechanged', function (evt) {\n      var _a = evt.event,\n        value = _a.value,\n        originValue = _a.originValue;\n      if (isEqual(value, originValue)) {\n        return;\n      }\n      doSliderFilter(rightView, value);\n    });\n    chart.once('afterpaint', function () {\n      // 初始化数据，配置默认值时需要同步\n      if (!isBoolean(slider)) {\n        var start = slider.start,\n          end = slider.end;\n        if (start || end) {\n          doSliderFilter(rightView, [start, end]);\n        }\n      }\n    });\n  }\n  return params;\n}\n/**\n * 双折线图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params) {\n  // transformOptions 一定在最前面处理；color legend 使用了 beforepaint，为便于理解放在最后面\n  return flow(transformOptions, createViews,\n  // 主题靠前设置，作为最低优先级\n  theme, geometry, meta, axis, limitInPlot, tooltip, interaction, annotation, animation, color, legend, slider)(params);\n}","map":{"version":3,"mappings":"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","names":["each","every","find","findIndex","get","isBoolean","isEqual","isObject","animation","commonAnimation","annotation","commonAnnotation","interaction","commonInteraction","limitInPlot","commonLimitInPlot","scale","theme","commonTheme","deepAssign","flow","percent","findViewById","LEFT_AXES_VIEW","RIGHT_AXES_VIEW","AxisType","DualAxesGeometry","drawSingleGeometry","getViewLegendItems","getGeometryOption","getYAxisWithDefault","isColumn","transformObjectToArray","doSliderFilter","transformOptions","params","options","geometryOptions","xField","yField","allLine","_a","geometry","Line","undefined","meta","type","sync","range","tooltip","showMarkers","showCrosshairs","shared","crosshairs","interactions","legend","position","yAxis","annotations","createViews","SORT_MAP","line","column","geometries","id","sort","a","b","forEach","g","createView","data","isPercent","formatData","view","chart","tooltipOptions","__assign","formatter","datum","name","seriesField","value","Number","toFixed","geometryOption","color","themeColor","getTheme","colors10","start","once","index","groupScale","getGroupScales","count","slice","concat","render","xAxis","_b","axis","leftView","rightView","Left","Right","a1","a2","custom","leftLegend_1","rightLegend_1","leftItems","length","rightItems","items","on","evt","delegateObject","item","field_1","isGeometry","viewId","idx","yF","changeVisible","unchecked","legendItem_1","getController","views","values","indexOf","filter","field","curLegendItem","slider","option","originValue","end","adaptor"],"sources":["/home/iam/Documents/LocalWeb-master/node_modules/@antv/g2plot/src/plots/dual-axes/adaptor.ts"],"sourcesContent":["import { Event, Scale, Types } from '@antv/g2';\nimport { each, every, find, findIndex, get, isBoolean, isEqual, isObject } from '@antv/util';\nimport {\n  animation as commonAnimation,\n  annotation as commonAnnotation,\n  interaction as commonInteraction,\n  limitInPlot as commonLimitInPlot,\n  scale,\n  theme as commonTheme,\n} from '../../adaptor/common';\nimport { Params } from '../../core/adaptor';\nimport { Datum } from '../../types';\nimport { deepAssign, flow } from '../../utils';\nimport { percent } from '../../utils/transform/percent';\nimport { findViewById } from '../../utils/view';\nimport { LEFT_AXES_VIEW, RIGHT_AXES_VIEW } from './constant';\nimport { AxisType, DualAxesGeometry, DualAxesOptions } from './types';\nimport { drawSingleGeometry } from './util/geometry';\nimport { getViewLegendItems } from './util/legend';\nimport { getGeometryOption, getYAxisWithDefault, isColumn, transformObjectToArray } from './util/option';\nimport { doSliderFilter } from './util/render-sider';\n\n/**\n * transformOptions，双轴图整体的取参逻辑如下\n * 1. get index getOptions: 对应的是默认的图表参数，如 appendPadding，syncView 等\n * 2. get adpator transformOption: 对应的是双轴图的默认参数，deepAssign 优先级从低到高如下\n *    2.1 defaultoption，如 tooltip，legend\n *    2.2 用户填写 options\n *    2.3 根据用户填写的 options 补充的数组型 options，如 yaxis，GeometryOption，因为 deepAssign 无法 assign 数组\n *\n * @param params\n */\nexport function transformOptions(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  const { options } = params;\n  const { geometryOptions = [], xField, yField } = options;\n  const allLine = every(\n    geometryOptions,\n    ({ geometry }) => geometry === DualAxesGeometry.Line || geometry === undefined\n  );\n  return deepAssign(\n    {},\n    {\n      options: {\n        geometryOptions: [],\n        meta: {\n          [xField]: {\n            // 默认为 cat 类型\n            type: 'cat',\n            // x 轴一定是同步 scale 的\n            sync: true,\n            // 如果有没有柱子，则\n            range: allLine ? [0, 1] : undefined,\n          },\n        },\n        tooltip: {\n          showMarkers: allLine,\n          // 存在柱状图，不显示 crosshairs\n          showCrosshairs: allLine,\n          shared: true,\n          crosshairs: {\n            type: 'x',\n          },\n        },\n        interactions: !allLine\n          ? [{ type: 'legend-visible-filter' }, { type: 'active-region' }]\n          : [{ type: 'legend-visible-filter' }],\n        legend: {\n          position: 'top-left',\n        },\n      },\n    },\n    params,\n    {\n      options: {\n        // yAxis\n        yAxis: transformObjectToArray(yField, options.yAxis),\n        // geometryOptions\n        geometryOptions: [\n          getGeometryOption(xField, yField[0], geometryOptions[0]),\n          getGeometryOption(xField, yField[1], geometryOptions[1]),\n        ],\n        // annotations\n        annotations: transformObjectToArray(yField, options.annotations),\n      },\n    }\n  );\n}\n\n/**\n * 创建 双轴图 中绘制图形的 view，提前创建是因为 theme 适配器的需要\n * @param params\n */\nfunction createViews(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  const { chart, options } = params;\n  const { geometryOptions } = options;\n\n  const SORT_MAP = { line: 0, column: 1 };\n\n  // 包含配置，id，数据的结构\n  const geometries = [\n    { type: geometryOptions[0]?.geometry, id: LEFT_AXES_VIEW },\n    { type: geometryOptions[1]?.geometry, id: RIGHT_AXES_VIEW },\n  ];\n\n  // 将线的 view 放置在更上一层，防止线柱遮挡。先柱后先\n  geometries.sort((a, b) => -SORT_MAP[a.type] + SORT_MAP[b.type]).forEach((g) => chart.createView({ id: g.id }));\n\n  return params;\n}\n\n/**\n * 绘制图形\n * @param params\n */\nfunction geometry(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  const { chart, options } = params;\n  const { xField, yField, geometryOptions, data, tooltip } = options;\n\n  // 包含配置，id，数据的结构\n  const geometries = [\n    { ...geometryOptions[0], id: LEFT_AXES_VIEW, data: data[0], yField: yField[0] },\n    { ...geometryOptions[1], id: RIGHT_AXES_VIEW, data: data[1], yField: yField[1] },\n  ];\n\n  geometries.forEach((geometry) => {\n    const { id, data, yField } = geometry;\n    // 百分比柱状图需要额外处理一次数据\n    const isPercent = isColumn(geometry) && geometry.isPercent;\n    const formatData = isPercent ? percent(data, yField, xField, yField) : data;\n    const view = findViewById(chart, id).data(formatData);\n\n    const tooltipOptions = isPercent\n      ? {\n          formatter: (datum: Datum) => ({\n            name: datum[geometry.seriesField] || yField,\n            value: (Number(datum[yField]) * 100).toFixed(2) + '%',\n          }),\n          ...tooltip,\n        }\n      : tooltip;\n\n    // 绘制图形\n    drawSingleGeometry({\n      chart: view,\n      options: {\n        xField,\n        yField,\n        tooltip: tooltipOptions,\n        geometryOption: geometry,\n      },\n    });\n  });\n  return params;\n}\n\nexport function color(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  const { chart, options } = params;\n  const { geometryOptions } = options;\n  const themeColor = chart.getTheme()?.colors10 || [];\n\n  let start = 0;\n  /* 为 geometry 添加默认 color。\n   * 1. 若 geometryOptions 存在 color，则在 drawGeometry 时已处理\n   * 2. 若 不存在 color，获取 Geometry group scales个数，在 theme color 10 中提取\n   * 3. 为防止 group 过多导致右色板无值或值很少，右 view 面板在依次提取剩下的 N 个 后再 concat 一次 themeColor\n   * 4. 为简便获取 Geometry group scales个数，在绘制完后再执行 color\n   * 5. 考虑之后将不同 view 使用同一个色板的需求沉淀到 g2\n   */\n  chart.once('beforepaint', () => {\n    each(geometryOptions, (geometryOption, index) => {\n      const view = findViewById(chart, index === 0 ? LEFT_AXES_VIEW : RIGHT_AXES_VIEW);\n      if (geometryOption.color) return;\n      const groupScale = view.getGroupScales();\n      const count = get(groupScale, [0, 'values', 'length'], 1);\n      const color = themeColor.slice(start, start + count).concat(index === 0 ? [] : themeColor);\n      view.geometries.forEach((geometry) => {\n        if (geometryOption.seriesField) {\n          geometry.color(geometryOption.seriesField, color);\n        } else {\n          geometry.color(color[0]);\n        }\n      });\n      start += count;\n    });\n    chart.render(true);\n  });\n\n  return params;\n}\n\n/**\n * meta 配置\n * @param params\n */\nexport function meta(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  const { chart, options } = params;\n  const { xAxis, yAxis, xField, yField } = options;\n\n  scale({\n    [xField]: xAxis,\n    [yField[0]]: yAxis[0],\n  })(deepAssign({}, params, { chart: findViewById(chart, LEFT_AXES_VIEW) }));\n\n  scale({\n    [xField]: xAxis,\n    [yField[1]]: yAxis[1],\n  })(deepAssign({}, params, { chart: findViewById(chart, RIGHT_AXES_VIEW) }));\n\n  return params;\n}\n\n/**\n * axis 配置\n * @param params\n */\nexport function axis(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  const { chart, options } = params;\n  const leftView = findViewById(chart, LEFT_AXES_VIEW);\n  const rightView = findViewById(chart, RIGHT_AXES_VIEW);\n  const { xField, yField, xAxis, yAxis } = options;\n\n  chart.axis(xField, false);\n  chart.axis(yField[0], false);\n  chart.axis(yField[1], false);\n\n  // 左 View\n  leftView.axis(xField, xAxis);\n  leftView.axis(yField[0], getYAxisWithDefault(yAxis[0], AxisType.Left));\n\n  // 右 Y 轴\n  rightView.axis(xField, false);\n  rightView.axis(yField[1], getYAxisWithDefault(yAxis[1], AxisType.Right));\n\n  return params;\n}\n\n/**\n * tooltip 配置\n * @param params\n */\nexport function tooltip(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  const { chart, options } = params;\n  const { tooltip } = options;\n  const leftView = findViewById(chart, LEFT_AXES_VIEW);\n  const rightView = findViewById(chart, RIGHT_AXES_VIEW);\n  // tooltip 经过 getDefaultOption 处理后，一定不为 undefined\n  chart.tooltip(tooltip);\n  // 在 view 上添加 tooltip，使得 shared 和 interaction active-region 起作用\n  // view 应该继承 chart 里的 shared，但是从表现看来，继承有点问题\n  leftView.tooltip({\n    shared: true,\n  });\n  rightView.tooltip({\n    shared: true,\n  });\n  return params;\n}\n\n/**\n * interaction 配置\n * @param params\n */\nexport function interaction(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  const { chart } = params;\n\n  commonInteraction(deepAssign({}, params, { chart: findViewById(chart, LEFT_AXES_VIEW) }));\n  commonInteraction(deepAssign({}, params, { chart: findViewById(chart, RIGHT_AXES_VIEW) }));\n\n  return params;\n}\n\n/**\n * annotation 配置\n * @param params\n */\nexport function annotation(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  const { chart, options } = params;\n  const { annotations } = options;\n\n  const a1 = get(annotations, [0]);\n  const a2 = get(annotations, [1]);\n\n  commonAnnotation(a1)(\n    deepAssign({}, params, {\n      chart: findViewById(chart, LEFT_AXES_VIEW),\n      options: {\n        annotations: a1,\n      },\n    })\n  );\n  commonAnnotation(a2)(\n    deepAssign({}, params, {\n      chart: findViewById(chart, RIGHT_AXES_VIEW),\n      options: {\n        annotations: a2,\n      },\n    })\n  );\n  return params;\n}\n\nexport function theme(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  const { chart } = params;\n\n  /*\n   * 双轴图中，部分组件是绘制在子 view 层（例如 axis，line），部分组件是绘制在 chart （例如 legend)\n   * 为 chart 和 子 view 均注册 theme，使其自行遵循 G2 theme geometry > view > chart 进行渲染。\n   */\n  commonTheme(deepAssign({}, params, { chart: findViewById(chart, LEFT_AXES_VIEW) }));\n  commonTheme(deepAssign({}, params, { chart: findViewById(chart, RIGHT_AXES_VIEW) }));\n  commonTheme(params);\n\n  return params;\n}\n\nexport function animation(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  const { chart } = params;\n\n  commonAnimation(deepAssign({}, params, { chart: findViewById(chart, LEFT_AXES_VIEW) }));\n  commonAnimation(deepAssign({}, params, { chart: findViewById(chart, RIGHT_AXES_VIEW) }));\n\n  return params;\n}\n\n/**\n * 双轴图 limitInPlot\n * @param params\n */\nexport function limitInPlot(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  const { chart, options } = params;\n  const { yAxis } = options;\n\n  commonLimitInPlot(\n    deepAssign({}, params, {\n      chart: findViewById(chart, LEFT_AXES_VIEW),\n      options: {\n        yAxis: yAxis[0],\n      },\n    })\n  );\n\n  commonLimitInPlot(\n    deepAssign({}, params, {\n      chart: findViewById(chart, RIGHT_AXES_VIEW),\n      options: {\n        yAxis: yAxis[1],\n      },\n    })\n  );\n\n  return params;\n}\n\n/**\n * legend 配置\n * 使用 custom，便于和类似于分组柱状图-单折线图的逻辑统一\n * @param params\n */\nexport function legend(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  const { chart, options } = params;\n  const { legend, geometryOptions, yField, data } = options;\n  const leftView = findViewById(chart, LEFT_AXES_VIEW);\n  const rightView = findViewById(chart, RIGHT_AXES_VIEW);\n\n  if (legend === false) {\n    chart.legend(false);\n  } else if (isObject(legend) && legend.custom === true) {\n    chart.legend(legend);\n  } else {\n    const leftLegend = get(geometryOptions, [0, 'legend'], legend);\n    const rightLegend = get(geometryOptions, [1, 'legend'], legend);\n    // 均使用自定义图例\n    chart.once('beforepaint', () => {\n      const leftItems = data[0].length\n        ? getViewLegendItems({\n            view: leftView,\n            geometryOption: geometryOptions[0],\n            yField: yField[0],\n            legend: leftLegend,\n          })\n        : [];\n\n      const rightItems = data[1].length\n        ? getViewLegendItems({\n            view: rightView,\n            geometryOption: geometryOptions[1],\n            yField: yField[1],\n            legend: rightLegend,\n          })\n        : [];\n\n      chart.legend(\n        deepAssign({}, legend, {\n          custom: true,\n          // todo 修改类型定义\n          // @ts-ignore\n          items: leftItems.concat(rightItems),\n        })\n      );\n    });\n\n    if (geometryOptions[0].seriesField) {\n      leftView.legend(geometryOptions[0].seriesField, leftLegend);\n    }\n    if (geometryOptions[1].seriesField) {\n      rightView.legend(geometryOptions[1].seriesField, rightLegend);\n    }\n\n    // 自定义图例交互\n    chart.on('legend-item:click', (evt) => {\n      const delegateObject = get(evt, 'gEvent.delegateObject', {});\n      if (delegateObject && delegateObject.item) {\n        const { value: field, isGeometry, viewId } = delegateObject.item;\n        // geometry 的时候，直接使用 view.changeVisible\n        if (isGeometry) {\n          const idx = findIndex(yField, (yF: string) => yF === field);\n          if (idx > -1) {\n            const geometries = get(findViewById(chart, viewId), 'geometries');\n            each(geometries, (g) => {\n              g.changeVisible(!delegateObject.item.unchecked);\n            });\n          }\n        } else {\n          const legendItem = get(chart.getController('legend'), 'option.items', []);\n          // 分组柱线图\n          each(chart.views, (view) => {\n            // 单折柱图\n            const groupScale = view.getGroupScales();\n            each(groupScale, (scale: Scale) => {\n              if (scale.values && scale.values.indexOf(field) > -1) {\n                view.filter(scale.field, (value) => {\n                  const curLegendItem: Types.LegendItem = find(\n                    legendItem,\n                    (item: Types.LegendItem) => item.value === value\n                  );\n                  // 使用 legend 中的 unchecked 来判断，使得支持关闭多个图例\n                  return !curLegendItem.unchecked;\n                });\n              }\n            });\n            chart.render(true);\n          });\n        }\n      }\n    });\n  }\n\n  return params;\n}\n\n/**\n * 双轴图 slider 适配器\n * @param params\n */\nexport function slider(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  const { chart, options } = params;\n  const { slider } = options;\n  const leftView = findViewById(chart, LEFT_AXES_VIEW);\n  const rightView = findViewById(chart, RIGHT_AXES_VIEW);\n  if (slider) {\n    // 左 View\n    leftView.option('slider', slider);\n    // 监听左侧 slider 改变事件， 同步右侧 View 视图\n    leftView.on('slider:valuechanged', (evt: Event) => {\n      const {\n        event: { value, originValue },\n      } = evt;\n      if (isEqual(value, originValue)) {\n        return;\n      }\n      doSliderFilter(rightView, value);\n    });\n    chart.once('afterpaint', () => {\n      // 初始化数据，配置默认值时需要同步\n      if (!isBoolean(slider)) {\n        const { start, end } = slider;\n        if (start || end) {\n          doSliderFilter(rightView, [start, end]);\n        }\n      }\n    });\n  }\n\n  return params;\n}\n\n/**\n * 双折线图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<DualAxesOptions>): Params<DualAxesOptions> {\n  // transformOptions 一定在最前面处理；color legend 使用了 beforepaint，为便于理解放在最后面\n  return flow(\n    transformOptions,\n    createViews,\n    // 主题靠前设置，作为最低优先级\n    theme,\n    geometry,\n    meta,\n    axis,\n    limitInPlot,\n    tooltip,\n    interaction,\n    annotation,\n    animation,\n    color,\n    legend,\n    slider\n  )(params);\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}