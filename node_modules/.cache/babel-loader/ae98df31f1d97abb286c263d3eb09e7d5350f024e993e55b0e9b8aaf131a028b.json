{"ast":null,"code":"import { __assign, __read, __spreadArray } from \"tslib\";\nimport { each, isNil, some } from '@antv/util';\nimport { getCoordinate } from '../../dependents';\n/**\n * coordinate controller，职责：\n * 1. 创建实例\n * 2. 暂存配置\n */\nvar CoordinateController = /** @class */function () {\n  function CoordinateController(option) {\n    // 设置默认值，并存储配置\n    this.option = this.wrapperOption(option);\n  }\n  /**\n   * 更新配置\n   * @param option\n   */\n  CoordinateController.prototype.update = function (option) {\n    this.option = this.wrapperOption(option);\n    return this;\n  };\n  /**\n   * 是否存在某一个 action\n   * @param actionName\n   */\n  CoordinateController.prototype.hasAction = function (actionName) {\n    var actions = this.option.actions;\n    return some(actions, function (action) {\n      return action[0] === actionName;\n    });\n  };\n  /**\n   * 创建坐标系对象\n   * @param start 起始位置\n   * @param end   结束位置\n   * @return 坐标系实例\n   */\n  CoordinateController.prototype.create = function (start, end) {\n    var _a = this.option,\n      type = _a.type,\n      cfg = _a.cfg;\n    var isTheta = type === 'theta';\n    // 1. 起始位置\n    var props = __assign({\n      start: start,\n      end: end\n    }, cfg);\n    // 2. 创建实例\n    var C = getCoordinate(isTheta ? 'polar' : type);\n    this.coordinate = new C(props);\n    // @ts-ignore FIXME coordinate 包问题导致 type 不正确\n    this.coordinate.type = type;\n    // 3. 添加默认 action\n    if (isTheta) {\n      // 不存在 transpose，为其自动设置一个 action\n      if (!this.hasAction('transpose')) {\n        this.transpose();\n      }\n    }\n    // 4. 执行 action\n    this.execActions();\n    return this.coordinate;\n  };\n  /**\n   * 更新坐标系对象\n   * @param start 起始位置\n   * @param end   结束位置\n   * @return 坐标系实例\n   */\n  CoordinateController.prototype.adjust = function (start, end) {\n    this.coordinate.update({\n      start: start,\n      end: end\n    });\n    // 更新坐标系大小的时候，需要：\n    // 1. 重置 matrix\n    // 2. 重新执行作用于 matrix 的 action\n    this.coordinate.resetMatrix();\n    this.execActions(['scale', 'rotate', 'translate']);\n    return this.coordinate;\n  };\n  /**\n   * 旋转弧度\n   * @param angle\n   */\n  CoordinateController.prototype.rotate = function (angle) {\n    this.option.actions.push(['rotate', angle]);\n    return this;\n  };\n  /**\n   * 镜像\n   * @param dim\n   */\n  CoordinateController.prototype.reflect = function (dim) {\n    this.option.actions.push(['reflect', dim]);\n    return this;\n  };\n  /**\n   * scale\n   * @param sx\n   * @param sy\n   */\n  CoordinateController.prototype.scale = function (sx, sy) {\n    this.option.actions.push(['scale', sx, sy]);\n    return this;\n  };\n  /**\n   * 对角变换\n   */\n  CoordinateController.prototype.transpose = function () {\n    this.option.actions.push(['transpose']);\n    return this;\n  };\n  /**\n   * 获取配置\n   */\n  CoordinateController.prototype.getOption = function () {\n    return this.option;\n  };\n  /**\n   * 获得 coordinate 实例\n   */\n  CoordinateController.prototype.getCoordinate = function () {\n    return this.coordinate;\n  };\n  /**\n   * 包装配置的默认值\n   * @param option\n   */\n  CoordinateController.prototype.wrapperOption = function (option) {\n    return __assign({\n      type: 'rect',\n      actions: [],\n      cfg: {}\n    }, option);\n  };\n  /**\n   * coordinate 实例执行 actions\n   * @params includeActions 如果没有指定，则执行全部，否则，执行指定的 action\n   */\n  CoordinateController.prototype.execActions = function (includeActions) {\n    var _this = this;\n    var actions = this.option.actions;\n    each(actions, function (action) {\n      var _a;\n      var _b = __read(action),\n        actionName = _b[0],\n        args = _b.slice(1);\n      var shouldExec = isNil(includeActions) ? true : includeActions.includes(actionName);\n      if (shouldExec) {\n        (_a = _this.coordinate)[actionName].apply(_a, __spreadArray([], __read(args), false));\n      }\n    });\n  };\n  return CoordinateController;\n}();\nexport default CoordinateController;","map":{"version":3,"mappings":"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","names":["each","isNil","some","getCoordinate","option","wrapperOption","CoordinateController","actionName","actions","action","start","end","type","cfg","isTheta","props","C","coordinate","hasAction","transpose","execActions","update","resetMatrix","angle","push","dim","sx","sy","includeActions","args","shouldExec","includes"],"sources":["/home/iam/Documents/LocalWeb-master/node_modules/@antv/g2/src/chart/controller/coordinate.ts"],"sourcesContent":["import { each, isNil, some } from '@antv/util';\nimport { Coordinate, getCoordinate, Point } from '../../dependents';\nimport { CoordinateOption } from '../../interface';\n\n/**\n * coordinate controller，职责：\n * 1. 创建实例\n * 2. 暂存配置\n */\nexport default class CoordinateController {\n  private option: CoordinateOption;\n  private coordinate: Coordinate;\n\n  constructor(option?: CoordinateOption) {\n    // 设置默认值，并存储配置\n    this.option = this.wrapperOption(option);\n  }\n\n  /**\n   * 更新配置\n   * @param option\n   */\n  public update(option: CoordinateOption) {\n    this.option = this.wrapperOption(option);\n    return this;\n  }\n\n  /**\n   * 是否存在某一个 action\n   * @param actionName\n   */\n  public hasAction(actionName: string) {\n    const { actions } = this.option;\n\n    return some(actions, (action) => action[0] === actionName);\n  }\n  /**\n   * 创建坐标系对象\n   * @param start 起始位置\n   * @param end   结束位置\n   * @return 坐标系实例\n   */\n  public create(start: Point, end: Point) {\n    const { type, cfg } = this.option;\n    const isTheta = type === 'theta';\n\n    // 1. 起始位置\n    const props = {\n      start,\n      end,\n      ...cfg,\n    };\n\n    // 2. 创建实例\n    const C = getCoordinate(isTheta ? 'polar' : type);\n\n    this.coordinate = new C(props);\n\n    // @ts-ignore FIXME coordinate 包问题导致 type 不正确\n    this.coordinate.type = type;\n\n    // 3. 添加默认 action\n    if (isTheta) {\n      // 不存在 transpose，为其自动设置一个 action\n      if (!this.hasAction('transpose')) {\n        this.transpose();\n      }\n    }\n\n    // 4. 执行 action\n    this.execActions();\n\n    return this.coordinate;\n  }\n\n  /**\n   * 更新坐标系对象\n   * @param start 起始位置\n   * @param end   结束位置\n   * @return 坐标系实例\n   */\n  public adjust(start: Point, end: Point) {\n    this.coordinate.update({\n      start,\n      end,\n    });\n\n    // 更新坐标系大小的时候，需要：\n    // 1. 重置 matrix\n    // 2. 重新执行作用于 matrix 的 action\n    this.coordinate.resetMatrix();\n    this.execActions(['scale', 'rotate', 'translate']);\n\n    return this.coordinate;\n  }\n\n  /**\n   * 旋转弧度\n   * @param angle\n   */\n  public rotate(angle: number) {\n    this.option.actions.push(['rotate', angle]);\n    return this;\n  }\n\n  /**\n   * 镜像\n   * @param dim\n   */\n  public reflect(dim: 'x' | 'y') {\n    this.option.actions.push(['reflect', dim]);\n    return this;\n  }\n\n  /**\n   * scale\n   * @param sx\n   * @param sy\n   */\n  public scale(sx: number, sy: number) {\n    this.option.actions.push(['scale', sx, sy]);\n    return this;\n  }\n\n  /**\n   * 对角变换\n   */\n  public transpose() {\n    this.option.actions.push(['transpose']);\n    return this;\n  }\n\n  /**\n   * 获取配置\n   */\n  public getOption(): CoordinateOption {\n    return this.option;\n  }\n\n  /**\n   * 获得 coordinate 实例\n   */\n  public getCoordinate() {\n    return this.coordinate;\n  }\n\n  /**\n   * 包装配置的默认值\n   * @param option\n   */\n  private wrapperOption(option: CoordinateOption): CoordinateOption {\n    return {\n      type: 'rect',\n      actions: [],\n      cfg: {},\n      ...option,\n    };\n  }\n\n  /**\n   * coordinate 实例执行 actions\n   * @params includeActions 如果没有指定，则执行全部，否则，执行指定的 action\n   */\n  private execActions(includeActions?: string[]) {\n    const { actions } = this.option;\n\n    each(actions, (action) => {\n      const [actionName, ...args] = action;\n\n      const shouldExec = isNil(includeActions) ? true : includeActions.includes(actionName);\n\n      if (shouldExec) {\n        this.coordinate[actionName](...args);\n      }\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}