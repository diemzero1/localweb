{"ast":null,"code":"import _classCallCheck from \"/home/iam/Documents/LocalWeb-master/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/iam/Documents/LocalWeb-master/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\nimport { hypotenuse } from './util';\nvar SingularValueDecomposition = /*#__PURE__*/function () {\n  function SingularValueDecomposition(value) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, SingularValueDecomposition);\n    value = WrapperMatrix2D.checkMatrix(value);\n    if (value.isEmpty()) {\n      throw new Error('Matrix must be non-empty');\n    }\n    var m = value.rows;\n    var n = value.columns;\n    var _options$computeLeftS = options.computeLeftSingularVectors,\n      computeLeftSingularVectors = _options$computeLeftS === void 0 ? true : _options$computeLeftS,\n      _options$computeRight = options.computeRightSingularVectors,\n      computeRightSingularVectors = _options$computeRight === void 0 ? true : _options$computeRight,\n      _options$autoTranspos = options.autoTranspose,\n      autoTranspose = _options$autoTranspos === void 0 ? false : _options$autoTranspos;\n    var wantu = Boolean(computeLeftSingularVectors);\n    var wantv = Boolean(computeRightSingularVectors);\n    var swapped = false;\n    var a;\n    if (m < n) {\n      if (!autoTranspose) {\n        a = value.clone();\n        // eslint-disable-next-line no-console\n        console.warn('Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose');\n      } else {\n        a = value.transpose();\n        m = a.rows;\n        n = a.columns;\n        swapped = true;\n        var aux = wantu;\n        wantu = wantv;\n        wantv = aux;\n      }\n    } else {\n      a = value.clone();\n    }\n    var nu = Math.min(m, n);\n    var ni = Math.min(m + 1, n);\n    var s = new Float64Array(ni);\n    var U = new Matrix(m, nu);\n    var V = new Matrix(n, n);\n    var e = new Float64Array(n);\n    var work = new Float64Array(m);\n    var si = new Float64Array(ni);\n    for (var i = 0; i < ni; i++) {\n      si[i] = i;\n    }\n    var nct = Math.min(m - 1, n);\n    var nrt = Math.max(0, Math.min(n - 2, m));\n    var mrc = Math.max(nct, nrt);\n    for (var k = 0; k < mrc; k++) {\n      if (k < nct) {\n        s[k] = 0;\n        for (var _i = k; _i < m; _i++) {\n          s[k] = hypotenuse(s[k], a.get(_i, k));\n        }\n        if (s[k] !== 0) {\n          if (a.get(k, k) < 0) {\n            s[k] = -s[k];\n          }\n          for (var _i2 = k; _i2 < m; _i2++) {\n            a.set(_i2, k, a.get(_i2, k) / s[k]);\n          }\n          a.set(k, k, a.get(k, k) + 1);\n        }\n        s[k] = -s[k];\n      }\n      for (var j = k + 1; j < n; j++) {\n        if (k < nct && s[k] !== 0) {\n          var t = 0;\n          for (var _i3 = k; _i3 < m; _i3++) {\n            t += a.get(_i3, k) * a.get(_i3, j);\n          }\n          t = -t / a.get(k, k);\n          for (var _i4 = k; _i4 < m; _i4++) {\n            a.set(_i4, j, a.get(_i4, j) + t * a.get(_i4, k));\n          }\n        }\n        e[j] = a.get(k, j);\n      }\n      if (wantu && k < nct) {\n        for (var _i5 = k; _i5 < m; _i5++) {\n          U.set(_i5, k, a.get(_i5, k));\n        }\n      }\n      if (k < nrt) {\n        e[k] = 0;\n        for (var _i6 = k + 1; _i6 < n; _i6++) {\n          e[k] = hypotenuse(e[k], e[_i6]);\n        }\n        if (e[k] !== 0) {\n          if (e[k + 1] < 0) {\n            e[k] = 0 - e[k];\n          }\n          for (var _i7 = k + 1; _i7 < n; _i7++) {\n            e[_i7] /= e[k];\n          }\n          e[k + 1] += 1;\n        }\n        e[k] = -e[k];\n        if (k + 1 < m && e[k] !== 0) {\n          for (var _i8 = k + 1; _i8 < m; _i8++) {\n            work[_i8] = 0;\n          }\n          for (var _i9 = k + 1; _i9 < m; _i9++) {\n            for (var _j = k + 1; _j < n; _j++) {\n              work[_i9] += e[_j] * a.get(_i9, _j);\n            }\n          }\n          for (var _j2 = k + 1; _j2 < n; _j2++) {\n            var _t = -e[_j2] / e[k + 1];\n            for (var _i10 = k + 1; _i10 < m; _i10++) {\n              a.set(_i10, _j2, a.get(_i10, _j2) + _t * work[_i10]);\n            }\n          }\n        }\n        if (wantv) {\n          for (var _i11 = k + 1; _i11 < n; _i11++) {\n            V.set(_i11, k, e[_i11]);\n          }\n        }\n      }\n    }\n    var p = Math.min(n, m + 1);\n    if (nct < n) {\n      s[nct] = a.get(nct, nct);\n    }\n    if (m < p) {\n      s[p - 1] = 0;\n    }\n    if (nrt + 1 < p) {\n      e[nrt] = a.get(nrt, p - 1);\n    }\n    e[p - 1] = 0;\n    if (wantu) {\n      for (var _j3 = nct; _j3 < nu; _j3++) {\n        for (var _i12 = 0; _i12 < m; _i12++) {\n          U.set(_i12, _j3, 0);\n        }\n        U.set(_j3, _j3, 1);\n      }\n      for (var _k = nct - 1; _k >= 0; _k--) {\n        if (s[_k] !== 0) {\n          for (var _j4 = _k + 1; _j4 < nu; _j4++) {\n            var _t2 = 0;\n            for (var _i13 = _k; _i13 < m; _i13++) {\n              _t2 += U.get(_i13, _k) * U.get(_i13, _j4);\n            }\n            _t2 = -_t2 / U.get(_k, _k);\n            for (var _i14 = _k; _i14 < m; _i14++) {\n              U.set(_i14, _j4, U.get(_i14, _j4) + _t2 * U.get(_i14, _k));\n            }\n          }\n          for (var _i15 = _k; _i15 < m; _i15++) {\n            U.set(_i15, _k, -U.get(_i15, _k));\n          }\n          U.set(_k, _k, 1 + U.get(_k, _k));\n          for (var _i16 = 0; _i16 < _k - 1; _i16++) {\n            U.set(_i16, _k, 0);\n          }\n        } else {\n          for (var _i17 = 0; _i17 < m; _i17++) {\n            U.set(_i17, _k, 0);\n          }\n          U.set(_k, _k, 1);\n        }\n      }\n    }\n    if (wantv) {\n      for (var _k2 = n - 1; _k2 >= 0; _k2--) {\n        if (_k2 < nrt && e[_k2] !== 0) {\n          for (var _j5 = _k2 + 1; _j5 < n; _j5++) {\n            var _t3 = 0;\n            for (var _i18 = _k2 + 1; _i18 < n; _i18++) {\n              _t3 += V.get(_i18, _k2) * V.get(_i18, _j5);\n            }\n            _t3 = -_t3 / V.get(_k2 + 1, _k2);\n            for (var _i19 = _k2 + 1; _i19 < n; _i19++) {\n              V.set(_i19, _j5, V.get(_i19, _j5) + _t3 * V.get(_i19, _k2));\n            }\n          }\n        }\n        for (var _i20 = 0; _i20 < n; _i20++) {\n          V.set(_i20, _k2, 0);\n        }\n        V.set(_k2, _k2, 1);\n      }\n    }\n    var pp = p - 1;\n    var iter = 0;\n    var eps = Number.EPSILON;\n    while (p > 0) {\n      var _k3 = void 0,\n        kase = void 0;\n      for (_k3 = p - 2; _k3 >= -1; _k3--) {\n        if (_k3 === -1) {\n          break;\n        }\n        var alpha = Number.MIN_VALUE + eps * Math.abs(s[_k3] + Math.abs(s[_k3 + 1]));\n        if (Math.abs(e[_k3]) <= alpha || Number.isNaN(e[_k3])) {\n          e[_k3] = 0;\n          break;\n        }\n      }\n      if (_k3 === p - 2) {\n        kase = 4;\n      } else {\n        var ks = void 0;\n        for (ks = p - 1; ks >= _k3; ks--) {\n          if (ks === _k3) {\n            break;\n          }\n          var _t4 = (ks !== p ? Math.abs(e[ks]) : 0) + (ks !== _k3 + 1 ? Math.abs(e[ks - 1]) : 0);\n          if (Math.abs(s[ks]) <= eps * _t4) {\n            s[ks] = 0;\n            break;\n          }\n        }\n        if (ks === _k3) {\n          kase = 3;\n        } else if (ks === p - 1) {\n          kase = 1;\n        } else {\n          kase = 2;\n          _k3 = ks;\n        }\n      }\n      _k3++;\n      switch (kase) {\n        case 1:\n          {\n            var f = e[p - 2];\n            e[p - 2] = 0;\n            for (var _j6 = p - 2; _j6 >= _k3; _j6--) {\n              var _t5 = hypotenuse(s[_j6], f);\n              var cs = s[_j6] / _t5;\n              var sn = f / _t5;\n              s[_j6] = _t5;\n              if (_j6 !== _k3) {\n                f = -sn * e[_j6 - 1];\n                e[_j6 - 1] = cs * e[_j6 - 1];\n              }\n              if (wantv) {\n                for (var _i21 = 0; _i21 < n; _i21++) {\n                  _t5 = cs * V.get(_i21, _j6) + sn * V.get(_i21, p - 1);\n                  V.set(_i21, p - 1, -sn * V.get(_i21, _j6) + cs * V.get(_i21, p - 1));\n                  V.set(_i21, _j6, _t5);\n                }\n              }\n            }\n            break;\n          }\n        case 2:\n          {\n            var _f = e[_k3 - 1];\n            e[_k3 - 1] = 0;\n            for (var _j7 = _k3; _j7 < p; _j7++) {\n              var _t6 = hypotenuse(s[_j7], _f);\n              var _cs = s[_j7] / _t6;\n              var _sn = _f / _t6;\n              s[_j7] = _t6;\n              _f = -_sn * e[_j7];\n              e[_j7] = _cs * e[_j7];\n              if (wantu) {\n                for (var _i22 = 0; _i22 < m; _i22++) {\n                  _t6 = _cs * U.get(_i22, _j7) + _sn * U.get(_i22, _k3 - 1);\n                  U.set(_i22, _k3 - 1, -_sn * U.get(_i22, _j7) + _cs * U.get(_i22, _k3 - 1));\n                  U.set(_i22, _j7, _t6);\n                }\n              }\n            }\n            break;\n          }\n        case 3:\n          {\n            var scale = Math.max(Math.abs(s[p - 1]), Math.abs(s[p - 2]), Math.abs(e[p - 2]), Math.abs(s[_k3]), Math.abs(e[_k3]));\n            var sp = s[p - 1] / scale;\n            var spm1 = s[p - 2] / scale;\n            var epm1 = e[p - 2] / scale;\n            var sk = s[_k3] / scale;\n            var ek = e[_k3] / scale;\n            var b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\n            var c = sp * epm1 * (sp * epm1);\n            var shift = 0;\n            if (b !== 0 || c !== 0) {\n              if (b < 0) {\n                shift = 0 - Math.sqrt(b * b + c);\n              } else {\n                shift = Math.sqrt(b * b + c);\n              }\n              shift = c / (b + shift);\n            }\n            var _f2 = (sk + sp) * (sk - sp) + shift;\n            var g = sk * ek;\n            for (var _j8 = _k3; _j8 < p - 1; _j8++) {\n              var _t7 = hypotenuse(_f2, g);\n              if (_t7 === 0) _t7 = Number.MIN_VALUE;\n              var _cs2 = _f2 / _t7;\n              var _sn2 = g / _t7;\n              if (_j8 !== _k3) {\n                e[_j8 - 1] = _t7;\n              }\n              _f2 = _cs2 * s[_j8] + _sn2 * e[_j8];\n              e[_j8] = _cs2 * e[_j8] - _sn2 * s[_j8];\n              g = _sn2 * s[_j8 + 1];\n              s[_j8 + 1] = _cs2 * s[_j8 + 1];\n              if (wantv) {\n                for (var _i23 = 0; _i23 < n; _i23++) {\n                  _t7 = _cs2 * V.get(_i23, _j8) + _sn2 * V.get(_i23, _j8 + 1);\n                  V.set(_i23, _j8 + 1, -_sn2 * V.get(_i23, _j8) + _cs2 * V.get(_i23, _j8 + 1));\n                  V.set(_i23, _j8, _t7);\n                }\n              }\n              _t7 = hypotenuse(_f2, g);\n              if (_t7 === 0) _t7 = Number.MIN_VALUE;\n              _cs2 = _f2 / _t7;\n              _sn2 = g / _t7;\n              s[_j8] = _t7;\n              _f2 = _cs2 * e[_j8] + _sn2 * s[_j8 + 1];\n              s[_j8 + 1] = -_sn2 * e[_j8] + _cs2 * s[_j8 + 1];\n              g = _sn2 * e[_j8 + 1];\n              e[_j8 + 1] = _cs2 * e[_j8 + 1];\n              if (wantu && _j8 < m - 1) {\n                for (var _i24 = 0; _i24 < m; _i24++) {\n                  _t7 = _cs2 * U.get(_i24, _j8) + _sn2 * U.get(_i24, _j8 + 1);\n                  U.set(_i24, _j8 + 1, -_sn2 * U.get(_i24, _j8) + _cs2 * U.get(_i24, _j8 + 1));\n                  U.set(_i24, _j8, _t7);\n                }\n              }\n            }\n            e[p - 2] = _f2;\n            iter = iter + 1;\n            break;\n          }\n        case 4:\n          {\n            if (s[_k3] <= 0) {\n              s[_k3] = s[_k3] < 0 ? -s[_k3] : 0;\n              if (wantv) {\n                for (var _i25 = 0; _i25 <= pp; _i25++) {\n                  V.set(_i25, _k3, -V.get(_i25, _k3));\n                }\n              }\n            }\n            while (_k3 < pp) {\n              if (s[_k3] >= s[_k3 + 1]) {\n                break;\n              }\n              var _t8 = s[_k3];\n              s[_k3] = s[_k3 + 1];\n              s[_k3 + 1] = _t8;\n              if (wantv && _k3 < n - 1) {\n                for (var _i26 = 0; _i26 < n; _i26++) {\n                  _t8 = V.get(_i26, _k3 + 1);\n                  V.set(_i26, _k3 + 1, V.get(_i26, _k3));\n                  V.set(_i26, _k3, _t8);\n                }\n              }\n              if (wantu && _k3 < m - 1) {\n                for (var _i27 = 0; _i27 < m; _i27++) {\n                  _t8 = U.get(_i27, _k3 + 1);\n                  U.set(_i27, _k3 + 1, U.get(_i27, _k3));\n                  U.set(_i27, _k3, _t8);\n                }\n              }\n              _k3++;\n            }\n            iter = 0;\n            p--;\n            break;\n          }\n        // no default\n      }\n    }\n\n    if (swapped) {\n      var tmp = V;\n      V = U;\n      U = tmp;\n    }\n    this.m = m;\n    this.n = n;\n    this.s = s;\n    this.U = U;\n    this.V = V;\n  }\n  _createClass(SingularValueDecomposition, [{\n    key: \"solve\",\n    value: function solve(value) {\n      var Y = value;\n      var e = this.threshold;\n      var scols = this.s.length;\n      var Ls = Matrix.zeros(scols, scols);\n      for (var i = 0; i < scols; i++) {\n        if (Math.abs(this.s[i]) <= e) {\n          Ls.set(i, i, 0);\n        } else {\n          Ls.set(i, i, 1 / this.s[i]);\n        }\n      }\n      var U = this.U;\n      var V = this.rightSingularVectors;\n      var VL = V.mmul(Ls);\n      var vrows = V.rows;\n      var urows = U.rows;\n      var VLU = Matrix.zeros(vrows, urows);\n      for (var _i28 = 0; _i28 < vrows; _i28++) {\n        for (var j = 0; j < urows; j++) {\n          var sum = 0;\n          for (var k = 0; k < scols; k++) {\n            sum += VL.get(_i28, k) * U.get(j, k);\n          }\n          VLU.set(_i28, j, sum);\n        }\n      }\n      return VLU.mmul(Y);\n    }\n  }, {\n    key: \"solveForDiagonal\",\n    value: function solveForDiagonal(value) {\n      return this.solve(Matrix.diag(value));\n    }\n  }, {\n    key: \"inverse\",\n    value: function inverse() {\n      var V = this.V;\n      var e = this.threshold;\n      var vrows = V.rows;\n      var vcols = V.columns;\n      var X = new Matrix(vrows, this.s.length);\n      for (var i = 0; i < vrows; i++) {\n        for (var j = 0; j < vcols; j++) {\n          if (Math.abs(this.s[j]) > e) {\n            X.set(i, j, V.get(i, j) / this.s[j]);\n          }\n        }\n      }\n      var U = this.U;\n      var urows = U.rows;\n      var ucols = U.columns;\n      var Y = new Matrix(vrows, urows);\n      for (var _i29 = 0; _i29 < vrows; _i29++) {\n        for (var _j9 = 0; _j9 < urows; _j9++) {\n          var sum = 0;\n          for (var k = 0; k < ucols; k++) {\n            sum += X.get(_i29, k) * U.get(_j9, k);\n          }\n          Y.set(_i29, _j9, sum);\n        }\n      }\n      return Y;\n    }\n  }, {\n    key: \"condition\",\n    get: function get() {\n      return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\n    }\n  }, {\n    key: \"norm2\",\n    get: function get() {\n      return this.s[0];\n    }\n  }, {\n    key: \"rank\",\n    get: function get() {\n      var tol = Math.max(this.m, this.n) * this.s[0] * Number.EPSILON;\n      var r = 0;\n      var s = this.s;\n      for (var i = 0, ii = s.length; i < ii; i++) {\n        if (s[i] > tol) {\n          r++;\n        }\n      }\n      return r;\n    }\n  }, {\n    key: \"diagonal\",\n    get: function get() {\n      return Array.from(this.s);\n    }\n  }, {\n    key: \"threshold\",\n    get: function get() {\n      return Number.EPSILON / 2 * Math.max(this.m, this.n) * this.s[0];\n    }\n  }, {\n    key: \"leftSingularVectors\",\n    get: function get() {\n      return this.U;\n    }\n  }, {\n    key: \"rightSingularVectors\",\n    get: function get() {\n      return this.V;\n    }\n  }, {\n    key: \"diagonalMatrix\",\n    get: function get() {\n      return Matrix.diag(this.s);\n    }\n  }]);\n  return SingularValueDecomposition;\n}();\nexport { SingularValueDecomposition as default };","map":{"version":3,"names":["Matrix","WrapperMatrix2D","hypotenuse","SingularValueDecomposition","value","options","checkMatrix","isEmpty","Error","m","rows","n","columns","computeLeftSingularVectors","computeRightSingularVectors","autoTranspose","wantu","Boolean","wantv","swapped","a","clone","console","warn","transpose","aux","nu","Math","min","ni","s","Float64Array","U","V","e","work","si","i","nct","nrt","max","mrc","k","get","set","j","t","p","pp","iter","eps","Number","EPSILON","kase","alpha","MIN_VALUE","abs","isNaN","ks","f","cs","sn","scale","sp","spm1","epm1","sk","ek","b","c","shift","sqrt","g","tmp","Y","threshold","scols","length","Ls","zeros","rightSingularVectors","VL","mmul","vrows","urows","VLU","sum","solve","diag","vcols","X","ucols","tol","r","ii","Array","from"],"sources":["/home/iam/Documents/LocalWeb-master/node_modules/ml-matrix/src/dc/svd.js"],"sourcesContent":["import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nimport { hypotenuse } from './util';\n\nexport default class SingularValueDecomposition {\n  constructor(value, options = {}) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    if (value.isEmpty()) {\n      throw new Error('Matrix must be non-empty');\n    }\n\n    let m = value.rows;\n    let n = value.columns;\n\n    const {\n      computeLeftSingularVectors = true,\n      computeRightSingularVectors = true,\n      autoTranspose = false,\n    } = options;\n\n    let wantu = Boolean(computeLeftSingularVectors);\n    let wantv = Boolean(computeRightSingularVectors);\n\n    let swapped = false;\n    let a;\n    if (m < n) {\n      if (!autoTranspose) {\n        a = value.clone();\n        // eslint-disable-next-line no-console\n        console.warn(\n          'Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose',\n        );\n      } else {\n        a = value.transpose();\n        m = a.rows;\n        n = a.columns;\n        swapped = true;\n        let aux = wantu;\n        wantu = wantv;\n        wantv = aux;\n      }\n    } else {\n      a = value.clone();\n    }\n\n    let nu = Math.min(m, n);\n    let ni = Math.min(m + 1, n);\n    let s = new Float64Array(ni);\n    let U = new Matrix(m, nu);\n    let V = new Matrix(n, n);\n\n    let e = new Float64Array(n);\n    let work = new Float64Array(m);\n\n    let si = new Float64Array(ni);\n    for (let i = 0; i < ni; i++) si[i] = i;\n\n    let nct = Math.min(m - 1, n);\n    let nrt = Math.max(0, Math.min(n - 2, m));\n    let mrc = Math.max(nct, nrt);\n\n    for (let k = 0; k < mrc; k++) {\n      if (k < nct) {\n        s[k] = 0;\n        for (let i = k; i < m; i++) {\n          s[k] = hypotenuse(s[k], a.get(i, k));\n        }\n        if (s[k] !== 0) {\n          if (a.get(k, k) < 0) {\n            s[k] = -s[k];\n          }\n          for (let i = k; i < m; i++) {\n            a.set(i, k, a.get(i, k) / s[k]);\n          }\n          a.set(k, k, a.get(k, k) + 1);\n        }\n        s[k] = -s[k];\n      }\n\n      for (let j = k + 1; j < n; j++) {\n        if (k < nct && s[k] !== 0) {\n          let t = 0;\n          for (let i = k; i < m; i++) {\n            t += a.get(i, k) * a.get(i, j);\n          }\n          t = -t / a.get(k, k);\n          for (let i = k; i < m; i++) {\n            a.set(i, j, a.get(i, j) + t * a.get(i, k));\n          }\n        }\n        e[j] = a.get(k, j);\n      }\n\n      if (wantu && k < nct) {\n        for (let i = k; i < m; i++) {\n          U.set(i, k, a.get(i, k));\n        }\n      }\n\n      if (k < nrt) {\n        e[k] = 0;\n        for (let i = k + 1; i < n; i++) {\n          e[k] = hypotenuse(e[k], e[i]);\n        }\n        if (e[k] !== 0) {\n          if (e[k + 1] < 0) {\n            e[k] = 0 - e[k];\n          }\n          for (let i = k + 1; i < n; i++) {\n            e[i] /= e[k];\n          }\n          e[k + 1] += 1;\n        }\n        e[k] = -e[k];\n        if (k + 1 < m && e[k] !== 0) {\n          for (let i = k + 1; i < m; i++) {\n            work[i] = 0;\n          }\n          for (let i = k + 1; i < m; i++) {\n            for (let j = k + 1; j < n; j++) {\n              work[i] += e[j] * a.get(i, j);\n            }\n          }\n          for (let j = k + 1; j < n; j++) {\n            let t = -e[j] / e[k + 1];\n            for (let i = k + 1; i < m; i++) {\n              a.set(i, j, a.get(i, j) + t * work[i]);\n            }\n          }\n        }\n        if (wantv) {\n          for (let i = k + 1; i < n; i++) {\n            V.set(i, k, e[i]);\n          }\n        }\n      }\n    }\n\n    let p = Math.min(n, m + 1);\n    if (nct < n) {\n      s[nct] = a.get(nct, nct);\n    }\n    if (m < p) {\n      s[p - 1] = 0;\n    }\n    if (nrt + 1 < p) {\n      e[nrt] = a.get(nrt, p - 1);\n    }\n    e[p - 1] = 0;\n\n    if (wantu) {\n      for (let j = nct; j < nu; j++) {\n        for (let i = 0; i < m; i++) {\n          U.set(i, j, 0);\n        }\n        U.set(j, j, 1);\n      }\n      for (let k = nct - 1; k >= 0; k--) {\n        if (s[k] !== 0) {\n          for (let j = k + 1; j < nu; j++) {\n            let t = 0;\n            for (let i = k; i < m; i++) {\n              t += U.get(i, k) * U.get(i, j);\n            }\n            t = -t / U.get(k, k);\n            for (let i = k; i < m; i++) {\n              U.set(i, j, U.get(i, j) + t * U.get(i, k));\n            }\n          }\n          for (let i = k; i < m; i++) {\n            U.set(i, k, -U.get(i, k));\n          }\n          U.set(k, k, 1 + U.get(k, k));\n          for (let i = 0; i < k - 1; i++) {\n            U.set(i, k, 0);\n          }\n        } else {\n          for (let i = 0; i < m; i++) {\n            U.set(i, k, 0);\n          }\n          U.set(k, k, 1);\n        }\n      }\n    }\n\n    if (wantv) {\n      for (let k = n - 1; k >= 0; k--) {\n        if (k < nrt && e[k] !== 0) {\n          for (let j = k + 1; j < n; j++) {\n            let t = 0;\n            for (let i = k + 1; i < n; i++) {\n              t += V.get(i, k) * V.get(i, j);\n            }\n            t = -t / V.get(k + 1, k);\n            for (let i = k + 1; i < n; i++) {\n              V.set(i, j, V.get(i, j) + t * V.get(i, k));\n            }\n          }\n        }\n        for (let i = 0; i < n; i++) {\n          V.set(i, k, 0);\n        }\n        V.set(k, k, 1);\n      }\n    }\n\n    let pp = p - 1;\n    let iter = 0;\n    let eps = Number.EPSILON;\n    while (p > 0) {\n      let k, kase;\n      for (k = p - 2; k >= -1; k--) {\n        if (k === -1) {\n          break;\n        }\n        const alpha =\n          Number.MIN_VALUE + eps * Math.abs(s[k] + Math.abs(s[k + 1]));\n        if (Math.abs(e[k]) <= alpha || Number.isNaN(e[k])) {\n          e[k] = 0;\n          break;\n        }\n      }\n      if (k === p - 2) {\n        kase = 4;\n      } else {\n        let ks;\n        for (ks = p - 1; ks >= k; ks--) {\n          if (ks === k) {\n            break;\n          }\n          let t =\n            (ks !== p ? Math.abs(e[ks]) : 0) +\n            (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);\n          if (Math.abs(s[ks]) <= eps * t) {\n            s[ks] = 0;\n            break;\n          }\n        }\n        if (ks === k) {\n          kase = 3;\n        } else if (ks === p - 1) {\n          kase = 1;\n        } else {\n          kase = 2;\n          k = ks;\n        }\n      }\n\n      k++;\n\n      switch (kase) {\n        case 1: {\n          let f = e[p - 2];\n          e[p - 2] = 0;\n          for (let j = p - 2; j >= k; j--) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            if (j !== k) {\n              f = -sn * e[j - 1];\n              e[j - 1] = cs * e[j - 1];\n            }\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V.get(i, j) + sn * V.get(i, p - 1);\n                V.set(i, p - 1, -sn * V.get(i, j) + cs * V.get(i, p - 1));\n                V.set(i, j, t);\n              }\n            }\n          }\n          break;\n        }\n        case 2: {\n          let f = e[k - 1];\n          e[k - 1] = 0;\n          for (let j = k; j < p; j++) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            f = -sn * e[j];\n            e[j] = cs * e[j];\n            if (wantu) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U.get(i, j) + sn * U.get(i, k - 1);\n                U.set(i, k - 1, -sn * U.get(i, j) + cs * U.get(i, k - 1));\n                U.set(i, j, t);\n              }\n            }\n          }\n          break;\n        }\n        case 3: {\n          const scale = Math.max(\n            Math.abs(s[p - 1]),\n            Math.abs(s[p - 2]),\n            Math.abs(e[p - 2]),\n            Math.abs(s[k]),\n            Math.abs(e[k]),\n          );\n          const sp = s[p - 1] / scale;\n          const spm1 = s[p - 2] / scale;\n          const epm1 = e[p - 2] / scale;\n          const sk = s[k] / scale;\n          const ek = e[k] / scale;\n          const b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\n          const c = sp * epm1 * (sp * epm1);\n          let shift = 0;\n          if (b !== 0 || c !== 0) {\n            if (b < 0) {\n              shift = 0 - Math.sqrt(b * b + c);\n            } else {\n              shift = Math.sqrt(b * b + c);\n            }\n            shift = c / (b + shift);\n          }\n          let f = (sk + sp) * (sk - sp) + shift;\n          let g = sk * ek;\n          for (let j = k; j < p - 1; j++) {\n            let t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            let cs = f / t;\n            let sn = g / t;\n            if (j !== k) {\n              e[j - 1] = t;\n            }\n            f = cs * s[j] + sn * e[j];\n            e[j] = cs * e[j] - sn * s[j];\n            g = sn * s[j + 1];\n            s[j + 1] = cs * s[j + 1];\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V.get(i, j) + sn * V.get(i, j + 1);\n                V.set(i, j + 1, -sn * V.get(i, j) + cs * V.get(i, j + 1));\n                V.set(i, j, t);\n              }\n            }\n            t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            cs = f / t;\n            sn = g / t;\n            s[j] = t;\n            f = cs * e[j] + sn * s[j + 1];\n            s[j + 1] = -sn * e[j] + cs * s[j + 1];\n            g = sn * e[j + 1];\n            e[j + 1] = cs * e[j + 1];\n            if (wantu && j < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U.get(i, j) + sn * U.get(i, j + 1);\n                U.set(i, j + 1, -sn * U.get(i, j) + cs * U.get(i, j + 1));\n                U.set(i, j, t);\n              }\n            }\n          }\n          e[p - 2] = f;\n          iter = iter + 1;\n          break;\n        }\n        case 4: {\n          if (s[k] <= 0) {\n            s[k] = s[k] < 0 ? -s[k] : 0;\n            if (wantv) {\n              for (let i = 0; i <= pp; i++) {\n                V.set(i, k, -V.get(i, k));\n              }\n            }\n          }\n          while (k < pp) {\n            if (s[k] >= s[k + 1]) {\n              break;\n            }\n            let t = s[k];\n            s[k] = s[k + 1];\n            s[k + 1] = t;\n            if (wantv && k < n - 1) {\n              for (let i = 0; i < n; i++) {\n                t = V.get(i, k + 1);\n                V.set(i, k + 1, V.get(i, k));\n                V.set(i, k, t);\n              }\n            }\n            if (wantu && k < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = U.get(i, k + 1);\n                U.set(i, k + 1, U.get(i, k));\n                U.set(i, k, t);\n              }\n            }\n            k++;\n          }\n          iter = 0;\n          p--;\n          break;\n        }\n        // no default\n      }\n    }\n\n    if (swapped) {\n      let tmp = V;\n      V = U;\n      U = tmp;\n    }\n\n    this.m = m;\n    this.n = n;\n    this.s = s;\n    this.U = U;\n    this.V = V;\n  }\n\n  solve(value) {\n    let Y = value;\n    let e = this.threshold;\n    let scols = this.s.length;\n    let Ls = Matrix.zeros(scols, scols);\n\n    for (let i = 0; i < scols; i++) {\n      if (Math.abs(this.s[i]) <= e) {\n        Ls.set(i, i, 0);\n      } else {\n        Ls.set(i, i, 1 / this.s[i]);\n      }\n    }\n\n    let U = this.U;\n    let V = this.rightSingularVectors;\n\n    let VL = V.mmul(Ls);\n    let vrows = V.rows;\n    let urows = U.rows;\n    let VLU = Matrix.zeros(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < scols; k++) {\n          sum += VL.get(i, k) * U.get(j, k);\n        }\n        VLU.set(i, j, sum);\n      }\n    }\n\n    return VLU.mmul(Y);\n  }\n\n  solveForDiagonal(value) {\n    return this.solve(Matrix.diag(value));\n  }\n\n  inverse() {\n    let V = this.V;\n    let e = this.threshold;\n    let vrows = V.rows;\n    let vcols = V.columns;\n    let X = new Matrix(vrows, this.s.length);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < vcols; j++) {\n        if (Math.abs(this.s[j]) > e) {\n          X.set(i, j, V.get(i, j) / this.s[j]);\n        }\n      }\n    }\n\n    let U = this.U;\n\n    let urows = U.rows;\n    let ucols = U.columns;\n    let Y = new Matrix(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < ucols; k++) {\n          sum += X.get(i, k) * U.get(j, k);\n        }\n        Y.set(i, j, sum);\n      }\n    }\n\n    return Y;\n  }\n\n  get condition() {\n    return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\n  }\n\n  get norm2() {\n    return this.s[0];\n  }\n\n  get rank() {\n    let tol = Math.max(this.m, this.n) * this.s[0] * Number.EPSILON;\n    let r = 0;\n    let s = this.s;\n    for (let i = 0, ii = s.length; i < ii; i++) {\n      if (s[i] > tol) {\n        r++;\n      }\n    }\n    return r;\n  }\n\n  get diagonal() {\n    return Array.from(this.s);\n  }\n\n  get threshold() {\n    return (Number.EPSILON / 2) * Math.max(this.m, this.n) * this.s[0];\n  }\n\n  get leftSingularVectors() {\n    return this.U;\n  }\n\n  get rightSingularVectors() {\n    return this.V;\n  }\n\n  get diagonalMatrix() {\n    return Matrix.diag(this.s);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}