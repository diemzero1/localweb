{"ast":null,"code":"import _createClass from \"/home/iam/Documents/network/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/home/iam/Documents/network/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport { isAnyArray } from 'is-any-array';\nimport Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\nvar nipals = /*#__PURE__*/_createClass(function nipals(X) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  _classCallCheck(this, nipals);\n  X = WrapperMatrix2D.checkMatrix(X);\n  var Y = options.Y;\n  var _options$scaleScores = options.scaleScores,\n    scaleScores = _options$scaleScores === void 0 ? false : _options$scaleScores,\n    _options$maxIteration = options.maxIterations,\n    maxIterations = _options$maxIteration === void 0 ? 1000 : _options$maxIteration,\n    _options$terminationC = options.terminationCriteria,\n    terminationCriteria = _options$terminationC === void 0 ? 1e-10 : _options$terminationC;\n  var u;\n  if (Y) {\n    if (isAnyArray(Y) && typeof Y[0] === 'number') {\n      Y = Matrix.columnVector(Y);\n    } else {\n      Y = WrapperMatrix2D.checkMatrix(Y);\n    }\n    if (Y.rows !== X.rows) {\n      throw new Error('Y should have the same number of rows as X');\n    }\n    u = Y.getColumnVector(0);\n  } else {\n    u = X.getColumnVector(0);\n  }\n  var diff = 1;\n  var t, q, w, tOld;\n  for (var counter = 0; counter < maxIterations && diff > terminationCriteria; counter++) {\n    w = X.transpose().mmul(u).div(u.transpose().mmul(u).get(0, 0));\n    w = w.div(w.norm());\n    t = X.mmul(w).div(w.transpose().mmul(w).get(0, 0));\n    if (counter > 0) {\n      diff = t.clone().sub(tOld).pow(2).sum();\n    }\n    tOld = t.clone();\n    if (Y) {\n      q = Y.transpose().mmul(t).div(t.transpose().mmul(t).get(0, 0));\n      q = q.div(q.norm());\n      u = Y.mmul(q).div(q.transpose().mmul(q).get(0, 0));\n    } else {\n      u = t;\n    }\n  }\n  if (Y) {\n    var p = X.transpose().mmul(t).div(t.transpose().mmul(t).get(0, 0));\n    p = p.div(p.norm());\n    var xResidual = X.clone().sub(t.clone().mmul(p.transpose()));\n    var residual = u.transpose().mmul(t).div(t.transpose().mmul(t).get(0, 0));\n    var yResidual = Y.clone().sub(t.clone().mulS(residual.get(0, 0)).mmul(q.transpose()));\n    this.t = t;\n    this.p = p.transpose();\n    this.w = w.transpose();\n    this.q = q;\n    this.u = u;\n    this.s = t.transpose().mmul(t);\n    this.xResidual = xResidual;\n    this.yResidual = yResidual;\n    this.betas = residual;\n  } else {\n    this.w = w.transpose();\n    this.s = t.transpose().mmul(t).sqrt();\n    if (scaleScores) {\n      this.t = t.clone().div(this.s.get(0, 0));\n    } else {\n      this.t = t;\n    }\n    this.xResidual = X.sub(t.mmul(w.transpose()));\n  }\n});\nexport { nipals as default };","map":{"version":3,"names":["isAnyArray","Matrix","WrapperMatrix2D","nipals","X","options","checkMatrix","Y","scaleScores","maxIterations","terminationCriteria","u","columnVector","rows","Error","getColumnVector","diff","t","q","w","tOld","counter","transpose","mmul","div","get","norm","clone","sub","pow","sum","p","xResidual","residual","yResidual","mulS","s","betas","sqrt"],"sources":["/home/iam/Documents/network/node_modules/ml-matrix/src/dc/nipals.js"],"sourcesContent":["import { isAnyArray } from 'is-any-array';\n\nimport Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nexport default class nipals {\n  constructor(X, options = {}) {\n    X = WrapperMatrix2D.checkMatrix(X);\n    let { Y } = options;\n    const {\n      scaleScores = false,\n      maxIterations = 1000,\n      terminationCriteria = 1e-10,\n    } = options;\n\n    let u;\n    if (Y) {\n      if (isAnyArray(Y) && typeof Y[0] === 'number') {\n        Y = Matrix.columnVector(Y);\n      } else {\n        Y = WrapperMatrix2D.checkMatrix(Y);\n      }\n      if (Y.rows !== X.rows) {\n        throw new Error('Y should have the same number of rows as X');\n      }\n      u = Y.getColumnVector(0);\n    } else {\n      u = X.getColumnVector(0);\n    }\n\n    let diff = 1;\n    let t, q, w, tOld;\n\n    for (\n      let counter = 0;\n      counter < maxIterations && diff > terminationCriteria;\n      counter++\n    ) {\n      w = X.transpose().mmul(u).div(u.transpose().mmul(u).get(0, 0));\n      w = w.div(w.norm());\n\n      t = X.mmul(w).div(w.transpose().mmul(w).get(0, 0));\n\n      if (counter > 0) {\n        diff = t.clone().sub(tOld).pow(2).sum();\n      }\n      tOld = t.clone();\n\n      if (Y) {\n        q = Y.transpose().mmul(t).div(t.transpose().mmul(t).get(0, 0));\n        q = q.div(q.norm());\n\n        u = Y.mmul(q).div(q.transpose().mmul(q).get(0, 0));\n      } else {\n        u = t;\n      }\n    }\n\n    if (Y) {\n      let p = X.transpose().mmul(t).div(t.transpose().mmul(t).get(0, 0));\n      p = p.div(p.norm());\n      let xResidual = X.clone().sub(t.clone().mmul(p.transpose()));\n      let residual = u.transpose().mmul(t).div(t.transpose().mmul(t).get(0, 0));\n      let yResidual = Y.clone().sub(\n        t.clone().mulS(residual.get(0, 0)).mmul(q.transpose()),\n      );\n\n      this.t = t;\n      this.p = p.transpose();\n      this.w = w.transpose();\n      this.q = q;\n      this.u = u;\n      this.s = t.transpose().mmul(t);\n      this.xResidual = xResidual;\n      this.yResidual = yResidual;\n      this.betas = residual;\n    } else {\n      this.w = w.transpose();\n      this.s = t.transpose().mmul(t).sqrt();\n      if (scaleScores) {\n        this.t = t.clone().div(this.s.get(0, 0));\n      } else {\n        this.t = t;\n      }\n      this.xResidual = X.sub(t.mmul(w.transpose()));\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}