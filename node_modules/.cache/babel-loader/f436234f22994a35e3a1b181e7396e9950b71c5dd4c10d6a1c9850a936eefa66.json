{"ast":null,"code":"import React, { useEffect } from 'react';\nimport G6 from '@antv/g6';\nimport ChartLoading from '../../utils/createLoading';\nimport ErrorBoundary from '../../errorBoundary';\nimport useGraph from '../hooks/useGraph';\nimport { deepClone } from '../../utils';\nimport { defaultNodeAnchorPoints, defaultStateStyles, defaultEdgeStyle } from './constants';\nimport { renderMinimap, getGraphSize, getGraphId, bindEvents, useProps } from './utils';\nimport { registerCustomItems } from './customItems';\nregisterCustomItems();\nvar defaultNodeSize = [150, 30];\nvar defaultNodeStyle = {\n  stroke: '#72CC4A',\n  fill: '#f00'\n};\nvar defaultLayout = {\n  type: 'dagre',\n  rankdir: 'LR',\n  nodesep: 30,\n  ranksep: 50\n};\nvar defaultLabelCfg = {\n  style: {\n    fill: '#000000A6',\n    fontSize: 10\n  }\n};\nvar defaultProps = {\n  nodeType: 'round-rect',\n  edgeType: 'fund-polyline',\n  behaviors: ['zoom-canvas', 'drag-canvas'],\n  nodeSize: defaultNodeSize,\n  nodeLabelCfg: defaultLabelCfg,\n  edgeLabelCfg: defaultLabelCfg,\n  nodeAnchorPoints: defaultNodeAnchorPoints,\n  layout: defaultLayout,\n  nodeStyle: defaultNodeStyle,\n  edgeStyle: defaultEdgeStyle,\n  nodeStateStyles: defaultStateStyles,\n  edgeStateStyles: defaultStateStyles,\n  colorMap: {},\n  autoFit: true\n};\nvar graphs = {};\nvar DagreFundFlowGraph = function DagreFundFlowGraph(props) {\n  var uProps = useProps(props, defaultProps);\n  var data = uProps.data,\n    className = uProps.className,\n    style = uProps.style,\n    width = uProps.width,\n    height = uProps.height,\n    _a = uProps.nodeType,\n    nodeType = _a === void 0 ? 'round-rect' : _a,\n    _b = uProps.edgeType,\n    edgeType = _b === void 0 ? 'fund-polyline' : _b,\n    _c = uProps.behaviors,\n    behaviors = _c === void 0 ? ['zoom-canvas', 'drag-canvas'] : _c,\n    _d = uProps.nodeSize,\n    nodeSize = _d === void 0 ? defaultNodeSize : _d,\n    _e = uProps.nodeLabelCfg,\n    nodeLabelCfg = _e === void 0 ? defaultLabelCfg : _e,\n    _f = uProps.edgeLabelCfg,\n    edgeLabelCfg = _f === void 0 ? defaultLabelCfg : _f,\n    _g = uProps.nodeAnchorPoints,\n    nodeAnchorPoints = _g === void 0 ? defaultNodeAnchorPoints : _g,\n    _h = uProps.layout,\n    layout = _h === void 0 ? defaultLayout : _h,\n    minimapCfg = uProps.minimapCfg,\n    _j = uProps.nodeStyle,\n    nodeStyle = _j === void 0 ? defaultNodeStyle : _j,\n    _k = uProps.edgeStyle,\n    edgeStyle = _k === void 0 ? defaultEdgeStyle : _k,\n    _l = uProps.nodeStateStyles,\n    nodeStateStyles = _l === void 0 ? defaultStateStyles : _l,\n    _m = uProps.edgeStateStyles,\n    edgeStateStyles = _m === void 0 ? defaultStateStyles : _m,\n    _o = uProps.colorMap,\n    colorMap = _o === void 0 ? {} : _o,\n    _p = uProps.autoFit,\n    autoFit = _p === void 0 ? true : _p,\n    graphRef = uProps.graphRef,\n    onReady = uProps.onReady,\n    loading = uProps.loading,\n    loadingTemplate = uProps.loadingTemplate,\n    errorTemplate = uProps.errorTemplate;\n  var container = React.useRef(null);\n  var graph = React.useRef(null);\n  var graphId = getGraphId(graph);\n  useGraph(graphs[graphId], uProps, container);\n  useEffect(function () {\n    var graphSize = getGraphSize(width, height, container);\n    var graph = graphs[graphId];\n    if (!graph) {\n      graph = new G6.Graph({\n        container: container.current,\n        width: graphSize[0],\n        height: graphSize[1],\n        modes: {\n          default: behaviors\n        },\n        defaultNode: {\n          type: nodeType,\n          size: nodeSize,\n          style: nodeStyle,\n          anchorPoints: nodeAnchorPoints,\n          labelCfg: nodeLabelCfg\n        },\n        defaultEdge: {\n          type: edgeType,\n          style: edgeStyle,\n          colorMap: colorMap,\n          labelCfg: edgeLabelCfg\n        },\n        nodeStateStyles: nodeStateStyles,\n        edgeStateStyles: edgeStateStyles,\n        layout: layout,\n        fitView: autoFit\n      });\n      graphs[graphId] = graph;\n    }\n    if (graphRef) {\n      graphRef.current = graph;\n    }\n    renderMinimap(minimapCfg, graph);\n    var originData = deepClone(data);\n    graph.data(originData);\n    graph.render();\n    if (onReady) {\n      onReady(graph);\n    }\n    // modify the node color according to the in edge\n    var edges = graph.getEdges();\n    // @ts-ignore\n    edges.forEach(function (edge) {\n      var line = edge.getKeyShape();\n      var stroke = line.attr('stroke');\n      var targetNode = edge.getTarget();\n      targetNode.update({\n        style: {\n          stroke: stroke\n        }\n      });\n    });\n    bindEvents(graph, props);\n    return function () {\n      if (graphs[graphId]) {\n        graphs[graphId].destroy();\n        delete graphs[graphId];\n      }\n    };\n  }, []);\n  return React.createElement(ErrorBoundary, {\n    errorTemplate: errorTemplate\n  }, loading && React.createElement(ChartLoading, {\n    loadingTemplate: loadingTemplate\n  }), React.createElement(\"div\", {\n    className: className,\n    style: style,\n    ref: container\n  }));\n};\nexport default DagreFundFlowGraph;","map":{"version":3,"names":["React","useEffect","G6","ChartLoading","ErrorBoundary","useGraph","deepClone","defaultNodeAnchorPoints","defaultStateStyles","defaultEdgeStyle","renderMinimap","getGraphSize","getGraphId","bindEvents","useProps","registerCustomItems","defaultNodeSize","defaultNodeStyle","stroke","fill","defaultLayout","type","rankdir","nodesep","ranksep","defaultLabelCfg","style","fontSize","defaultProps","nodeType","edgeType","behaviors","nodeSize","nodeLabelCfg","edgeLabelCfg","nodeAnchorPoints","layout","nodeStyle","edgeStyle","nodeStateStyles","edgeStateStyles","colorMap","autoFit","graphs","DagreFundFlowGraph","props","uProps","data","className","width","height","_a","_b","_c","_d","_e","_f","_g","_h","minimapCfg","_j","_k","_l","_m","_o","_p","graphRef","onReady","loading","loadingTemplate","errorTemplate","container","useRef","graph","graphId","graphSize","Graph","current","modes","default","defaultNode","size","anchorPoints","labelCfg","defaultEdge","fitView","originData","render","edges","getEdges","forEach","edge","line","getKeyShape","attr","targetNode","getTarget","update","destroy","createElement","ref"],"sources":["/home/iam/Documents/network/node_modules/@ant-design/graphs/es/obsolescent/graph/dagreFundFlow.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport G6 from '@antv/g6';\nimport ChartLoading from '../../utils/createLoading';\nimport ErrorBoundary from '../../errorBoundary';\nimport useGraph from '../hooks/useGraph';\nimport { deepClone } from '../../utils';\nimport { defaultNodeAnchorPoints, defaultStateStyles, defaultEdgeStyle } from './constants';\nimport { renderMinimap, getGraphSize, getGraphId, bindEvents, useProps } from './utils';\nimport { registerCustomItems } from './customItems';\nregisterCustomItems();\nvar defaultNodeSize = [150, 30];\nvar defaultNodeStyle = {\n    stroke: '#72CC4A',\n    fill: '#f00',\n};\nvar defaultLayout = {\n    type: 'dagre',\n    rankdir: 'LR',\n    nodesep: 30,\n    ranksep: 50,\n};\nvar defaultLabelCfg = {\n    style: {\n        fill: '#000000A6',\n        fontSize: 10,\n    },\n};\nvar defaultProps = {\n    nodeType: 'round-rect',\n    edgeType: 'fund-polyline',\n    behaviors: ['zoom-canvas', 'drag-canvas'],\n    nodeSize: defaultNodeSize,\n    nodeLabelCfg: defaultLabelCfg,\n    edgeLabelCfg: defaultLabelCfg,\n    nodeAnchorPoints: defaultNodeAnchorPoints,\n    layout: defaultLayout,\n    nodeStyle: defaultNodeStyle,\n    edgeStyle: defaultEdgeStyle,\n    nodeStateStyles: defaultStateStyles,\n    edgeStateStyles: defaultStateStyles,\n    colorMap: {},\n    autoFit: true,\n};\nvar graphs = {};\nvar DagreFundFlowGraph = function (props) {\n    var uProps = useProps(props, defaultProps);\n    var data = uProps.data, className = uProps.className, style = uProps.style, width = uProps.width, height = uProps.height, _a = uProps.nodeType, nodeType = _a === void 0 ? 'round-rect' : _a, _b = uProps.edgeType, edgeType = _b === void 0 ? 'fund-polyline' : _b, _c = uProps.behaviors, behaviors = _c === void 0 ? ['zoom-canvas', 'drag-canvas'] : _c, _d = uProps.nodeSize, nodeSize = _d === void 0 ? defaultNodeSize : _d, _e = uProps.nodeLabelCfg, nodeLabelCfg = _e === void 0 ? defaultLabelCfg : _e, _f = uProps.edgeLabelCfg, edgeLabelCfg = _f === void 0 ? defaultLabelCfg : _f, _g = uProps.nodeAnchorPoints, nodeAnchorPoints = _g === void 0 ? defaultNodeAnchorPoints : _g, _h = uProps.layout, layout = _h === void 0 ? defaultLayout : _h, minimapCfg = uProps.minimapCfg, _j = uProps.nodeStyle, nodeStyle = _j === void 0 ? defaultNodeStyle : _j, _k = uProps.edgeStyle, edgeStyle = _k === void 0 ? defaultEdgeStyle : _k, _l = uProps.nodeStateStyles, nodeStateStyles = _l === void 0 ? defaultStateStyles : _l, _m = uProps.edgeStateStyles, edgeStateStyles = _m === void 0 ? defaultStateStyles : _m, _o = uProps.colorMap, colorMap = _o === void 0 ? {} : _o, _p = uProps.autoFit, autoFit = _p === void 0 ? true : _p, graphRef = uProps.graphRef, onReady = uProps.onReady, loading = uProps.loading, loadingTemplate = uProps.loadingTemplate, errorTemplate = uProps.errorTemplate;\n    var container = React.useRef(null);\n    var graph = React.useRef(null);\n    var graphId = getGraphId(graph);\n    useGraph(graphs[graphId], uProps, container);\n    useEffect(function () {\n        var graphSize = getGraphSize(width, height, container);\n        var graph = graphs[graphId];\n        if (!graph) {\n            graph = new G6.Graph({\n                container: container.current,\n                width: graphSize[0],\n                height: graphSize[1],\n                modes: {\n                    default: behaviors,\n                },\n                defaultNode: {\n                    type: nodeType,\n                    size: nodeSize,\n                    style: nodeStyle,\n                    anchorPoints: nodeAnchorPoints,\n                    labelCfg: nodeLabelCfg,\n                },\n                defaultEdge: {\n                    type: edgeType,\n                    style: edgeStyle,\n                    colorMap: colorMap,\n                    labelCfg: edgeLabelCfg,\n                },\n                nodeStateStyles: nodeStateStyles,\n                edgeStateStyles: edgeStateStyles,\n                layout: layout,\n                fitView: autoFit,\n            });\n            graphs[graphId] = graph;\n        }\n        if (graphRef) {\n            graphRef.current = graph;\n        }\n        renderMinimap(minimapCfg, graph);\n        var originData = deepClone(data);\n        graph.data(originData);\n        graph.render();\n        if (onReady) {\n            onReady(graph);\n        }\n        // modify the node color according to the in edge\n        var edges = graph.getEdges();\n        // @ts-ignore\n        edges.forEach(function (edge) {\n            var line = edge.getKeyShape();\n            var stroke = line.attr('stroke');\n            var targetNode = edge.getTarget();\n            targetNode.update({\n                style: {\n                    stroke: stroke,\n                },\n            });\n        });\n        bindEvents(graph, props);\n        return function () {\n            if (graphs[graphId]) {\n                graphs[graphId].destroy();\n                delete graphs[graphId];\n            }\n        };\n    }, []);\n    return (React.createElement(ErrorBoundary, { errorTemplate: errorTemplate },\n        loading && React.createElement(ChartLoading, { loadingTemplate: loadingTemplate }),\n        React.createElement(\"div\", { className: className, style: style, ref: container })));\n};\nexport default DagreFundFlowGraph;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}