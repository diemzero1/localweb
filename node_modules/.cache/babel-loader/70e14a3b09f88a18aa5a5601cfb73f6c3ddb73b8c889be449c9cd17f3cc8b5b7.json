{"ast":null,"code":"import { __assign, __read } from \"tslib\";\nimport { isArray } from '@antv/util';\nimport { registerShape } from '../base';\nimport { getStyle } from '../util/get-style';\n// 根据数据点生成 tick shape 的 6 个关键点\nfunction getTickPoints(pointInfo) {\n  var _a;\n  var x = pointInfo.x,\n    y = pointInfo.y,\n    y0 = pointInfo.y0,\n    size = pointInfo.size;\n  var yMin;\n  var yMax;\n  if (isArray(y)) {\n    _a = __read(y, 2), yMin = _a[0], yMax = _a[1];\n  } else {\n    yMin = y0;\n    yMax = y;\n  }\n  var xMax = x + size / 2;\n  var xMin = x - size / 2;\n  // tick 关键点顺序\n  // 4 - 1 - 5\n  //     |\n  // 2 - 0 - 3\n  return [{\n    x: x,\n    y: yMin\n  }, {\n    x: x,\n    y: yMax\n  }, {\n    x: xMin,\n    y: yMin\n  }, {\n    x: xMax,\n    y: yMin\n  }, {\n    x: xMin,\n    y: yMax\n  }, {\n    x: xMax,\n    y: yMax\n  }];\n}\n// 根据 tick 关键点绘制 path\nfunction getTickPath(points) {\n  return [['M', points[0].x, points[0].y], ['L', points[1].x, points[1].y], ['M', points[2].x, points[2].y], ['L', points[3].x, points[3].y], ['M', points[4].x, points[4].y], ['L', points[5].x, points[5].y]];\n}\n/** I 形状柱状图，常用于 error bar chart */\nregisterShape('interval', 'tick', {\n  getPoints: function (shapePoint) {\n    return getTickPoints(shapePoint);\n  },\n  draw: function (cfg, container) {\n    var style = getStyle(cfg, true, false);\n    var path = this.parsePath(getTickPath(cfg.points));\n    var shape = container.addShape('path', {\n      attrs: __assign(__assign({}, style), {\n        path: path\n      }),\n      name: 'interval'\n    });\n    return shape;\n  },\n  getMarker: function (markerCfg) {\n    var color = markerCfg.color;\n    return {\n      symbol: function (x, y, r) {\n        return [['M', x - r / 2, y - r], ['L', x + r / 2, y - r], ['M', x, y - r], ['L', x, y + r], ['M', x - r / 2, y + r], ['L', x + r / 2, y + r]];\n      },\n      style: {\n        r: 5,\n        stroke: color\n      }\n    };\n  }\n});","map":{"version":3,"mappings":"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","names":["isArray","registerShape","getStyle","getTickPoints","pointInfo","y","y0","size","yMin","yMax","_a","xMax","x","xMin","getTickPath","points","getPoints","shapePoint","draw","cfg","container","style","path","parsePath","shape","addShape","attrs","name","getMarker","markerCfg","symbol","r","stroke","color"],"sources":["/home/iam/Documents/LocalWeb-master/node_modules/@antv/g2/src/geometry/shape/interval/tick.ts"],"sourcesContent":["import { isArray } from '@antv/util';\nimport { IGroup } from '../../../dependents';\nimport { Point, ShapeInfo, ShapeMarkerCfg, ShapePoint } from '../../../interface';\n\nimport { registerShape } from '../base';\nimport { getStyle } from '../util/get-style';\n\n// 根据数据点生成 tick shape 的 6 个关键点\nfunction getTickPoints(pointInfo: ShapePoint): Point[] {\n  const { x, y, y0, size } = pointInfo;\n  let yMin;\n  let yMax;\n  if (isArray(y)) {\n    [yMin, yMax] = y;\n  } else {\n    yMin = y0;\n    yMax = y;\n  }\n\n  const xMax = (x as number) + size / 2;\n  const xMin = (x as number) - size / 2;\n\n  // tick 关键点顺序\n  // 4 - 1 - 5\n  //     |\n  // 2 - 0 - 3\n  return [\n    { x: x as number, y: yMin },\n    { x: x as number, y: yMax },\n    { x: xMin, y: yMin },\n    { x: xMax, y: yMin },\n    { x: xMin, y: yMax },\n    { x: xMax, y: yMax },\n  ];\n}\n\n// 根据 tick 关键点绘制 path\nfunction getTickPath(points: Point[]) {\n  return [\n    ['M', points[0].x, points[0].y],\n    ['L', points[1].x, points[1].y],\n    ['M', points[2].x, points[2].y],\n    ['L', points[3].x, points[3].y],\n    ['M', points[4].x, points[4].y],\n    ['L', points[5].x, points[5].y],\n  ];\n}\n\n/** I 形状柱状图，常用于 error bar chart */\nregisterShape('interval', 'tick', {\n  getPoints(shapePoint: ShapePoint) {\n    return getTickPoints(shapePoint);\n  },\n  draw(cfg: ShapeInfo, container: IGroup) {\n    const style = getStyle(cfg, true, false);\n    const path = this.parsePath(getTickPath(cfg.points as Point[]));\n    const shape = container.addShape('path', {\n      attrs: {\n        ...style,\n        path,\n      },\n      name: 'interval',\n    });\n\n    return shape;\n  },\n  getMarker(markerCfg: ShapeMarkerCfg) {\n    const { color } = markerCfg;\n    return {\n      symbol: (x: number, y: number, r: number) => {\n        return [\n          ['M', x - r / 2, y - r],\n          ['L', x + r / 2, y - r],\n          ['M', x, y - r],\n          ['L', x, y + r],\n          ['M', x - r / 2, y + r],\n          ['L', x + r / 2, y + r],\n        ];\n      },\n      style: {\n        r: 5,\n        stroke: color,\n      },\n    };\n  },\n});\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}