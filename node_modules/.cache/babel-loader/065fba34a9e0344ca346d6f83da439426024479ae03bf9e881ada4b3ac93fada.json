{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Plot } from '../../core/plot';\nimport { binHistogram } from '../../utils/transform/histogram';\nimport { adaptor } from './adaptor';\nimport { DEFAULT_OPTIONS } from './constant';\nvar Histogram = /** @class */function (_super) {\n  __extends(Histogram, _super);\n  function Histogram() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** 图表类型 */\n    _this.type = 'histogram';\n    return _this;\n  }\n  /**\n   * 获取 默认配置项\n   * 供外部使用\n   */\n  Histogram.getDefaultOptions = function () {\n    return DEFAULT_OPTIONS;\n  };\n  Histogram.prototype.changeData = function (data) {\n    this.updateOption({\n      data: data\n    });\n    var _a = this.options,\n      binField = _a.binField,\n      binNumber = _a.binNumber,\n      binWidth = _a.binWidth,\n      stackField = _a.stackField;\n    this.chart.changeData(binHistogram(data, binField, binWidth, binNumber, stackField));\n  };\n  /**\n   * 获取直方图的适配器\n   */\n  Histogram.prototype.getDefaultOptions = function () {\n    return Histogram.getDefaultOptions();\n  };\n  /**\n   * 获取直方图的适配器\n   */\n  Histogram.prototype.getSchemaAdaptor = function () {\n    return adaptor;\n  };\n  return Histogram;\n}(Plot);\nexport { Histogram };","map":{"version":3,"mappings":";AACA,SAASA,IAAI,QAAQ,iBAAiB;AACtC,SAASC,YAAY,QAAQ,iCAAiC;AAC9D,SAASC,OAAO,QAAQ,WAAW;AACnC,SAASC,eAAe,QAAQ,YAAY;AAK5C;EAA+BC;EAA/B;IAAA;IASE;IACOC,UAAI,GAAW,WAAW;;EAsBnC;EA/BE;;;;EAIOC,2BAAiB,GAAxB;IACE,OAAOH,eAAe;EACxB,CAAC;EAKMG,8BAAU,GAAjB,UAAkBC,IAA8B;IAC9C,IAAI,CAACC,YAAY,CAAC;MAAED,IAAI;IAAA,CAAE,CAAC;IAErB,SAAgD,IAAI,CAACE,OAAO;MAA1DC,QAAQ;MAAEC,SAAS;MAAEC,QAAQ;MAAEC,UAAU,gBAAiB;IAClE,IAAI,CAACC,KAAK,CAACC,UAAU,CAACd,YAAY,CAACM,IAAI,EAAEG,QAAQ,EAAEE,QAAQ,EAAED,SAAS,EAAEE,UAAU,CAAC,CAAC;EACtF,CAAC;EAED;;;EAGUP,qCAAiB,GAA3B;IACE,OAAOA,SAAS,CAACU,iBAAiB,EAAE;EACtC,CAAC;EAED;;;EAGUV,oCAAgB,GAA1B;IACE,OAAOJ,OAAO;EAChB,CAAC;EACH,gBAAC;AAAD,CAAC,CAhC8BF,IAAI","names":["Plot","binHistogram","adaptor","DEFAULT_OPTIONS","__extends","_this","Histogram","data","updateOption","options","binField","binNumber","binWidth","stackField","chart","changeData","getDefaultOptions"],"sources":["/home/iam/Documents/LocalWeb-master/node_modules/@antv/g2plot/src/plots/histogram/index.ts"],"sourcesContent":["import { Adaptor } from '../../core/adaptor';\nimport { Plot } from '../../core/plot';\nimport { binHistogram } from '../../utils/transform/histogram';\nimport { adaptor } from './adaptor';\nimport { DEFAULT_OPTIONS } from './constant';\nimport { HistogramOptions } from './types';\n\nexport type { HistogramOptions };\n\nexport class Histogram extends Plot<HistogramOptions> {\n  /**\n   * 获取 默认配置项\n   * 供外部使用\n   */\n  static getDefaultOptions(): Partial<HistogramOptions> {\n    return DEFAULT_OPTIONS;\n  }\n\n  /** 图表类型 */\n  public type: string = 'histogram';\n\n  public changeData(data: HistogramOptions['data']) {\n    this.updateOption({ data });\n\n    const { binField, binNumber, binWidth, stackField } = this.options;\n    this.chart.changeData(binHistogram(data, binField, binWidth, binNumber, stackField));\n  }\n\n  /**\n   * 获取直方图的适配器\n   */\n  protected getDefaultOptions() {\n    return Histogram.getDefaultOptions();\n  }\n\n  /**\n   * 获取直方图的适配器\n   */\n  protected getSchemaAdaptor(): Adaptor<HistogramOptions> {\n    return adaptor;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}