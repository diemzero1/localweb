{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { get } from '@antv/util';\nimport GroupComponent from '../abstract/group-component';\nimport Theme from '../util/theme';\nimport { pointsToBBox } from '../util/util';\nimport { renderTag } from '../util/graphic';\nvar DataRegionAnnotation = /** @class */function (_super) {\n  __extends(DataRegionAnnotation, _super);\n  function DataRegionAnnotation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * 默认的配置项\n   * @returns {object} 默认的配置项\n   */\n  DataRegionAnnotation.prototype.getDefaultCfg = function () {\n    var cfg = _super.prototype.getDefaultCfg.call(this);\n    return __assign(__assign({}, cfg), {\n      name: 'annotation',\n      type: 'dataRegion',\n      locationType: 'points',\n      points: [],\n      lineLength: 0,\n      region: {},\n      text: {},\n      defaultCfg: {\n        region: {\n          style: {\n            lineWidth: 0,\n            fill: Theme.regionColor,\n            opacity: 0.4\n          }\n        },\n        text: {\n          content: '',\n          style: {\n            textAlign: 'center',\n            textBaseline: 'bottom',\n            fontSize: 12,\n            fill: Theme.textColor,\n            fontFamily: Theme.fontFamily\n          }\n        }\n      }\n    });\n  };\n  DataRegionAnnotation.prototype.renderInner = function (group) {\n    var regionStyle = get(this.get('region'), 'style', {});\n    var textStyle = get(this.get('text'), 'style', {});\n    var lineLength = this.get('lineLength') || 0;\n    var points = this.get('points');\n    if (!points.length) {\n      return;\n    }\n    var bbox = pointsToBBox(points);\n    // render region\n    var path = [];\n    path.push(['M', points[0].x, bbox.minY - lineLength]);\n    points.forEach(function (point) {\n      path.push(['L', point.x, point.y]);\n    });\n    path.push(['L', points[points.length - 1].x, points[points.length - 1].y - lineLength]);\n    this.addShape(group, {\n      type: 'path',\n      id: this.getElementId('region'),\n      name: 'annotation-region',\n      attrs: __assign({\n        path: path\n      }, regionStyle)\n    });\n    // render text\n    var textCfg = __assign({\n      id: this.getElementId('text'),\n      name: 'annotation-text',\n      x: (bbox.minX + bbox.maxX) / 2,\n      y: bbox.minY - lineLength\n    }, this.get('text'));\n    renderTag(group, textCfg);\n  };\n  return DataRegionAnnotation;\n}(GroupComponent);\nexport default DataRegionAnnotation;","map":{"version":3,"mappings":"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","names":["get","GroupComponent","Theme","pointsToBBox","renderTag","__extends","DataRegionAnnotation","cfg","_super","getDefaultCfg","name","type","locationType","points","lineLength","region","text","defaultCfg","style","lineWidth","fill","regionColor","opacity","content","textAlign","textBaseline","fontSize","textColor","fontFamily","group","regionStyle","textStyle","length","bbox","path","push","x","minY","forEach","point","y","addShape","id","getElementId","attrs","textCfg","minX","maxX"],"sources":["/home/iam/Documents/LocalWeb-master/node_modules/@antv/component/src/annotation/data-region.ts"],"sourcesContent":["import { IGroup } from '@antv/g-base';\nimport { get } from '@antv/util';\nimport GroupComponent from '../abstract/group-component';\nimport { ILocation } from '../interfaces';\nimport { DataRegionAnnotationCfg, Point, PointsLocationCfg } from '../types';\nimport Theme from '../util/theme';\nimport { pointsToBBox } from '../util/util';\nimport { renderTag } from '../util/graphic';\n\nclass DataRegionAnnotation extends GroupComponent<DataRegionAnnotationCfg> implements ILocation<PointsLocationCfg> {\n  /**\n   * 默认的配置项\n   * @returns {object} 默认的配置项\n   */\n  public getDefaultCfg() {\n    const cfg = super.getDefaultCfg();\n    return {\n      ...cfg,\n      name: 'annotation',\n      type: 'dataRegion',\n      locationType: 'points',\n      points: [],\n      lineLength: 0,\n      region: {},\n      text: {},\n      defaultCfg: {\n        region: {\n          style: {\n            lineWidth: 0,\n            fill: Theme.regionColor,\n            opacity: 0.4,\n          },\n        },\n        text: {\n          content: '',\n          style: {\n            textAlign: 'center',\n            textBaseline: 'bottom',\n            fontSize: 12,\n            fill: Theme.textColor,\n            fontFamily: Theme.fontFamily,\n          },\n        },\n      },\n    };\n  }\n\n  protected renderInner(group: IGroup) {\n    const regionStyle = get(this.get('region'), 'style', {});\n    const textStyle = get(this.get('text'), 'style', {});\n    const lineLength = this.get('lineLength') || 0;\n    const points: Point[] = this.get('points');\n\n    if (!points.length) {\n      return;\n    }\n    const bbox = pointsToBBox(points);\n\n    // render region\n    const path = [];\n    path.push(['M', points[0].x, bbox.minY - lineLength]);\n    points.forEach((point) => {\n      path.push(['L', point.x, point.y]);\n    });\n    path.push(['L', points[points.length - 1].x, points[points.length - 1].y - lineLength]);\n    this.addShape(group, {\n      type: 'path',\n      id: this.getElementId('region'),\n      name: 'annotation-region',\n      attrs: {\n        path,\n        ...regionStyle,\n      },\n    });\n\n    // render text\n    const textCfg = {\n      id: this.getElementId('text'),\n      name: 'annotation-text',\n      x: (bbox.minX + bbox.maxX) / 2,\n      y: bbox.minY - lineLength,\n      ...this.get('text'),\n    };\n\n    renderTag(group, textCfg);\n  }\n}\n\nexport default DataRegionAnnotation;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}