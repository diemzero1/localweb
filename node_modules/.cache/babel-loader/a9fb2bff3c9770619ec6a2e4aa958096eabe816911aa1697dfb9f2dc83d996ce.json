{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { each } from '@antv/util';\nimport TransformAction from './scale-transform';\n/**\n * 缩放 Scale 的 Action\n * @ignore\n */\nvar ScaleTranslate = /** @class */function (_super) {\n  __extends(ScaleTranslate, _super);\n  function ScaleTranslate() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.zoomRatio = 0.05;\n    return _this;\n    // 平移分类的度量\n    // private translateCategory(dim, scale, normalPoint) {\n    // }\n  }\n  /**\n   * 缩小\n   */\n  ScaleTranslate.prototype.zoomIn = function () {\n    this.zoom(this.zoomRatio);\n  };\n  ScaleTranslate.prototype.zoom = function (scale) {\n    var _this = this;\n    var dims = this.dims;\n    each(dims, function (dim) {\n      _this.zoomDim(dim, scale);\n    });\n    this.context.view.render(true);\n  };\n  /**\n   * 放大\n   */\n  ScaleTranslate.prototype.zoomOut = function () {\n    this.zoom(-1 * this.zoomRatio);\n  };\n  // 缩放度量\n  ScaleTranslate.prototype.zoomDim = function (dim, dRatio) {\n    if (this.hasDim(dim)) {\n      var scale = this.getScale(dim);\n      if (scale.isLinear) {\n        this.zoomLinear(dim, scale, dRatio);\n      }\n      //  else { // 暂时仅处理连续字段\n      // this.zoomCategory(dim, scale, normalPoint);\n      // }\n    }\n  };\n  // linear 度量平移\n  ScaleTranslate.prototype.zoomLinear = function (dim, scale, dRatio) {\n    var view = this.context.view;\n    // 只有第一次缓存，否则无法回滚\n    if (!this.cacheScaleDefs[dim]) {\n      this.cacheScaleDefs[dim] = {\n        // @ts-ignore\n        nice: scale.nice,\n        min: scale.min,\n        max: scale.max\n      };\n    }\n    // 使用使用原始度量作为缩放标准\n    var scaleDef = this.cacheScaleDefs[dim];\n    var range = scaleDef.max - scaleDef.min;\n    var min = scale.min,\n      max = scale.max;\n    var d = dRatio * range;\n    var toMin = min - d;\n    var toMax = max + d;\n    var curRange = toMax - toMin;\n    var scaled = curRange / range;\n    if (toMax > toMin && scaled < 100 && scaled > 0.01) {\n      view.scale(scale.field, {\n        // @ts-ignore\n        nice: false,\n        min: min - d,\n        max: max + d\n      });\n    }\n  };\n  return ScaleTranslate;\n}(TransformAction);\nexport default ScaleTranslate;","map":{"version":3,"mappings":";AAAA,SAASA,IAAI,QAAkB,YAAY;AAC3C,OAAOC,eAAe,MAAM,mBAAmB;AAE/C;;;;AAIA;EAA6BC;EAA7B;IAAA;IACUC,eAAS,GAAG,IAAI;;IAkExB;IACA;IACA;EACF;EApEE;;;EAGOC,+BAAM,GAAb;IACE,IAAI,CAACC,IAAI,CAAC,IAAI,CAACC,SAAS,CAAC;EAC3B,CAAC;EAEOF,6BAAI,GAAZ,UAAaG,KAAK;IAAlB;IACE,IAAMC,IAAI,GAAG,IAAI,CAACA,IAAI;IACtBR,IAAI,CAACQ,IAAI,EAAE,UAACC,GAAG;MACbN,KAAI,CAACO,OAAO,CAACD,GAAG,EAAEF,KAAK,CAAC;IAC1B,CAAC,CAAC;IACF,IAAI,CAACI,OAAO,CAACC,IAAI,CAACC,MAAM,CAAC,IAAI,CAAC;EAChC,CAAC;EAED;;;EAGOT,gCAAO,GAAd;IACE,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAACC,SAAS,CAAC;EAChC,CAAC;EAED;EACQF,gCAAO,GAAf,UAAgBK,GAAG,EAAEK,MAAM;IACzB,IAAI,IAAI,CAACC,MAAM,CAACN,GAAG,CAAC,EAAE;MACpB,IAAMF,KAAK,GAAG,IAAI,CAACS,QAAQ,CAACP,GAAG,CAAC;MAChC,IAAIF,KAAK,CAACU,QAAQ,EAAE;QAClB,IAAI,CAACC,UAAU,CAACT,GAAG,EAAEF,KAAK,EAAEO,MAAM,CAAC;;MAErC;MACA;MACA;;EAEJ,CAAC;EACD;EACQV,mCAAU,GAAlB,UAAmBK,GAAG,EAAEF,KAAK,EAAEO,MAAM;IACnC,IAAMF,IAAI,GAAG,IAAI,CAACD,OAAO,CAACC,IAAI;IAC9B;IACA,IAAI,CAAC,IAAI,CAACO,cAAc,CAACV,GAAG,CAAC,EAAE;MAC7B,IAAI,CAACU,cAAc,CAACV,GAAG,CAAC,GAAG;QACzB;QACAW,IAAI,EAAEb,KAAK,CAACa,IAAI;QAChBC,GAAG,EAAEd,KAAK,CAACc,GAAG;QACdC,GAAG,EAAEf,KAAK,CAACe;OACZ;;IAEH;IACA,IAAMC,QAAQ,GAAG,IAAI,CAACJ,cAAc,CAACV,GAAG,CAAC;IACzC,IAAMe,KAAK,GAAGD,QAAQ,CAACD,GAAG,GAAGC,QAAQ,CAACF,GAAG;IACjC,OAAG,GAAUd,KAAK,IAAf;MAAEe,GAAG,GAAKf,KAAK,IAAV;IAChB,IAAMkB,CAAC,GAAGX,MAAM,GAAGU,KAAK;IACxB,IAAME,KAAK,GAAGL,GAAG,GAAGI,CAAC;IACrB,IAAME,KAAK,GAAGL,GAAG,GAAGG,CAAC;IACrB,IAAMG,QAAQ,GAAGD,KAAK,GAAGD,KAAK;IAC9B,IAAMG,MAAM,GAAGD,QAAQ,GAAGJ,KAAK;IAC/B,IAAIG,KAAK,GAAGD,KAAK,IAAIG,MAAM,GAAG,GAAG,IAAIA,MAAM,GAAG,IAAI,EAAE;MAClDjB,IAAI,CAACL,KAAK,CAACA,KAAK,CAACuB,KAAK,EAAE;QACtB;QACAV,IAAI,EAAE,KAAK;QACXC,GAAG,EAAEA,GAAG,GAAGI,CAAC;QACZH,GAAG,EAAEA,GAAG,GAAGG;OACZ,CAAC;;EAEN,CAAC;EAKH,qBAAC;AAAD,CAAC,CAtE4BxB,eAAe;AAwE5C,eAAeG,cAAc","names":["each","TransformAction","__extends","_this","ScaleTranslate","zoom","zoomRatio","scale","dims","dim","zoomDim","context","view","render","dRatio","hasDim","getScale","isLinear","zoomLinear","cacheScaleDefs","nice","min","max","scaleDef","range","d","toMin","toMax","curRange","scaled","field"],"sources":["/home/iam/Documents/LocalWeb-master/node_modules/@antv/g2/src/interaction/action/view/scale-zoom.ts"],"sourcesContent":["import { each, throttle } from '@antv/util';\nimport TransformAction from './scale-transform';\n\n/**\n * 缩放 Scale 的 Action\n * @ignore\n */\nclass ScaleTranslate extends TransformAction {\n  private zoomRatio = 0.05;\n  /**\n   * 缩小\n   */\n  public zoomIn() {\n    this.zoom(this.zoomRatio);\n  }\n\n  private zoom(scale) {\n    const dims = this.dims;\n    each(dims, (dim) => {\n      this.zoomDim(dim, scale);\n    });\n    this.context.view.render(true);\n  }\n\n  /**\n   * 放大\n   */\n  public zoomOut() {\n    this.zoom(-1 * this.zoomRatio);\n  }\n\n  // 缩放度量\n  private zoomDim(dim, dRatio) {\n    if (this.hasDim(dim)) {\n      const scale = this.getScale(dim);\n      if (scale.isLinear) {\n        this.zoomLinear(dim, scale, dRatio);\n      }\n      //  else { // 暂时仅处理连续字段\n      // this.zoomCategory(dim, scale, normalPoint);\n      // }\n    }\n  }\n  // linear 度量平移\n  private zoomLinear(dim, scale, dRatio) {\n    const view = this.context.view;\n    // 只有第一次缓存，否则无法回滚\n    if (!this.cacheScaleDefs[dim]) {\n      this.cacheScaleDefs[dim] = {\n        // @ts-ignore\n        nice: scale.nice,\n        min: scale.min,\n        max: scale.max,\n      };\n    }\n    // 使用使用原始度量作为缩放标准\n    const scaleDef = this.cacheScaleDefs[dim];\n    const range = scaleDef.max - scaleDef.min;\n    const { min, max } = scale;\n    const d = dRatio * range;\n    const toMin = min - d;\n    const toMax = max + d;\n    const curRange = toMax - toMin;\n    const scaled = curRange / range;\n    if (toMax > toMin && scaled < 100 && scaled > 0.01) {\n      view.scale(scale.field, {\n        // @ts-ignore\n        nice: false,\n        min: min - d,\n        max: max + d,\n      });\n    }\n  }\n\n  // 平移分类的度量\n  // private translateCategory(dim, scale, normalPoint) {\n  // }\n}\n\nexport default ScaleTranslate;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}