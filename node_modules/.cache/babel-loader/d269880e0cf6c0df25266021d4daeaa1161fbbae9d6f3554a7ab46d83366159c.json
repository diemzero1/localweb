{"ast":null,"code":"import { __assign, __extends, __spreadArrays } from \"tslib\";\nimport { clone, isFunction, mix, upperFirst } from '@antv/util';\nimport Theme from '../util/theme';\nimport { getValueByPercent } from '../util/util';\nimport LegendBase from './base';\nvar HANDLER_HEIGHT_RATIO = 1.4;\nvar HANDLER_TRIANGLE_RATIO = 0.4;\nvar ContinueLegend = /** @class */function (_super) {\n  __extends(ContinueLegend, _super);\n  function ContinueLegend() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  ContinueLegend.prototype.getDefaultCfg = function () {\n    var cfg = _super.prototype.getDefaultCfg.call(this);\n    return __assign(__assign({}, cfg), {\n      type: 'continue',\n      min: 0,\n      max: 100,\n      value: null,\n      colors: [],\n      track: {},\n      rail: {},\n      label: {},\n      handler: {},\n      slidable: true,\n      tip: null,\n      step: null,\n      maxWidth: null,\n      maxHeight: null,\n      defaultCfg: {\n        label: {\n          align: 'rail',\n          spacing: 5,\n          formatter: null,\n          style: {\n            fontSize: 12,\n            fill: Theme.textColor,\n            textBaseline: 'middle',\n            fontFamily: Theme.fontFamily\n          }\n        },\n        handler: {\n          size: 10,\n          style: {\n            fill: '#fff',\n            stroke: '#333'\n          }\n        },\n        track: {},\n        rail: {\n          type: 'color',\n          size: 20,\n          defaultLength: 100,\n          style: {\n            fill: '#DCDEE2'\n          }\n        },\n        title: {\n          spacing: 5,\n          style: {\n            fill: Theme.textColor,\n            fontSize: 12,\n            textAlign: 'start',\n            textBaseline: 'top'\n          }\n        }\n      }\n    });\n  };\n  ContinueLegend.prototype.isSlider = function () {\n    return true;\n  };\n  // 实现 IList 接口\n  ContinueLegend.prototype.getValue = function () {\n    return this.getCurrentValue();\n  };\n  ContinueLegend.prototype.getRange = function () {\n    return {\n      min: this.get('min'),\n      max: this.get('max')\n    };\n  };\n  // 改变 range\n  ContinueLegend.prototype.setRange = function (min, max) {\n    this.update({\n      min: min,\n      max: max\n    });\n  };\n  ContinueLegend.prototype.setValue = function (value) {\n    var originValue = this.getValue();\n    this.set('value', value);\n    var group = this.get('group');\n    this.resetTrackClip();\n    if (this.get('slidable')) {\n      this.resetHandlers(group);\n    }\n    this.delegateEmit('valuechanged', {\n      originValue: originValue,\n      value: value\n    });\n  };\n  ContinueLegend.prototype.initEvent = function () {\n    var group = this.get('group');\n    this.bindSliderEvent(group);\n    this.bindRailEvent(group);\n    this.bindTrackEvent(group);\n  };\n  ContinueLegend.prototype.drawLegendContent = function (group) {\n    this.drawRail(group);\n    this.drawLabels(group);\n    this.fixedElements(group); // 调整各个图形位置，适应宽高的限制\n    this.resetTrack(group);\n    this.resetTrackClip(group);\n    if (this.get('slidable')) {\n      this.resetHandlers(group);\n    }\n  };\n  ContinueLegend.prototype.bindSliderEvent = function (group) {\n    this.bindHandlersEvent(group);\n  };\n  ContinueLegend.prototype.bindHandlersEvent = function (group) {\n    var _this = this;\n    group.on('legend-handler-min:drag', function (ev) {\n      var minValue = _this.getValueByCanvasPoint(ev.x, ev.y);\n      var currentValue = _this.getCurrentValue();\n      var maxValue = currentValue[1];\n      if (maxValue < minValue) {\n        // 如果小于最小值，则调整最小值\n        maxValue = minValue;\n      }\n      _this.setValue([minValue, maxValue]);\n    });\n    group.on('legend-handler-max:drag', function (ev) {\n      var maxValue = _this.getValueByCanvasPoint(ev.x, ev.y);\n      var currentValue = _this.getCurrentValue();\n      var minValue = currentValue[0];\n      if (minValue > maxValue) {\n        // 如果小于最小值，则调整最小值\n        minValue = maxValue;\n      }\n      _this.setValue([minValue, maxValue]);\n    });\n  };\n  ContinueLegend.prototype.bindRailEvent = function (group) {};\n  ContinueLegend.prototype.bindTrackEvent = function (group) {\n    var _this = this;\n    var prePoint = null;\n    group.on('legend-track:dragstart', function (ev) {\n      prePoint = {\n        x: ev.x,\n        y: ev.y\n      };\n    });\n    group.on('legend-track:drag', function (ev) {\n      if (!prePoint) {\n        return;\n      }\n      var preValue = _this.getValueByCanvasPoint(prePoint.x, prePoint.y);\n      var curValue = _this.getValueByCanvasPoint(ev.x, ev.y);\n      var currentValue = _this.getCurrentValue();\n      var curDiff = currentValue[1] - currentValue[0];\n      var range = _this.getRange();\n      var dValue = curValue - preValue;\n      if (dValue < 0) {\n        // 减小, 同时未出边界\n        if (currentValue[0] + dValue > range.min) {\n          _this.setValue([currentValue[0] + dValue, currentValue[1] + dValue]);\n        } else {\n          _this.setValue([range.min, range.min + curDiff]);\n        }\n        //  && ||\n      } else if (dValue > 0) {\n        if (dValue > 0 && currentValue[1] + dValue < range.max) {\n          _this.setValue([currentValue[0] + dValue, currentValue[1] + dValue]);\n        } else {\n          _this.setValue([range.max - curDiff, range.max]);\n        }\n      }\n      prePoint = {\n        x: ev.x,\n        y: ev.y\n      };\n    });\n    group.on('legend-track:dragend', function (ev) {\n      prePoint = null;\n    });\n  };\n  ContinueLegend.prototype.drawLabels = function (group) {\n    this.drawLabel('min', group);\n    this.drawLabel('max', group);\n  };\n  ContinueLegend.prototype.drawLabel = function (name, group) {\n    var labelCfg = this.get('label');\n    var style = labelCfg.style;\n    var labelAlign = labelCfg.align;\n    var labelFormatter = labelCfg.formatter;\n    var value = this.get(name);\n    var alignAttrs = this.getLabelAlignAttrs(name, labelAlign);\n    var localId = \"label-\" + name;\n    this.addShape(group, {\n      type: 'text',\n      id: this.getElementId(localId),\n      name: \"legend-label-\" + name,\n      attrs: __assign(__assign({\n        x: 0,\n        y: 0,\n        text: isFunction(labelFormatter) ? labelFormatter(value) : value\n      }, style), alignAttrs)\n    });\n  };\n  // 获取文本的对齐方式，为了自适应真实操碎了心\n  ContinueLegend.prototype.getLabelAlignAttrs = function (name, align) {\n    var isVertical = this.isVertical();\n    var textAlign = 'center';\n    var textBaseline = 'middle';\n    if (isVertical) {\n      // 垂直布局的所有的文本都左对齐\n      textAlign = 'start';\n      if (align !== 'rail') {\n        if (name === 'min') {\n          textBaseline = 'top';\n        } else {\n          textBaseline = 'bottom';\n        }\n      } else {\n        textBaseline = 'top';\n      }\n    } else {\n      if (align !== 'rail') {\n        textBaseline = 'top';\n        if (name === 'min') {\n          textAlign = 'start';\n        } else {\n          textAlign = 'end';\n        }\n      } else {\n        textAlign = 'start';\n        textBaseline = 'middle';\n      }\n    }\n    return {\n      textAlign: textAlign,\n      textBaseline: textBaseline\n    };\n  };\n  ContinueLegend.prototype.getRailPath = function (x, y, w, h) {\n    var railCfg = this.get('rail');\n    var size = railCfg.size,\n      defaultLength = railCfg.defaultLength,\n      type = railCfg.type;\n    var isVertical = this.isVertical();\n    var length = defaultLength;\n    var width = w;\n    var height = h;\n    if (!width) {\n      width = isVertical ? size : length;\n    }\n    if (!height) {\n      height = isVertical ? length : size;\n    }\n    var path = [];\n    if (type === 'color') {\n      path.push(['M', x, y]);\n      path.push(['L', x + width, y]);\n      path.push(['L', x + width, y + height]);\n      path.push(['L', x, y + height]);\n      path.push(['Z']);\n    } else {\n      path.push(['M', x + width, y]);\n      path.push(['L', x + width, y + height]);\n      path.push(['L', x, y + height]);\n      path.push(['Z']);\n    }\n    return path;\n  };\n  ContinueLegend.prototype.drawRail = function (group) {\n    var railCfg = this.get('rail');\n    var style = railCfg.style;\n    this.addShape(group, {\n      type: 'path',\n      id: this.getElementId('rail'),\n      name: 'legend-rail',\n      attrs: __assign({\n        path: this.getRailPath(0, 0)\n      }, style)\n    });\n  };\n  // 将传入的颜色转换成渐变色\n  ContinueLegend.prototype.getTrackColor = function (colors) {\n    var count = colors.length;\n    if (!count) {\n      return null;\n    }\n    if (count === 1) {\n      return colors[0];\n    }\n    var color; // 最终形态 l(0) 0:colors[0] 0.5:colors[1] 1:colors[2];\n    if (this.isVertical()) {\n      // 根据方向设置渐变方向\n      color = 'l(90)';\n    } else {\n      color = 'l(0)';\n    }\n    for (var i = 0; i < count; i++) {\n      var percent = i / (count - 1);\n      color += \" \" + percent + \":\" + colors[i];\n    }\n    return color;\n  };\n  ContinueLegend.prototype.getTrackPath = function (group) {\n    var railShape = this.getRailShape(group);\n    var path = railShape.attr('path');\n    return clone(path);\n  };\n  ContinueLegend.prototype.getClipTrackAttrs = function (group) {\n    var value = this.getCurrentValue();\n    var min = value[0],\n      max = value[1];\n    var railBBox = this.getRailBBox(group);\n    var startPoint = this.getPointByValue(min, group);\n    var endPoint = this.getPointByValue(max, group);\n    var isVertical = this.isVertical();\n    var x;\n    var y;\n    var width;\n    var height;\n    if (isVertical) {\n      x = railBBox.minX;\n      y = startPoint.y;\n      width = railBBox.width;\n      height = endPoint.y - startPoint.y;\n    } else {\n      x = startPoint.x;\n      y = railBBox.minY;\n      width = endPoint.x - startPoint.x;\n      height = railBBox.height;\n    }\n    return {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    };\n  };\n  // 获取 track 的属性，由 path 和 颜色构成\n  ContinueLegend.prototype.getTrackAttrs = function (group) {\n    var trackCfg = this.get('track');\n    var colors = this.get('colors');\n    var path = this.getTrackPath(group);\n    return mix({\n      path: path,\n      fill: this.getTrackColor(colors)\n    }, trackCfg.style);\n  };\n  ContinueLegend.prototype.resetTrackClip = function (group) {\n    var container = group || this.get('group');\n    var trackId = this.getElementId('track');\n    var trackShape = container.findById(trackId);\n    var clipShape = trackShape.getClip();\n    var attrs = this.getClipTrackAttrs(group);\n    if (!clipShape) {\n      trackShape.setClip({\n        type: 'rect',\n        attrs: attrs\n      });\n    } else {\n      clipShape.attr(attrs);\n    }\n  };\n  ContinueLegend.prototype.resetTrack = function (group) {\n    var trackId = this.getElementId('track');\n    var trackShape = group.findById(trackId);\n    var trackAttrs = this.getTrackAttrs(group);\n    if (trackShape) {\n      trackShape.attr(trackAttrs);\n    } else {\n      this.addShape(group, {\n        type: 'path',\n        id: trackId,\n        draggable: this.get('slidable'),\n        name: 'legend-track',\n        attrs: trackAttrs\n      });\n    }\n  };\n  ContinueLegend.prototype.getPointByValue = function (value, group) {\n    var _a = this.getRange(),\n      min = _a.min,\n      max = _a.max;\n    var percent = (value - min) / (max - min);\n    var bbox = this.getRailBBox(group);\n    var isVertcal = this.isVertical();\n    var point = {\n      x: 0,\n      y: 0\n    };\n    if (isVertcal) {\n      point.x = bbox.minX + bbox.width / 2;\n      point.y = getValueByPercent(bbox.minY, bbox.maxY, percent);\n    } else {\n      point.x = getValueByPercent(bbox.minX, bbox.maxX, percent);\n      point.y = bbox.minY + bbox.height / 2;\n    }\n    return point;\n  };\n  ContinueLegend.prototype.getRailShape = function (group) {\n    var container = group || this.get('group');\n    return container.findById(this.getElementId('rail'));\n  };\n  // 获取滑轨的宽高信息\n  ContinueLegend.prototype.getRailBBox = function (group) {\n    var railShape = this.getRailShape(group);\n    var bbox = railShape.getBBox();\n    return bbox;\n  };\n  ContinueLegend.prototype.getRailCanvasBBox = function () {\n    var container = this.get('group');\n    var railShape = container.findById(this.getElementId('rail'));\n    var bbox = railShape.getCanvasBBox();\n    return bbox;\n  };\n  // 是否垂直\n  ContinueLegend.prototype.isVertical = function () {\n    return this.get('layout') === 'vertical';\n  };\n  // 用于交互时\n  ContinueLegend.prototype.getValueByCanvasPoint = function (x, y) {\n    var _a = this.getRange(),\n      min = _a.min,\n      max = _a.max;\n    var bbox = this.getRailCanvasBBox(); // 因为 x, y 是画布坐标\n    var isVertcal = this.isVertical();\n    var step = this.get('step');\n    var percent;\n    if (isVertcal) {\n      // 垂直时计算 y\n      percent = (y - bbox.minY) / bbox.height;\n    } else {\n      // 水平时计算 x\n      percent = (x - bbox.minX) / bbox.width;\n    }\n    var value = getValueByPercent(min, max, percent);\n    if (step) {\n      var count = Math.round((value - min) / step);\n      value = min + count * step; // 移动到最近的\n    }\n\n    if (value > max) {\n      value = max;\n    }\n    if (value < min) {\n      value = min;\n    }\n    return value;\n  };\n  // 当前选中的范围\n  ContinueLegend.prototype.getCurrentValue = function () {\n    var value = this.get('value');\n    if (!value) {\n      var values = this.get('values');\n      if (!values) {\n        return [this.get('min'), this.get('max')];\n      }\n      // 如果没有定义，取最大范围  最小值 为 values 中的最小值， 如果最小值 超过了 定义的最大值 则 做限制  最大值 反之\n      return [Math.max(Math.min.apply(Math, __spreadArrays(values, [this.get('max')])), this.get('min')), Math.min(Math.max.apply(Math, __spreadArrays(values, [this.get('min')])), this.get('max'))];\n    }\n    return value;\n  };\n  // 重置滑块 handler\n  ContinueLegend.prototype.resetHandlers = function (group) {\n    var currentValue = this.getCurrentValue();\n    var min = currentValue[0],\n      max = currentValue[1];\n    this.resetHandler(group, 'min', min);\n    this.resetHandler(group, 'max', max);\n  };\n  // 获取滑块的 path\n  ContinueLegend.prototype.getHandlerPath = function (handlerCfg, point) {\n    var isVertical = this.isVertical();\n    var path = [];\n    var width = handlerCfg.size;\n    var x = point.x,\n      y = point.y;\n    var height = width * HANDLER_HEIGHT_RATIO;\n    var halfWidth = width / 2;\n    var oneSixthWidth = width / 6;\n    if (isVertical) {\n      /**\n       * 竖直情况下的滑块 handler，左侧顶点是 x,y\n       *  /----|\n       *    -- |\n       *    -- |\n       *  \\----|\n       */\n      var triangleX = x + height * HANDLER_TRIANGLE_RATIO;\n      path.push(['M', x, y]);\n      path.push(['L', triangleX, y + halfWidth]);\n      path.push(['L', x + height, y + halfWidth]);\n      path.push(['L', x + height, y - halfWidth]);\n      path.push(['L', triangleX, y - halfWidth]);\n      path.push(['Z']);\n      // 绘制两条横线\n      path.push(['M', triangleX, y + oneSixthWidth]);\n      path.push(['L', x + height - 2, y + oneSixthWidth]);\n      path.push(['M', triangleX, y - oneSixthWidth]);\n      path.push(['L', x + height - 2, y - oneSixthWidth]);\n    } else {\n      /**\n       * 水平情况下的滑块，上面顶点处是 x,y\n       *  /   \\\n       * | | | |\n       * | | | |\n       *  -----\n       */\n      var triangleY = y + height * HANDLER_TRIANGLE_RATIO;\n      path.push(['M', x, y]);\n      path.push(['L', x - halfWidth, triangleY]);\n      path.push(['L', x - halfWidth, y + height]);\n      path.push(['L', x + halfWidth, y + height]);\n      path.push(['L', x + halfWidth, triangleY]);\n      path.push(['Z']);\n      // 绘制两条竖线\n      path.push(['M', x - oneSixthWidth, triangleY]);\n      path.push(['L', x - oneSixthWidth, y + height - 2]);\n      path.push(['M', x + oneSixthWidth, triangleY]);\n      path.push(['L', x + oneSixthWidth, y + height - 2]);\n    }\n    return path;\n  };\n  // 调整 handler 的位置，如果未存在则绘制\n  ContinueLegend.prototype.resetHandler = function (group, name, value) {\n    var point = this.getPointByValue(value, group);\n    var handlerCfg = this.get('handler');\n    var path = this.getHandlerPath(handlerCfg, point);\n    var id = this.getElementId(\"handler-\" + name);\n    var handlerShape = group.findById(id);\n    var isVertical = this.isVertical();\n    if (handlerShape) {\n      handlerShape.attr('path', path);\n    } else {\n      this.addShape(group, {\n        type: 'path',\n        name: \"legend-handler-\" + name,\n        draggable: true,\n        id: id,\n        attrs: __assign(__assign({\n          path: path\n        }, handlerCfg.style), {\n          cursor: isVertical ? 'ns-resize' : 'ew-resize'\n        })\n      });\n    }\n  };\n  // 当设置了 maxWidth, maxHeight 时调整 rail 的宽度，\n  // 文本的位置\n  ContinueLegend.prototype.fixedElements = function (group) {\n    var railShape = group.findById(this.getElementId('rail'));\n    var minLabel = group.findById(this.getElementId('label-min'));\n    var maxLabel = group.findById(this.getElementId('label-max'));\n    var startPoint = this.getDrawPoint();\n    if (this.isVertical()) {\n      // 横向布局\n      this.fixedVertail(minLabel, maxLabel, railShape, startPoint);\n    } else {\n      // 水平布局\n      this.fixedHorizontal(minLabel, maxLabel, railShape, startPoint);\n    }\n  };\n  ContinueLegend.prototype.fitRailLength = function (minLabelBBox, maxLabelBBox, railBBox, railShape) {\n    var isVertical = this.isVertical();\n    var lengthField = isVertical ? 'height' : 'width';\n    var labelCfg = this.get('label');\n    var labelAlign = labelCfg.align;\n    var spacing = labelCfg.spacing;\n    var maxLength = this.get(\"max\" + upperFirst(lengthField)); // get('maxWidth')\n    if (maxLength) {\n      var elementsLength = labelAlign === 'rail' ? railBBox[lengthField] + minLabelBBox[lengthField] + maxLabelBBox[lengthField] + spacing * 2 : railBBox[lengthField];\n      var diff = elementsLength - maxLength;\n      if (diff > 0) {\n        // 大于限制的长度\n        this.changeRailLength(railShape, lengthField, railBBox[lengthField] - diff);\n      }\n    }\n  };\n  ContinueLegend.prototype.changeRailLength = function (railShape, lengthField, length) {\n    var bbox = railShape.getBBox();\n    var path;\n    if (lengthField === 'height') {\n      path = this.getRailPath(bbox.x, bbox.y, bbox.width, length);\n    } else {\n      path = this.getRailPath(bbox.x, bbox.y, length, bbox.height);\n    }\n    railShape.attr('path', path);\n  };\n  ContinueLegend.prototype.changeRailPosition = function (railShape, x, y) {\n    var bbox = railShape.getBBox();\n    var path = this.getRailPath(x, y, bbox.width, bbox.height);\n    railShape.attr('path', path);\n  };\n  ContinueLegend.prototype.fixedHorizontal = function (minLabel, maxLabel, railShape, startPoint) {\n    var labelCfg = this.get('label');\n    var labelAlign = labelCfg.align;\n    var spacing = labelCfg.spacing;\n    var railBBox = railShape.getBBox();\n    var minLabelBBox = minLabel.getBBox();\n    var maxLabelBBox = maxLabel.getBBox();\n    var railHeight = railBBox.height; // 取 rail 的高度，作为高度\n    this.fitRailLength(minLabelBBox, maxLabelBBox, railBBox, railShape);\n    railBBox = railShape.getBBox();\n    if (labelAlign === 'rail') {\n      // 沿着 rail 方向\n      minLabel.attr({\n        x: startPoint.x,\n        y: startPoint.y + railHeight / 2\n      });\n      this.changeRailPosition(railShape, startPoint.x + minLabelBBox.width + spacing, startPoint.y);\n      maxLabel.attr({\n        x: startPoint.x + minLabelBBox.width + railBBox.width + spacing * 2,\n        y: startPoint.y + railHeight / 2\n      });\n    } else if (labelAlign === 'top') {\n      minLabel.attr({\n        x: startPoint.x,\n        y: startPoint.y\n      });\n      maxLabel.attr({\n        x: startPoint.x + railBBox.width,\n        y: startPoint.y\n      });\n      this.changeRailPosition(railShape, startPoint.x, startPoint.y + minLabelBBox.height + spacing);\n    } else {\n      this.changeRailPosition(railShape, startPoint.x, startPoint.y);\n      minLabel.attr({\n        x: startPoint.x,\n        y: startPoint.y + railBBox.height + spacing\n      });\n      maxLabel.attr({\n        x: startPoint.x + railBBox.width,\n        y: startPoint.y + railBBox.height + spacing\n      });\n    }\n  };\n  ContinueLegend.prototype.fixedVertail = function (minLabel, maxLabel, railShape, startPoint) {\n    var labelCfg = this.get('label');\n    var labelAlign = labelCfg.align;\n    var spacing = labelCfg.spacing;\n    var railBBox = railShape.getBBox();\n    var minLabelBBox = minLabel.getBBox();\n    var maxLabelBBox = maxLabel.getBBox();\n    this.fitRailLength(minLabelBBox, maxLabelBBox, railBBox, railShape);\n    railBBox = railShape.getBBox();\n    if (labelAlign === 'rail') {\n      // 沿着 rail 方向\n      minLabel.attr({\n        x: startPoint.x,\n        y: startPoint.y\n      });\n      this.changeRailPosition(railShape, startPoint.x, startPoint.y + minLabelBBox.height + spacing);\n      maxLabel.attr({\n        x: startPoint.x,\n        y: startPoint.y + minLabelBBox.height + railBBox.height + spacing * 2\n      });\n    } else if (labelAlign === 'right') {\n      minLabel.attr({\n        x: startPoint.x + railBBox.width + spacing,\n        y: startPoint.y\n      });\n      this.changeRailPosition(railShape, startPoint.x, startPoint.y);\n      maxLabel.attr({\n        x: startPoint.x + railBBox.width + spacing,\n        y: startPoint.y + railBBox.height\n      });\n    } else {\n      // left\n      var maxLabelWidth = Math.max(minLabelBBox.width, maxLabelBBox.width);\n      minLabel.attr({\n        x: startPoint.x,\n        y: startPoint.y\n      });\n      this.changeRailPosition(railShape, startPoint.x + maxLabelWidth + spacing, startPoint.y);\n      maxLabel.attr({\n        x: startPoint.x,\n        y: startPoint.y + railBBox.height\n      });\n    }\n  };\n  return ContinueLegend;\n}(LegendBase);\nexport default ContinueLegend;","map":{"version":3,"mappings":"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","names":["clone","isFunction","mix","upperFirst","Theme","getValueByPercent","LegendBase","HANDLER_HEIGHT_RATIO","HANDLER_TRIANGLE_RATIO","__extends","ContinueLegend","cfg","_super","getDefaultCfg","type","min","max","value","colors","track","rail","label","handler","slidable","tip","step","maxWidth","maxHeight","defaultCfg","align","spacing","formatter","style","fontSize","fill","textColor","textBaseline","fontFamily","size","stroke","defaultLength","title","textAlign","getCurrentValue","get","update","originValue","getValue","set","group","resetTrackClip","resetHandlers","delegateEmit","bindSliderEvent","bindRailEvent","bindTrackEvent","drawRail","drawLabels","fixedElements","resetTrack","bindHandlersEvent","on","ev","minValue","_this","getValueByCanvasPoint","x","y","currentValue","maxValue","setValue","prePoint","preValue","curValue","curDiff","range","getRange","dValue","drawLabel","name","labelCfg","labelAlign","labelFormatter","alignAttrs","getLabelAlignAttrs","localId","addShape","id","getElementId","attrs","text","isVertical","w","h","railCfg","length","width","height","path","push","getRailPath","count","color","i","percent","railShape","getRailShape","attr","railBBox","getRailBBox","startPoint","getPointByValue","endPoint","minX","minY","trackCfg","getTrackPath","getTrackColor","container","trackId","trackShape","findById","clipShape","getClip","getClipTrackAttrs","setClip","trackAttrs","getTrackAttrs","draggable","bbox","isVertcal","point","maxY","maxX","getBBox","getCanvasBBox","getRailCanvasBBox","Math","round","values","resetHandler","handlerCfg","halfWidth","oneSixthWidth","triangleX","triangleY","getHandlerPath","handlerShape","cursor","minLabel","maxLabel","getDrawPoint","fixedVertail","fixedHorizontal","minLabelBBox","maxLabelBBox","lengthField","maxLength","elementsLength","diff","changeRailLength","railHeight","fitRailLength","changeRailPosition","maxLabelWidth"],"sources":["/home/iam/Documents/LocalWeb-master/node_modules/@antv/component/src/legend/continuous.ts"],"sourcesContent":["import { IElement, IGroup } from '@antv/g-base';\nimport { clone, isFunction, mix, upperFirst } from '@antv/util';\nimport { ISlider } from '../interfaces';\nimport { BBox, ContinueLegendCfg } from '../types';\nimport Theme from '../util/theme';\nimport { getValueByPercent } from '../util/util';\nimport LegendBase from './base';\nconst HANDLER_HEIGHT_RATIO = 1.4;\nconst HANDLER_TRIANGLE_RATIO = 0.4;\n\nclass ContinueLegend extends LegendBase<ContinueLegendCfg> implements ISlider {\n  public getDefaultCfg() {\n    const cfg = super.getDefaultCfg();\n    return {\n      ...cfg,\n      type: 'continue',\n      min: 0,\n      max: 100,\n      value: null,\n      colors: [],\n      track: {},\n      rail: {},\n      label: {},\n      handler: {},\n      slidable: true,\n      tip: null,\n      step: null,\n      maxWidth: null,\n      maxHeight: null,\n      defaultCfg: {\n        label: {\n          align: 'rail',\n          spacing: 5, // 文本和 rail 的间距\n          formatter: null,\n          style: {\n            fontSize: 12,\n            fill: Theme.textColor,\n            textBaseline: 'middle',\n            fontFamily: Theme.fontFamily,\n          },\n        },\n        handler: {\n          size: 10, // handler 的默认宽度\n          style: {\n            fill: '#fff',\n            stroke: '#333',\n          },\n        },\n        track: {},\n        rail: {\n          type: 'color',\n          size: 20,\n          defaultLength: 100,\n          style: {\n            fill: '#DCDEE2',\n          },\n        },\n        title: {\n          spacing: 5,\n          style: {\n            fill: Theme.textColor,\n            fontSize: 12,\n            textAlign: 'start',\n            textBaseline: 'top',\n          },\n        },\n      },\n    };\n  }\n\n  public isSlider() {\n    return true;\n  }\n\n  // 实现 IList 接口\n  public getValue() {\n    return this.getCurrentValue();\n  }\n\n  public getRange() {\n    return {\n      min: this.get('min'),\n      max: this.get('max'),\n    };\n  }\n\n  // 改变 range\n  public setRange(min, max) {\n    this.update({\n      min,\n      max,\n    });\n  }\n\n  public setValue(value: number[]) {\n    const originValue = this.getValue();\n    this.set('value', value);\n    const group = this.get('group');\n    this.resetTrackClip();\n    if (this.get('slidable')) {\n      this.resetHandlers(group);\n    }\n    this.delegateEmit('valuechanged', {\n      originValue,\n      value,\n    });\n  }\n\n  protected initEvent() {\n    const group = this.get('group');\n    this.bindSliderEvent(group);\n    this.bindRailEvent(group);\n    this.bindTrackEvent(group);\n  }\n\n  protected drawLegendContent(group: IGroup) {\n    this.drawRail(group);\n    this.drawLabels(group);\n    this.fixedElements(group); // 调整各个图形位置，适应宽高的限制\n    this.resetTrack(group);\n    this.resetTrackClip(group);\n    if (this.get('slidable')) {\n      this.resetHandlers(group);\n    }\n  }\n\n  private bindSliderEvent(group) {\n    this.bindHandlersEvent(group);\n  }\n\n  private bindHandlersEvent(group) {\n    group.on('legend-handler-min:drag', (ev) => {\n      const minValue = this.getValueByCanvasPoint(ev.x, ev.y);\n      const currentValue = this.getCurrentValue();\n      let maxValue = currentValue[1];\n      if (maxValue < minValue) {\n        // 如果小于最小值，则调整最小值\n        maxValue = minValue;\n      }\n      this.setValue([minValue, maxValue]);\n    });\n    group.on('legend-handler-max:drag', (ev) => {\n      const maxValue = this.getValueByCanvasPoint(ev.x, ev.y);\n      const currentValue = this.getCurrentValue();\n      let minValue = currentValue[0];\n      if (minValue > maxValue) {\n        // 如果小于最小值，则调整最小值\n        minValue = maxValue;\n      }\n      this.setValue([minValue, maxValue]);\n    });\n  }\n\n  private bindRailEvent(group) {}\n\n  private bindTrackEvent(group) {\n    let prePoint = null;\n    group.on('legend-track:dragstart', (ev) => {\n      prePoint = {\n        x: ev.x,\n        y: ev.y,\n      };\n    });\n    group.on('legend-track:drag', (ev) => {\n      if (!prePoint) {\n        return;\n      }\n      const preValue = this.getValueByCanvasPoint(prePoint.x, prePoint.y);\n      const curValue = this.getValueByCanvasPoint(ev.x, ev.y);\n      const currentValue = this.getCurrentValue();\n      const curDiff = currentValue[1] - currentValue[0];\n      const range = this.getRange();\n      const dValue = curValue - preValue;\n      if (dValue < 0) {\n        // 减小, 同时未出边界\n        if (currentValue[0] + dValue > range.min) {\n          this.setValue([currentValue[0] + dValue, currentValue[1] + dValue]);\n        } else {\n          this.setValue([range.min, range.min + curDiff]);\n        }\n        //  && ||\n      } else if (dValue > 0) {\n        if (dValue > 0 && currentValue[1] + dValue < range.max) {\n          this.setValue([currentValue[0] + dValue, currentValue[1] + dValue]);\n        } else {\n          this.setValue([range.max - curDiff, range.max]);\n        }\n      }\n      prePoint = {\n        x: ev.x,\n        y: ev.y,\n      };\n    });\n    group.on('legend-track:dragend', (ev) => {\n      prePoint = null;\n    });\n  }\n\n  private drawLabels(group: IGroup) {\n    this.drawLabel('min', group);\n    this.drawLabel('max', group);\n  }\n\n  private drawLabel(name, group: IGroup) {\n    const labelCfg = this.get('label');\n    const style = labelCfg.style;\n    const labelAlign = labelCfg.align;\n    const labelFormatter = labelCfg.formatter;\n    const value = this.get(name);\n    const alignAttrs = this.getLabelAlignAttrs(name, labelAlign);\n    const localId = `label-${name}`;\n    this.addShape(group, {\n      type: 'text',\n      id: this.getElementId(localId),\n      name: `legend-label-${name}`,\n      attrs: {\n        x: 0,\n        y: 0,\n        text: isFunction(labelFormatter) ? labelFormatter(value) : value,\n        ...style,\n        ...alignAttrs,\n      },\n    });\n  }\n\n  // 获取文本的对齐方式，为了自适应真实操碎了心\n  private getLabelAlignAttrs(name, align) {\n    const isVertical = this.isVertical();\n    let textAlign = 'center';\n    let textBaseline = 'middle';\n    if (isVertical) {\n      // 垂直布局的所有的文本都左对齐\n      textAlign = 'start';\n      if (align !== 'rail') {\n        if (name === 'min') {\n          textBaseline = 'top';\n        } else {\n          textBaseline = 'bottom';\n        }\n      } else {\n        textBaseline = 'top';\n      }\n    } else {\n      if (align !== 'rail') {\n        textBaseline = 'top';\n        if (name === 'min') {\n          textAlign = 'start';\n        } else {\n          textAlign = 'end';\n        }\n      } else {\n        textAlign = 'start';\n        textBaseline = 'middle';\n      }\n    }\n    return {\n      textAlign,\n      textBaseline,\n    };\n  }\n\n  private getRailPath(x: number, y: number, w?: number, h?: number) {\n    const railCfg = this.get('rail');\n    const { size, defaultLength, type } = railCfg;\n    const isVertical = this.isVertical();\n    const length = defaultLength;\n    let width = w;\n    let height = h;\n    if (!width) {\n      width = isVertical ? size : length;\n    }\n    if (!height) {\n      height = isVertical ? length : size;\n    }\n    const path = [];\n    if (type === 'color') {\n      path.push(['M', x, y]);\n      path.push(['L', x + width, y]);\n      path.push(['L', x + width, y + height]);\n      path.push(['L', x, y + height]);\n      path.push(['Z']);\n    } else {\n      path.push(['M', x + width, y]);\n      path.push(['L', x + width, y + height]);\n      path.push(['L', x, y + height]);\n      path.push(['Z']);\n    }\n    return path;\n  }\n\n  private drawRail(group: IGroup) {\n    const railCfg = this.get('rail');\n    const style = railCfg.style;\n    this.addShape(group, {\n      type: 'path',\n      id: this.getElementId('rail'),\n      name: 'legend-rail',\n      attrs: {\n        path: this.getRailPath(0, 0),\n        ...style,\n      },\n    });\n  }\n\n  // 将传入的颜色转换成渐变色\n  private getTrackColor(colors) {\n    const count = colors.length;\n    if (!count) {\n      return null;\n    }\n    if (count === 1) {\n      return colors[0];\n    }\n    let color; // 最终形态 l(0) 0:colors[0] 0.5:colors[1] 1:colors[2];\n    if (this.isVertical()) {\n      // 根据方向设置渐变方向\n      color = 'l(90)';\n    } else {\n      color = 'l(0)';\n    }\n    for (let i = 0; i < count; i++) {\n      const percent = i / (count - 1);\n      color += ` ${percent}:${colors[i]}`;\n    }\n    return color;\n  }\n\n  private getTrackPath(group?: IGroup) {\n    const railShape = this.getRailShape(group);\n    const path = railShape.attr('path');\n    return clone(path);\n  }\n\n  private getClipTrackAttrs(group?: IGroup) {\n    const value = this.getCurrentValue();\n    const [min, max] = value;\n    const railBBox = this.getRailBBox(group);\n    const startPoint = this.getPointByValue(min, group);\n    const endPoint = this.getPointByValue(max, group);\n    const isVertical = this.isVertical();\n    let x;\n    let y;\n    let width;\n    let height;\n    if (isVertical) {\n      x = railBBox.minX;\n      y = startPoint.y;\n      width = railBBox.width;\n      height = endPoint.y - startPoint.y;\n    } else {\n      x = startPoint.x;\n      y = railBBox.minY;\n      width = endPoint.x - startPoint.x;\n      height = railBBox.height;\n    }\n    return {\n      x,\n      y,\n      width,\n      height,\n    };\n  }\n\n  // 获取 track 的属性，由 path 和 颜色构成\n  private getTrackAttrs(group?: IGroup) {\n    const trackCfg = this.get('track');\n    const colors = this.get('colors');\n    const path = this.getTrackPath(group);\n    return mix(\n      {\n        path,\n        fill: this.getTrackColor(colors),\n      },\n      trackCfg.style\n    );\n  }\n\n  private resetTrackClip(group?: IGroup) {\n    const container = group || (this.get('group') as IGroup);\n    const trackId = this.getElementId('track');\n    const trackShape = container.findById(trackId);\n    const clipShape = trackShape.getClip();\n    const attrs = this.getClipTrackAttrs(group);\n    if (!clipShape) {\n      trackShape.setClip({\n        type: 'rect',\n        attrs,\n      });\n    } else {\n      clipShape.attr(attrs);\n    }\n  }\n\n  private resetTrack(group: IGroup) {\n    const trackId = this.getElementId('track');\n    const trackShape = group.findById(trackId);\n    const trackAttrs = this.getTrackAttrs(group);\n    if (trackShape) {\n      trackShape.attr(trackAttrs);\n    } else {\n      this.addShape(group, {\n        type: 'path',\n        id: trackId,\n        draggable: this.get('slidable'),\n        name: 'legend-track',\n        attrs: trackAttrs,\n      });\n    }\n  }\n\n  private getPointByValue(value, group?: IGroup) {\n    const { min, max } = this.getRange();\n    const percent = (value - min) / (max - min);\n    const bbox = this.getRailBBox(group);\n    const isVertcal = this.isVertical();\n    const point = { x: 0, y: 0 };\n    if (isVertcal) {\n      point.x = bbox.minX + bbox.width / 2;\n      point.y = getValueByPercent(bbox.minY, bbox.maxY, percent);\n    } else {\n      point.x = getValueByPercent(bbox.minX, bbox.maxX, percent);\n      point.y = bbox.minY + bbox.height / 2;\n    }\n    return point;\n  }\n\n  private getRailShape(group?: IGroup) {\n    const container = group || (this.get('group') as IGroup);\n    return container.findById(this.getElementId('rail'));\n  }\n\n  // 获取滑轨的宽高信息\n  private getRailBBox(group?: IGroup): BBox {\n    const railShape = this.getRailShape(group);\n    const bbox = railShape.getBBox();\n    return bbox;\n  }\n\n  private getRailCanvasBBox(): BBox {\n    const container = this.get('group');\n    const railShape = container.findById(this.getElementId('rail'));\n    const bbox = railShape.getCanvasBBox();\n    return bbox;\n  }\n\n  // 是否垂直\n  private isVertical(): boolean {\n    return this.get('layout') === 'vertical';\n  }\n\n  // 用于交互时\n  private getValueByCanvasPoint(x, y) {\n    const { min, max } = this.getRange();\n    const bbox = this.getRailCanvasBBox(); // 因为 x, y 是画布坐标\n    const isVertcal = this.isVertical();\n    const step = this.get('step');\n    let percent;\n    if (isVertcal) {\n      // 垂直时计算 y\n      percent = (y - bbox.minY) / bbox.height;\n    } else {\n      // 水平时计算 x\n      percent = (x - bbox.minX) / bbox.width;\n    }\n    let value = getValueByPercent(min, max, percent);\n    if (step) {\n      const count = Math.round((value - min) / step);\n      value = min + count * step; // 移动到最近的\n    }\n    if (value > max) {\n      value = max;\n    }\n    if (value < min) {\n      value = min;\n    }\n    return value;\n  }\n\n  // 当前选中的范围\n  private getCurrentValue(): number[] {\n    const value = this.get('value');\n    if (!value) {\n      const values = this.get('values');\n      if (!values) {\n        return [this.get('min'), this.get('max')];\n      }\n      // 如果没有定义，取最大范围  最小值 为 values 中的最小值， 如果最小值 超过了 定义的最大值 则 做限制  最大值 反之\n      return [Math.max(Math.min(...values, this.get('max')), this.get('min')), Math.min(Math.max(...values, this.get('min')), this.get('max'))];\n    }\n    return value;\n  }\n\n  // 重置滑块 handler\n  private resetHandlers(group: IGroup) {\n    const currentValue = this.getCurrentValue();\n    const [min, max] = currentValue;\n    this.resetHandler(group, 'min', min);\n    this.resetHandler(group, 'max', max);\n  }\n  // 获取滑块的 path\n  private getHandlerPath(handlerCfg, point) {\n    const isVertical = this.isVertical();\n    const path = [];\n    const width = handlerCfg.size;\n    const { x, y } = point;\n    const height = width * HANDLER_HEIGHT_RATIO;\n    const halfWidth = width / 2;\n    const oneSixthWidth = width / 6;\n    if (isVertical) {\n      /**\n       * 竖直情况下的滑块 handler，左侧顶点是 x,y\n       *  /----|\n       *    -- |\n       *    -- |\n       *  \\----|\n       */\n      const triangleX = x + height * HANDLER_TRIANGLE_RATIO;\n      path.push(['M', x, y]);\n      path.push(['L', triangleX, y + halfWidth]);\n      path.push(['L', x + height, y + halfWidth]);\n      path.push(['L', x + height, y - halfWidth]);\n      path.push(['L', triangleX, y - halfWidth]);\n      path.push(['Z']);\n      // 绘制两条横线\n      path.push(['M', triangleX, y + oneSixthWidth]);\n      path.push(['L', x + height - 2, y + oneSixthWidth]);\n      path.push(['M', triangleX, y - oneSixthWidth]);\n      path.push(['L', x + height - 2, y - oneSixthWidth]);\n    } else {\n      /**\n       * 水平情况下的滑块，上面顶点处是 x,y\n       *  /   \\\n       * | | | |\n       * | | | |\n       *  -----\n       */\n      const triangleY = y + height * HANDLER_TRIANGLE_RATIO;\n      path.push(['M', x, y]);\n      path.push(['L', x - halfWidth, triangleY]);\n      path.push(['L', x - halfWidth, y + height]);\n      path.push(['L', x + halfWidth, y + height]);\n      path.push(['L', x + halfWidth, triangleY]);\n      path.push(['Z']);\n      // 绘制两条竖线\n      path.push(['M', x - oneSixthWidth, triangleY]);\n      path.push(['L', x - oneSixthWidth, y + height - 2]);\n      path.push(['M', x + oneSixthWidth, triangleY]);\n      path.push(['L', x + oneSixthWidth, y + height - 2]);\n    }\n    return path;\n  }\n\n  // 调整 handler 的位置，如果未存在则绘制\n  private resetHandler(group: IGroup, name, value) {\n    const point = this.getPointByValue(value, group);\n    const handlerCfg = this.get('handler');\n    const path = this.getHandlerPath(handlerCfg, point);\n    const id = this.getElementId(`handler-${name}`);\n    const handlerShape = group.findById(id);\n    const isVertical = this.isVertical();\n    if (handlerShape) {\n      handlerShape.attr('path', path);\n    } else {\n      this.addShape(group, {\n        type: 'path',\n        name: `legend-handler-${name}`,\n        draggable: true, // 可拖拽\n        id,\n        attrs: {\n          path,\n          ...handlerCfg.style,\n          cursor: isVertical ? 'ns-resize' : 'ew-resize',\n        },\n      });\n    }\n  }\n\n  // 当设置了 maxWidth, maxHeight 时调整 rail 的宽度，\n  // 文本的位置\n  private fixedElements(group: IGroup) {\n    const railShape = group.findById(this.getElementId('rail'));\n    const minLabel = group.findById(this.getElementId('label-min'));\n    const maxLabel = group.findById(this.getElementId('label-max'));\n    const startPoint = this.getDrawPoint();\n    if (this.isVertical()) {\n      // 横向布局\n      this.fixedVertail(minLabel, maxLabel, railShape, startPoint);\n    } else {\n      // 水平布局\n      this.fixedHorizontal(minLabel, maxLabel, railShape, startPoint);\n    }\n  }\n\n  private fitRailLength(minLabelBBox, maxLabelBBox, railBBox, railShape) {\n    const isVertical = this.isVertical();\n    const lengthField = isVertical ? 'height' : 'width';\n    const labelCfg = this.get('label');\n    const labelAlign = labelCfg.align;\n    const spacing = labelCfg.spacing;\n    const maxLength = this.get(`max${upperFirst(lengthField)}`); // get('maxWidth')\n    if (maxLength) {\n      const elementsLength =\n        labelAlign === 'rail'\n          ? railBBox[lengthField] + minLabelBBox[lengthField] + maxLabelBBox[lengthField] + spacing * 2\n          : railBBox[lengthField];\n      const diff = elementsLength - maxLength;\n      if (diff > 0) {\n        // 大于限制的长度\n        this.changeRailLength(railShape, lengthField, railBBox[lengthField] - diff);\n      }\n    }\n  }\n\n  private changeRailLength(railShape, lengthField, length) {\n    const bbox = railShape.getBBox();\n    let path;\n    if (lengthField === 'height') {\n      path = this.getRailPath(bbox.x, bbox.y, bbox.width, length);\n    } else {\n      path = this.getRailPath(bbox.x, bbox.y, length, bbox.height);\n    }\n    railShape.attr('path', path);\n  }\n\n  private changeRailPosition(railShape, x, y) {\n    const bbox = railShape.getBBox();\n    const path = this.getRailPath(x, y, bbox.width, bbox.height);\n    railShape.attr('path', path);\n  }\n\n  private fixedHorizontal(minLabel: IElement, maxLabel: IElement, railShape: IElement, startPoint) {\n    const labelCfg = this.get('label');\n    const labelAlign = labelCfg.align;\n    const spacing = labelCfg.spacing;\n    let railBBox = railShape.getBBox();\n    const minLabelBBox = minLabel.getBBox();\n    const maxLabelBBox = maxLabel.getBBox();\n    const railHeight = railBBox.height; // 取 rail 的高度，作为高度\n    this.fitRailLength(minLabelBBox, maxLabelBBox, railBBox, railShape);\n    railBBox = railShape.getBBox();\n    if (labelAlign === 'rail') {\n      // 沿着 rail 方向\n      minLabel.attr({\n        x: startPoint.x,\n        y: startPoint.y + railHeight / 2,\n      });\n      this.changeRailPosition(railShape, startPoint.x + minLabelBBox.width + spacing, startPoint.y);\n      maxLabel.attr({\n        x: startPoint.x + minLabelBBox.width + railBBox.width + spacing * 2,\n        y: startPoint.y + railHeight / 2,\n      });\n    } else if (labelAlign === 'top') {\n      minLabel.attr({\n        x: startPoint.x,\n        y: startPoint.y,\n      });\n      maxLabel.attr({\n        x: startPoint.x + railBBox.width,\n        y: startPoint.y,\n      });\n      this.changeRailPosition(railShape, startPoint.x, startPoint.y + minLabelBBox.height + spacing);\n    } else {\n      this.changeRailPosition(railShape, startPoint.x, startPoint.y);\n      minLabel.attr({\n        x: startPoint.x,\n        y: startPoint.y + railBBox.height + spacing,\n      });\n      maxLabel.attr({\n        x: startPoint.x + railBBox.width,\n        y: startPoint.y + railBBox.height + spacing,\n      });\n    }\n  }\n\n  private fixedVertail(minLabel: IElement, maxLabel: IElement, railShape: IElement, startPoint) {\n    const labelCfg = this.get('label');\n    const labelAlign = labelCfg.align;\n    const spacing = labelCfg.spacing;\n    let railBBox = railShape.getBBox();\n    const minLabelBBox = minLabel.getBBox();\n    const maxLabelBBox = maxLabel.getBBox();\n    this.fitRailLength(minLabelBBox, maxLabelBBox, railBBox, railShape);\n    railBBox = railShape.getBBox();\n\n    if (labelAlign === 'rail') {\n      // 沿着 rail 方向\n      minLabel.attr({\n        x: startPoint.x,\n        y: startPoint.y,\n      });\n      this.changeRailPosition(railShape, startPoint.x, startPoint.y + minLabelBBox.height + spacing);\n      maxLabel.attr({\n        x: startPoint.x,\n        y: startPoint.y + minLabelBBox.height + railBBox.height + spacing * 2,\n      });\n    } else if (labelAlign === 'right') {\n      minLabel.attr({\n        x: startPoint.x + railBBox.width + spacing,\n        y: startPoint.y,\n      });\n      this.changeRailPosition(railShape, startPoint.x, startPoint.y);\n      maxLabel.attr({\n        x: startPoint.x + railBBox.width + spacing,\n        y: startPoint.y + railBBox.height,\n      });\n    } else {\n      // left\n      const maxLabelWidth = Math.max(minLabelBBox.width, maxLabelBBox.width);\n      minLabel.attr({\n        x: startPoint.x,\n        y: startPoint.y,\n      });\n      this.changeRailPosition(railShape, startPoint.x + maxLabelWidth + spacing, startPoint.y);\n      maxLabel.attr({\n        x: startPoint.x,\n        y: startPoint.y + railBBox.height,\n      });\n    }\n  }\n}\n\nexport default ContinueLegend;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}