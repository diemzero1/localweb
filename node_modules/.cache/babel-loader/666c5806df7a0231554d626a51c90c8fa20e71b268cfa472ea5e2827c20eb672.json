{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { deepMix, each } from '@antv/util';\nimport Action from '../base';\n/**\n * @ignore\n * 辅助框 Action 的基类\n */\nvar MaskBase = /** @class */function (_super) {\n  __extends(MaskBase, _super);\n  function MaskBase() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    // mask 图形\n    _this.maskShape = null;\n    // 组成 mask 的各个点\n    _this.points = [];\n    // 开始 mask 的标记\n    _this.starting = false;\n    // 开始移动的标记\n    _this.moving = false;\n    _this.preMovePoint = null;\n    _this.shapeType = 'path';\n    return _this;\n  }\n  // 获取当前的位置\n  MaskBase.prototype.getCurrentPoint = function () {\n    var event = this.context.event;\n    return {\n      x: event.x,\n      y: event.y\n    };\n  };\n  // 触发 mask 的事件\n  MaskBase.prototype.emitEvent = function (type) {\n    var eventName = \"mask:\".concat(type);\n    var view = this.context.view;\n    var event = this.context.event;\n    view.emit(eventName, {\n      target: this.maskShape,\n      shape: this.maskShape,\n      points: this.points,\n      x: event.x,\n      y: event.y\n    });\n  };\n  // 创建 mask\n  MaskBase.prototype.createMask = function () {\n    var view = this.context.view;\n    var maskAttrs = this.getMaskAttrs();\n    var maskShape = view.foregroundGroup.addShape({\n      type: this.shapeType,\n      name: 'mask',\n      draggable: true,\n      attrs: __assign({\n        fill: '#C5D4EB',\n        opacity: 0.3\n      }, maskAttrs)\n    });\n    return maskShape;\n  };\n  // 生成 mask 的路径\n  MaskBase.prototype.getMaskPath = function () {\n    return [];\n  };\n  /**\n   * 显示\n   */\n  MaskBase.prototype.show = function () {\n    if (this.maskShape) {\n      this.maskShape.show();\n      this.emitEvent('show');\n    }\n  };\n  /**\n   * 开始\n   */\n  MaskBase.prototype.start = function (arg) {\n    this.starting = true;\n    // 开始时，保证移动结束\n    this.moving = false;\n    this.points = [this.getCurrentPoint()];\n    if (!this.maskShape) {\n      this.maskShape = this.createMask();\n      // 开始时设置 capture: false，可以避免创建、resize 时触发事件\n      this.maskShape.set('capture', false);\n    }\n    this.updateMask(arg === null || arg === void 0 ? void 0 : arg.maskStyle);\n    this.emitEvent('start');\n  };\n  /**\n   * 开始移动\n   */\n  MaskBase.prototype.moveStart = function () {\n    this.moving = true;\n    this.preMovePoint = this.getCurrentPoint();\n  };\n  /**\n   * 移动 mask\n   */\n  MaskBase.prototype.move = function () {\n    if (!this.moving || !this.maskShape) {\n      return;\n    }\n    var currentPoint = this.getCurrentPoint();\n    var preMovePoint = this.preMovePoint;\n    var dx = currentPoint.x - preMovePoint.x;\n    var dy = currentPoint.y - preMovePoint.y;\n    var points = this.points;\n    each(points, function (point) {\n      point.x += dx;\n      point.y += dy;\n    });\n    this.updateMask();\n    this.emitEvent('change');\n    this.preMovePoint = currentPoint;\n  };\n  MaskBase.prototype.updateMask = function (maskStyle) {\n    var attrs = deepMix({}, this.getMaskAttrs(), maskStyle);\n    this.maskShape.attr(attrs);\n  };\n  /**\n   * 结束移动\n   */\n  MaskBase.prototype.moveEnd = function () {\n    this.moving = false;\n    this.preMovePoint = null;\n  };\n  /**\n   * 结束\n   */\n  MaskBase.prototype.end = function () {\n    this.starting = false;\n    this.emitEvent('end');\n    if (this.maskShape) {\n      this.maskShape.set('capture', true);\n    }\n  };\n  /**\n   * 隐藏\n   */\n  MaskBase.prototype.hide = function () {\n    if (this.maskShape) {\n      this.maskShape.hide();\n      this.emitEvent('hide');\n    }\n  };\n  /**\n   * 大小变化\n   */\n  MaskBase.prototype.resize = function () {\n    // 只有进行中，才会允许大小变化\n    if (this.starting && this.maskShape) {\n      this.points.push(this.getCurrentPoint());\n      this.updateMask();\n      this.emitEvent('change');\n    }\n  };\n  /**\n   * 销毁\n   */\n  MaskBase.prototype.destroy = function () {\n    this.points = [];\n    if (this.maskShape) {\n      this.maskShape.remove();\n    }\n    this.maskShape = null;\n    this.preMovePoint = null;\n    _super.prototype.destroy.call(this);\n  };\n  return MaskBase;\n}(Action);\nexport default MaskBase;","map":{"version":3,"mappings":"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","names":["deepMix","each","Action","__extends","_this","MaskBase","event","context","x","y","type","eventName","view","emit","target","maskShape","shape","points","maskAttrs","getMaskAttrs","foregroundGroup","addShape","shapeType","name","draggable","attrs","fill","opacity","show","emitEvent","arg","starting","moving","getCurrentPoint","createMask","set","updateMask","maskStyle","preMovePoint","currentPoint","dx","dy","point","attr","hide","push","remove","_super","destroy"],"sources":["/home/iam/Documents/LocalWeb-master/node_modules/@antv/g2/src/interaction/action/mask/base.ts"],"sourcesContent":["import { deepMix, each } from '@antv/util';\nimport Action from '../base';\nimport { LooseObject } from '../../../interface';\n\n/**\n * @ignore\n * 辅助框 Action 的基类\n */\nabstract class MaskBase extends Action {\n  // mask 图形\n  protected maskShape = null;\n  // 组成 mask 的各个点\n  protected points = [];\n  // 开始 mask 的标记\n  protected starting = false;\n  // 开始移动的标记\n  protected moving = false;\n  protected preMovePoint = null;\n\n  protected shapeType = 'path';\n  // 获取当前的位置\n  protected getCurrentPoint() {\n    const event = this.context.event;\n    return {\n      x: event.x,\n      y: event.y,\n    };\n  }\n  // 触发 mask 的事件\n  protected emitEvent(type) {\n    const eventName = `mask:${type}`;\n    const view = this.context.view;\n    const event = this.context.event;\n    view.emit(eventName, {\n      target: this.maskShape,\n      shape: this.maskShape,\n      points: this.points,\n      x: event.x,\n      y: event.y,\n    });\n  }\n\n  // 创建 mask\n  private createMask() {\n    const view = this.context.view;\n    const maskAttrs = this.getMaskAttrs();\n    const maskShape = view.foregroundGroup.addShape({\n      type: this.shapeType,\n      name: 'mask',\n      draggable: true,\n      attrs: {\n        fill: '#C5D4EB',\n        opacity: 0.3,\n        ...maskAttrs,\n      },\n    });\n    return maskShape;\n  }\n\n  protected abstract getMaskAttrs(): LooseObject;\n\n  // 生成 mask 的路径\n  protected getMaskPath() {\n    return [];\n  }\n\n  /**\n   * 显示\n   */\n  public show() {\n    if (this.maskShape) {\n      this.maskShape.show();\n      this.emitEvent('show');\n    }\n  }\n\n  /**\n   * 开始\n   */\n  public start(arg?: { maskStyle: LooseObject }) {\n    this.starting = true;\n    // 开始时，保证移动结束\n    this.moving = false;\n    this.points = [this.getCurrentPoint()];\n    if (!this.maskShape) {\n      this.maskShape = this.createMask();\n      // 开始时设置 capture: false，可以避免创建、resize 时触发事件\n      this.maskShape.set('capture', false);\n    }\n    this.updateMask(arg?.maskStyle);\n    this.emitEvent('start');\n  }\n\n  /**\n   * 开始移动\n   */\n  public moveStart() {\n    this.moving = true;\n    this.preMovePoint = this.getCurrentPoint();\n  }\n  /**\n   * 移动 mask\n   */\n  public move() {\n    if (!this.moving || !this.maskShape) {\n      return;\n    }\n    const currentPoint = this.getCurrentPoint();\n    const preMovePoint = this.preMovePoint;\n    const dx = currentPoint.x - preMovePoint.x;\n    const dy = currentPoint.y - preMovePoint.y;\n    const points = this.points;\n    each(points, (point) => {\n      point.x += dx;\n      point.y += dy;\n    });\n    this.updateMask();\n    this.emitEvent('change');\n    this.preMovePoint = currentPoint;\n  }\n\n  protected updateMask(maskStyle?: LooseObject) {\n    const attrs = deepMix({}, this.getMaskAttrs(), maskStyle);\n    this.maskShape.attr(attrs);\n  }\n\n  /**\n   * 结束移动\n   */\n  public moveEnd() {\n    this.moving = false;\n    this.preMovePoint = null;\n  }\n\n  /**\n   * 结束\n   */\n  public end() {\n    this.starting = false;\n    this.emitEvent('end');\n    if (this.maskShape) {\n      this.maskShape.set('capture', true);\n    }\n  }\n\n  /**\n   * 隐藏\n   */\n  public hide() {\n    if (this.maskShape) {\n      this.maskShape.hide();\n      this.emitEvent('hide');\n    }\n  }\n\n  /**\n   * 大小变化\n   */\n  public resize() {\n    // 只有进行中，才会允许大小变化\n    if (this.starting && this.maskShape) {\n      this.points.push(this.getCurrentPoint());\n      this.updateMask();\n      this.emitEvent('change');\n    }\n  }\n\n  /**\n   * 销毁\n   */\n  public destroy() {\n    this.points = [];\n    if (this.maskShape) {\n      this.maskShape.remove();\n    }\n    this.maskShape = null;\n    this.preMovePoint = null;\n    super.destroy();\n  }\n}\n\nexport default MaskBase;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}