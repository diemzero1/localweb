{"ast":null,"code":"import { each, get } from '@antv/util';\nimport { doAnimate } from '../animate';\nimport { getReplaceAttrs } from '../util/graphics';\n/**\n * @desc 更新 label (目前没有根据 id 索引，还是会存在一点小问题的，只能根据 idx 索引)\n * @done shape 属性更新\n * @done shape delete\n * @done shape append\n *\n * @param fromShape old labelShape\n * @param toShape new labelShape\n * @param cfg\n */\nexport function updateLabel(fromShape, toShape, cfg) {\n  var data = cfg.data,\n    origin = cfg.origin,\n    animateCfg = cfg.animateCfg,\n    coordinate = cfg.coordinate;\n  var updateAnimateCfg = get(animateCfg, 'update');\n  fromShape.set('data', data);\n  fromShape.set('origin', origin);\n  fromShape.set('animateCfg', animateCfg);\n  fromShape.set('coordinate', coordinate);\n  fromShape.set('visible', toShape.get('visible'));\n  (fromShape.getChildren() || []).forEach(function (fromChild, idx) {\n    var toChild = toShape.getChildByIndex(idx);\n    if (!toChild) {\n      fromShape.removeChild(fromChild);\n      fromChild.remove(true);\n    } else {\n      fromChild.set('data', data);\n      fromChild.set('origin', origin);\n      fromChild.set('animateCfg', animateCfg);\n      fromChild.set('coordinate', coordinate);\n      var newAttrs = getReplaceAttrs(fromChild, toChild);\n      if (updateAnimateCfg) {\n        doAnimate(fromChild, updateAnimateCfg, {\n          toAttrs: newAttrs,\n          coordinate: coordinate\n        });\n      } else {\n        fromChild.attr(newAttrs);\n      }\n      if (toChild.isGroup()) {\n        updateLabel(fromChild, toChild, cfg);\n      }\n    }\n  });\n  // append\n  each(toShape.getChildren(), function (child, idx) {\n    if (idx >= fromShape.getCount()) {\n      if (!child.destroyed) {\n        fromShape.add(child);\n      }\n    }\n  });\n}","map":{"version":3,"mappings":"AAEA,SAASA,IAAI,EAAEC,GAAG,QAAQ,YAAY;AACtC,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,eAAe,QAAQ,kBAAkB;AAUlD;;;;;;;;;;AAUA,OAAM,SAAUC,WAAW,CAACC,SAAiB,EAAEC,OAAe,EAAEC,GAAQ;EAC9D,QAAI,GAAqCA,GAAG,KAAxC;IAAEC,MAAM,GAA6BD,GAAG,OAAhC;IAAEE,UAAU,GAAiBF,GAAG,WAApB;IAAEG,UAAU,GAAKH,GAAG,WAAR;EAC5C,IAAMI,gBAAgB,GAAGV,GAAG,CAACQ,UAAU,EAAE,QAAQ,CAAC;EAElDJ,SAAS,CAACO,GAAG,CAAC,MAAM,EAAEC,IAAI,CAAC;EAC3BR,SAAS,CAACO,GAAG,CAAC,QAAQ,EAAEJ,MAAM,CAAC;EAC/BH,SAAS,CAACO,GAAG,CAAC,YAAY,EAAEH,UAAU,CAAC;EACvCJ,SAAS,CAACO,GAAG,CAAC,YAAY,EAAEF,UAAU,CAAC;EACvCL,SAAS,CAACO,GAAG,CAAC,SAAS,EAAEN,OAAO,CAACL,GAAG,CAAC,SAAS,CAAC,CAAC;EAEhD,CAACI,SAAS,CAACS,WAAW,EAAE,IAAI,EAAE,EAAEC,OAAO,CAAC,UAACC,SAAS,EAAEC,GAAG;IACrD,IAAMC,OAAO,GAAGZ,OAAO,CAACa,eAAe,CAACF,GAAG,CAAW;IACtD,IAAI,CAACC,OAAO,EAAE;MACZb,SAAS,CAACe,WAAW,CAACJ,SAAS,CAAC;MAChCA,SAAS,CAACK,MAAM,CAAC,IAAI,CAAC;KACvB,MAAM;MACLL,SAAS,CAACJ,GAAG,CAAC,MAAM,EAAEC,IAAI,CAAC;MAC3BG,SAAS,CAACJ,GAAG,CAAC,QAAQ,EAAEJ,MAAM,CAAC;MAC/BQ,SAAS,CAACJ,GAAG,CAAC,YAAY,EAAEH,UAAU,CAAC;MACvCO,SAAS,CAACJ,GAAG,CAAC,YAAY,EAAEF,UAAU,CAAC;MAEvC,IAAMY,QAAQ,GAAGnB,eAAe,CAACa,SAAmB,EAAEE,OAAO,CAAC;MAC9D,IAAIP,gBAAgB,EAAE;QACpBT,SAAS,CAACc,SAAmB,EAAEL,gBAAgB,EAAE;UAC/CY,OAAO,EAAED,QAAQ;UACjBZ,UAAU;SACX,CAAC;OACH,MAAM;QACLM,SAAS,CAACQ,IAAI,CAACF,QAAQ,CAAC;;MAE1B,IAAIJ,OAAO,CAACO,OAAO,EAAE,EAAE;QACrBrB,WAAW,CAACY,SAAgB,EAAEE,OAAc,EAAEX,GAAG,CAAC;;;EAGxD,CAAC,CAAC;EAEF;EACAP,IAAI,CAACM,OAAO,CAACQ,WAAW,EAAE,EAAE,UAACY,KAAK,EAAET,GAAG;IACrC,IAAIA,GAAG,IAAIZ,SAAS,CAACsB,QAAQ,EAAE,EAAE;MAC/B,IAAI,CAACD,KAAK,CAACE,SAAS,EAAE;QACpBvB,SAAS,CAACwB,GAAG,CAACH,KAAK,CAAC;;;EAG1B,CAAC,CAAC;AACJ","names":["each","get","doAnimate","getReplaceAttrs","updateLabel","fromShape","toShape","cfg","origin","animateCfg","coordinate","updateAnimateCfg","set","data","getChildren","forEach","fromChild","idx","toChild","getChildByIndex","removeChild","remove","newAttrs","toAttrs","attr","isGroup","child","getCount","destroyed","add"],"sources":["/home/iam/Documents/LocalWeb-master/node_modules/@antv/g2/src/component/update-label.ts"],"sourcesContent":["import { Coordinate } from '@antv/coord';\nimport { IGroup, IShape } from '@antv/g-base';\nimport { each, get } from '@antv/util';\nimport { doAnimate } from '../animate';\nimport { getReplaceAttrs } from '../util/graphics';\n\n/** label 的必要配置 */\ntype Cfg = {\n  data: any;\n  origin: any;\n  animateCfg: any;\n  coordinate: Coordinate;\n};\n\n/**\n * @desc 更新 label (目前没有根据 id 索引，还是会存在一点小问题的，只能根据 idx 索引)\n * @done shape 属性更新\n * @done shape delete\n * @done shape append\n *\n * @param fromShape old labelShape\n * @param toShape new labelShape\n * @param cfg\n */\nexport function updateLabel(fromShape: IGroup, toShape: IGroup, cfg: Cfg): void {\n  const { data, origin, animateCfg, coordinate } = cfg;\n  const updateAnimateCfg = get(animateCfg, 'update');\n\n  fromShape.set('data', data);\n  fromShape.set('origin', origin);\n  fromShape.set('animateCfg', animateCfg);\n  fromShape.set('coordinate', coordinate);\n  fromShape.set('visible', toShape.get('visible'));\n\n  (fromShape.getChildren() || []).forEach((fromChild, idx) => {\n    const toChild = toShape.getChildByIndex(idx) as IShape;\n    if (!toChild) {\n      fromShape.removeChild(fromChild);\n      fromChild.remove(true);\n    } else {\n      fromChild.set('data', data);\n      fromChild.set('origin', origin);\n      fromChild.set('animateCfg', animateCfg);\n      fromChild.set('coordinate', coordinate);\n\n      const newAttrs = getReplaceAttrs(fromChild as IShape, toChild);\n      if (updateAnimateCfg) {\n        doAnimate(fromChild as IShape, updateAnimateCfg, {\n          toAttrs: newAttrs,\n          coordinate,\n        });\n      } else {\n        fromChild.attr(newAttrs);\n      }\n      if (toChild.isGroup()) {\n        updateLabel(fromChild as any, toChild as any, cfg);\n      }\n    }\n  });\n\n  // append\n  each(toShape.getChildren(), (child, idx) => {\n    if (idx >= fromShape.getCount()) {\n      if (!child.destroyed) {\n        fromShape.add(child);\n      }\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}