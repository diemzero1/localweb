{"ast":null,"code":"import { each } from '@antv/util';\nimport { MarkerSymbols } from '../../../util/marker';\nimport { registerShape, registerShapeFactory } from '../base';\nimport { splitPoints } from '../util/split-points';\nimport { drawPoints, SHAPES } from './util';\nvar PointShapeFactory = registerShapeFactory('point', {\n  defaultShapeType: 'hollow-circle',\n  getDefaultPoints: function (pointInfo) {\n    return splitPoints(pointInfo);\n  }\n});\neach(SHAPES, function (shapeName) {\n  // 添加该 shape 对应的 hollow-shape\n  registerShape('point', \"hollow-\".concat(shapeName), {\n    draw: function (cfg, container) {\n      return drawPoints(this, cfg, container, shapeName, true);\n    },\n    getMarker: function (markerCfg) {\n      var color = markerCfg.color;\n      return {\n        symbol: MarkerSymbols[shapeName] || shapeName,\n        style: {\n          r: 4.5,\n          stroke: color,\n          fill: null\n        }\n      };\n    }\n  });\n});\nexport default PointShapeFactory;","map":{"version":3,"mappings":"AAAA,SAASA,IAAI,QAAQ,YAAY;AAIjC,SAASC,aAAa,QAAQ,sBAAsB;AACpD,SAASC,aAAa,EAAEC,oBAAoB,QAAQ,SAAS;AAC7D,SAASC,WAAW,QAAQ,sBAAsB;AAClD,SAASC,UAAU,EAAEC,MAAM,QAAQ,QAAQ;AAE3C,IAAMC,iBAAiB,GAAGJ,oBAAoB,CAAC,OAAO,EAAE;EACtDK,gBAAgB,EAAE,eAAe;EACjCC,gBAAgB,YAACC,SAAqB;IACpC,OAAON,WAAW,CAACM,SAAS,CAAC;EAC/B;CACD,CAAC;AAEFV,IAAI,CAACM,MAAM,EAAE,UAACK,SAAiB;EAC7B;EACAT,aAAa,CAAC,OAAO,EAAE,iBAAUS,SAAS,CAAE,EAAE;IAC5CC,IAAI,YAACC,GAAc,EAAEC,SAAiB;MACpC,OAAOT,UAAU,CAAC,IAAI,EAAEQ,GAAG,EAAEC,SAAS,EAAEH,SAAS,EAAE,IAAI,CAAC;IAC1D,CAAC;IACDI,SAAS,YAACC,SAAyB;MACzB,SAAK,GAAKA,SAAS,MAAd;MACb,OAAO;QACLC,MAAM,EAAEhB,aAAa,CAACU,SAAS,CAAC,IAAIA,SAAS;QAC7CO,KAAK,EAAE;UACLC,CAAC,EAAE,GAAG;UACNC,MAAM,EAAEC,KAAK;UACbC,IAAI,EAAE;;OAET;IACH;GACD,CAAC;AACJ,CAAC,CAAC;AAEF,eAAef,iBAAiB","names":["each","MarkerSymbols","registerShape","registerShapeFactory","splitPoints","drawPoints","SHAPES","PointShapeFactory","defaultShapeType","getDefaultPoints","pointInfo","shapeName","draw","cfg","container","getMarker","markerCfg","symbol","style","r","stroke","color","fill"],"sources":["/home/iam/Documents/LocalWeb-master/node_modules/@antv/g2/src/geometry/shape/point/index.ts"],"sourcesContent":["import { each } from '@antv/util';\nimport { IGroup } from '../../../dependents';\nimport { Point, ShapeInfo, ShapeMarkerCfg, ShapePoint } from '../../../interface';\n\nimport { MarkerSymbols } from '../../../util/marker';\nimport { registerShape, registerShapeFactory } from '../base';\nimport { splitPoints } from '../util/split-points';\nimport { drawPoints, SHAPES } from './util';\n\nconst PointShapeFactory = registerShapeFactory('point', {\n  defaultShapeType: 'hollow-circle',\n  getDefaultPoints(pointInfo: ShapePoint): Point[] {\n    return splitPoints(pointInfo);\n  },\n});\n\neach(SHAPES, (shapeName: string) => {\n  // 添加该 shape 对应的 hollow-shape\n  registerShape('point', `hollow-${shapeName}`, {\n    draw(cfg: ShapeInfo, container: IGroup) {\n      return drawPoints(this, cfg, container, shapeName, true);\n    },\n    getMarker(markerCfg: ShapeMarkerCfg) {\n      const { color } = markerCfg;\n      return {\n        symbol: MarkerSymbols[shapeName] || shapeName,\n        style: {\n          r: 4.5,\n          stroke: color,\n          fill: null,\n        },\n      };\n    },\n  });\n});\n\nexport default PointShapeFactory;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}