{"ast":null,"code":"var _jsxFileName = \"/home/iam/Documents/network/src/components/antd/network/vlan/edit.tsx\",\n  _s = $RefreshSig$();\nimport { Form, Input, Button, message, Select } from 'antd';\nimport React from 'react';\nimport ubusApi from 'service/api/ubus-api';\nimport { useTranslation } from \"react-i18next\";\nimport \"../../../../translations/i18n\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const VlanEdit = props => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  let pattern1 = /^([-]?[1-9][0-9]*|0)$/;\n  const {\n    item,\n    onDone,\n    value,\n    handleChange,\n    optionsParentInterface\n  } = props;\n  console.log(value);\n  const [form] = Form.useForm();\n  const refreshData = async () => {\n    if (item) {\n      const {\n        name,\n        vid,\n        dev\n      } = item;\n      form.setFieldsValue({\n        name: name,\n        mode: value,\n        interface: dev,\n        vid: vid\n      });\n    }\n  };\n  React.useEffect(() => {\n    refreshData();\n  }, []);\n  const refreshPage = () => {\n    window.location.reload();\n  };\n  function randomName(length) {\n    let result = '';\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    const charactersLength = characters.length;\n    for (let i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  }\n  const onFinish = async values => {\n    if (values.id == null) {\n      if (values.mode == \"access\") {\n        const vlan = await ubusApi.config_network_vlan(\"access\", \"add\", randomName(4), values.name, values.vid, values.interface);\n      }\n      const key = 'updatable';\n      message.loading({\n        content: t('loading'),\n        key\n      });\n      setTimeout(() => {\n        message.success({\n          content: t('success'),\n          key,\n          duration: 2\n        });\n      }, 1000);\n      setTimeout(() => {\n        window.location.reload();\n      }, 1500);\n    } else {\n      if (values.mode == \"access\") {\n        const vlan = await ubusApi.config_network_vlan(\"access\", \"add\", values.id, values.name, values.vid, values.interface);\n      }\n      const key = 'updatable';\n      message.loading({\n        content: t('loading'),\n        key\n      });\n      setTimeout(() => {\n        message.success({\n          content: t('success'),\n          key,\n          duration: 2\n        });\n      }, 1000);\n      setTimeout(() => {\n        window.location.reload();\n      }, 1500);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    form: form,\n    labelCol: {\n      span: 6\n    },\n    wrapperCol: {\n      span: 16\n    },\n    onFinish: onFinish,\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      label: t('id'),\n      name: \"id\",\n      hidden: true,\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        disabled: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: t('mode'),\n      name: \"mode\",\n      rules: [{\n        required: true,\n        message: String(t(\"error_fill\"))\n      }],\n      children: /*#__PURE__*/_jsxDEV(Select\n      // defaultValue=\"Select Mode\"\n      , {\n        onChange: handleChange,\n        value: value,\n        options: [{\n          value: \"access\",\n          label: \"Access\"\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: t('interface'),\n      name: \"interface\",\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        mode: \"tags\",\n        options: optionsParentInterface\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"VLAN ID\",\n      name: \"vid\",\n      rules: [{\n        required: true,\n        message: String(t(\"error_fill\"))\n      }, {\n        validator: (_, values) => values > 4094 || values < 1 ? Promise.reject(t('vlanid_could_not_be_larger_than_4094')) : Promise.resolve()\n      }, {\n        validator: (_, value) => pattern1.test(value) ? Promise.resolve() : Promise.reject(t('enter_number'))\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      wrapperCol: {\n        offset: 6,\n        span: 16\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: t('submit')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_s(VlanEdit, \"E1akdFUBPSJLOif5O0ukIBVwbP0=\", false, function () {\n  return [useTranslation, Form.useForm];\n});\n_c = VlanEdit;\nvar _c;\n$RefreshReg$(_c, \"VlanEdit\");","map":{"version":3,"names":["Form","Input","Button","message","Select","React","ubusApi","useTranslation","VlanEdit","props","t","pattern1","item","onDone","value","handleChange","optionsParentInterface","console","log","form","useForm","refreshData","name","vid","dev","setFieldsValue","mode","interface","useEffect","refreshPage","window","location","reload","randomName","length","result","characters","charactersLength","i","charAt","Math","floor","random","onFinish","values","id","vlan","config_network_vlan","key","loading","content","setTimeout","success","duration","span","required","String","label","validator","_","Promise","reject","resolve","test","offset"],"sources":["/home/iam/Documents/network/src/components/antd/network/vlan/edit.tsx"],"sourcesContent":["import { message as antdMessage, Form, Input, Button, message, Select } from 'antd'\nimport { access } from 'fs'\nimport React from 'react'\nimport ubusApi from 'service/api/ubus-api'\nimport { useTranslation } from \"react-i18next\"\nimport \"../../../../translations/i18n\"\n\nexport const VlanEdit = (props: any) => {\n    const {t} = useTranslation()\n    let pattern1 = /^([-]?[1-9][0-9]*|0)$/\n    const { item, onDone, value, handleChange,optionsParentInterface } = props\n    console.log(value)\n    const [form] = Form.useForm()\n    const refreshData = async () => {\n        if (item) {\n            const { name, vid,dev, } = item\n            form.setFieldsValue({\n                name:name, mode:value, interface:dev, vid:vid\n            })\n        }\n    }\n    React.useEffect(() => {\n        refreshData()\n    }, [])\n\n    const refreshPage = ()=>{\n        window.location.reload()\n    }\n    function randomName(length: number) {\n        let result = ''\n        const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n        const charactersLength = characters.length\n        for (let i = 0; i < length; i++) {\n          result += characters.charAt(Math.floor(Math.random() * charactersLength))\n        }\n        return result\n    }\n    const onFinish = async (values: any) => {\n\n        if (values.id == null) {\n\n            if (values.mode == \"access\") {\n                const vlan = await ubusApi.config_network_vlan(\"access\", \"add\", randomName(4), values.name, values.vid, values.interface)\n            }\n            const key = 'updatable';\n            message.loading({ content: t('loading'), key });\n            setTimeout(() => {\n                message.success({ content: t('success'), key, duration: 2 });\n            }, 1000);\n            setTimeout(() => {\n                window.location.reload()\n            }, 1500);\n\n        }\n        else {\n\n            if (values.mode == \"access\") {\n                const vlan = await ubusApi.config_network_vlan(\"access\", \"add\", values.id, values.name, values.vid, values.interface)\n            }\n            const key = 'updatable';\n            message.loading({ content: t('loading'), key });\n            setTimeout(() => {\n                message.success({ content: t('success'), key, duration: 2 });\n            }, 1000);\n            setTimeout(() => {\n                window.location.reload()\n            }, 1500);\n        }\n    }\n    \n    return (\n        <Form\n            form={form}\n            labelCol={{ span: 6 }}\n            wrapperCol={{ span: 16 }}\n            onFinish={onFinish}\n        >\n            <Form.Item label={t('id')} name=\"id\" hidden \n            >\n                <Input disabled></Input>\n            </Form.Item>\n            <Form.Item label={t('mode')} name=\"mode\" rules={[{ required: true,  message: String(t(\"error_fill\"))  }]}\n            >\n                <Select\n                    // defaultValue=\"Select Mode\"\n                    onChange={handleChange}\n                    value={value}\n                    options={[\n                        {\n                            value: \"access\",\n                            label: \"Access\"\n                        },\n                    ]}\n                ></Select>\n            </Form.Item>\n            <Form.Item label={t('interface')} name=\"interface\"\n            >\n                <Select\n                    mode=\"tags\"\n                    options={optionsParentInterface}\n                ></Select>\n            </Form.Item>\n            <Form.Item label=\"VLAN ID\" name=\"vid\"\n                rules={[\n                    { required: true, message: String(t(\"error_fill\"))  },\n                    {\n                      validator: (_, values) =>\n                        values > 4094 || values < 1 ? Promise.reject(t('vlanid_could_not_be_larger_than_4094')) : Promise.resolve()\n                    },\n                    {\n                        validator: (_, value) =>\n                        pattern1.test(value) ? Promise.resolve() : Promise.reject(t('enter_number'))\n                    }\n                ]}\n            >\n                <Input></Input>\n            </Form.Item>\n\n\n            <Form.Item wrapperCol={{ offset: 6, span: 16 }}>\n                <Button\n                    type='primary'\n                    htmlType=\"submit\"\n                >\n                    {t('submit')}\n                </Button>\n            </Form.Item>\n\n        </Form>\n    )\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}