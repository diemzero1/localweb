{"ast":null,"code":"import _classCallCheck from \"/home/iam/Documents/LocalWeb-master/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/iam/Documents/LocalWeb-master/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/iam/Documents/LocalWeb-master/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/iam/Documents/LocalWeb-master/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { checkRowIndices, checkColumnIndices } from '../util';\nimport BaseView from './base';\nvar MatrixSelectionView = /*#__PURE__*/function (_BaseView) {\n  _inherits(MatrixSelectionView, _BaseView);\n  var _super = _createSuper(MatrixSelectionView);\n  function MatrixSelectionView(matrix, rowIndices, columnIndices) {\n    var _this;\n    _classCallCheck(this, MatrixSelectionView);\n    checkRowIndices(matrix, rowIndices);\n    checkColumnIndices(matrix, columnIndices);\n    _this = _super.call(this, matrix, rowIndices.length, columnIndices.length);\n    _this.rowIndices = rowIndices;\n    _this.columnIndices = columnIndices;\n    return _this;\n  }\n  _createClass(MatrixSelectionView, [{\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, value) {\n      this.matrix.set(this.rowIndices[rowIndex], this.columnIndices[columnIndex], value);\n      return this;\n    }\n  }, {\n    key: \"get\",\n    value: function get(rowIndex, columnIndex) {\n      return this.matrix.get(this.rowIndices[rowIndex], this.columnIndices[columnIndex]);\n    }\n  }]);\n  return MatrixSelectionView;\n}(BaseView);\nexport { MatrixSelectionView as default };","map":{"version":3,"names":["checkRowIndices","checkColumnIndices","BaseView","MatrixSelectionView","matrix","rowIndices","columnIndices","length","rowIndex","columnIndex","value","set","get"],"sources":["/home/iam/Documents/LocalWeb-master/node_modules/ml-matrix/src/views/selection.js"],"sourcesContent":["import { checkRowIndices, checkColumnIndices } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixSelectionView extends BaseView {\n  constructor(matrix, rowIndices, columnIndices) {\n    checkRowIndices(matrix, rowIndices);\n    checkColumnIndices(matrix, columnIndices);\n    super(matrix, rowIndices.length, columnIndices.length);\n    this.rowIndices = rowIndices;\n    this.columnIndices = columnIndices;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(\n      this.rowIndices[rowIndex],\n      this.columnIndices[columnIndex],\n      value,\n    );\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(\n      this.rowIndices[rowIndex],\n      this.columnIndices[columnIndex],\n    );\n  }\n}\n"],"mappings":";;;;AAAA,SAASA,eAAe,EAAEC,kBAAkB,QAAQ,SAAS;AAE7D,OAAOC,QAAQ,MAAM,QAAQ;AAAC,IAETC,mBAAmB;EAAA;EAAA;EACtC,6BAAYC,MAAM,EAAEC,UAAU,EAAEC,aAAa,EAAE;IAAA;IAAA;IAC7CN,eAAe,CAACI,MAAM,EAAEC,UAAU,CAAC;IACnCJ,kBAAkB,CAACG,MAAM,EAAEE,aAAa,CAAC;IACzC,0BAAMF,MAAM,EAAEC,UAAU,CAACE,MAAM,EAAED,aAAa,CAACC,MAAM;IACrD,MAAKF,UAAU,GAAGA,UAAU;IAC5B,MAAKC,aAAa,GAAGA,aAAa;IAAC;EACrC;EAAC;IAAA;IAAA,OAED,aAAIE,QAAQ,EAAEC,WAAW,EAAEC,KAAK,EAAE;MAChC,IAAI,CAACN,MAAM,CAACO,GAAG,CACb,IAAI,CAACN,UAAU,CAACG,QAAQ,CAAC,EACzB,IAAI,CAACF,aAAa,CAACG,WAAW,CAAC,EAC/BC,KAAK,CACN;MACD,OAAO,IAAI;IACb;EAAC;IAAA;IAAA,OAED,aAAIF,QAAQ,EAAEC,WAAW,EAAE;MACzB,OAAO,IAAI,CAACL,MAAM,CAACQ,GAAG,CACpB,IAAI,CAACP,UAAU,CAACG,QAAQ,CAAC,EACzB,IAAI,CAACF,aAAa,CAACG,WAAW,CAAC,CAChC;IACH;EAAC;EAAA;AAAA,EAvB8CP,QAAQ;AAAA,SAApCC,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}