{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { Action, Util } from '@antv/g2';\nimport { get } from '@antv/util';\nimport { deepAssign, normalPadding } from '../../utils';\nvar PADDING_RIGHT = 10;\nvar PADDING_TOP = 5;\n/**\n * Action 中的 Button 按钮配置\n *\n * 可能的使用场景：brush filter\n */\nexport var BUTTON_ACTION_CONFIG = {\n  padding: [8, 10],\n  text: 'reset',\n  textStyle: {\n    default: {\n      x: 0,\n      y: 0,\n      fontSize: 12,\n      fill: '#333333',\n      cursor: 'pointer'\n    }\n  },\n  buttonStyle: {\n    default: {\n      fill: '#f7f7f7',\n      stroke: '#cccccc',\n      cursor: 'pointer'\n    },\n    active: {\n      fill: '#e6e6e6'\n    }\n  }\n};\n/**\n * @override 复写 G2 Button Action, 后续直接使用 GUI\n */\nvar ButtonAction = /** @class */function (_super) {\n  __extends(ButtonAction, _super);\n  function ButtonAction() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.buttonGroup = null;\n    _this.buttonCfg = __assign({\n      name: 'button'\n    }, BUTTON_ACTION_CONFIG);\n    return _this;\n  }\n  /**\n   * 获取 mix 默认的配置和用户配置\n   */\n  ButtonAction.prototype.getButtonCfg = function () {\n    var view = this.context.view;\n    var buttonCfg = get(view, ['interactions', 'filter-action', 'cfg', 'buttonConfig']);\n    return deepAssign(this.buttonCfg, buttonCfg, this.cfg);\n  };\n  /**\n   * 绘制 Button 和 文本\n   */\n  ButtonAction.prototype.drawButton = function () {\n    var config = this.getButtonCfg();\n    var group = this.context.view.foregroundGroup.addGroup({\n      name: config.name\n    });\n    var textShape = this.drawText(group);\n    this.drawBackground(group, textShape.getBBox());\n    this.buttonGroup = group;\n  };\n  /**\n   * 绘制文本\n   */\n  ButtonAction.prototype.drawText = function (group) {\n    var _a;\n    var config = this.getButtonCfg();\n    // 添加文本\n    return group.addShape({\n      type: 'text',\n      name: 'button-text',\n      attrs: __assign({\n        text: config.text\n      }, (_a = config.textStyle) === null || _a === void 0 ? void 0 : _a.default)\n    });\n  };\n  ButtonAction.prototype.drawBackground = function (group, bbox) {\n    var _a;\n    var config = this.getButtonCfg();\n    var padding = normalPadding(config.padding);\n    // 添加背景按钮\n    var buttonShape = group.addShape({\n      type: 'rect',\n      name: 'button-rect',\n      attrs: __assign({\n        x: bbox.x - padding[3],\n        y: bbox.y - padding[0],\n        width: bbox.width + padding[1] + padding[3],\n        height: bbox.height + padding[0] + padding[2]\n      }, (_a = config.buttonStyle) === null || _a === void 0 ? void 0 : _a.default)\n    });\n    buttonShape.toBack(); // 在后面\n    // active 效果内置\n    group.on('mouseenter', function () {\n      var _a;\n      buttonShape.attr((_a = config.buttonStyle) === null || _a === void 0 ? void 0 : _a.active);\n    });\n    group.on('mouseleave', function () {\n      var _a;\n      buttonShape.attr((_a = config.buttonStyle) === null || _a === void 0 ? void 0 : _a.default);\n    });\n    return buttonShape;\n  };\n  // 重置位置\n  ButtonAction.prototype.resetPosition = function () {\n    var view = this.context.view;\n    var coord = view.getCoordinate();\n    var point = coord.convert({\n      x: 1,\n      y: 1\n    }); // 后面直接改成左上角\n    var buttonGroup = this.buttonGroup;\n    var bbox = buttonGroup.getBBox();\n    var matrix = Util.transform(null, [['t', point.x - bbox.width - PADDING_RIGHT, point.y + bbox.height + PADDING_TOP]]);\n    buttonGroup.setMatrix(matrix);\n  };\n  /**\n   * 显示\n   */\n  ButtonAction.prototype.show = function () {\n    if (!this.buttonGroup) {\n      this.drawButton();\n    }\n    this.resetPosition();\n    this.buttonGroup.show();\n  };\n  /**\n   * 隐藏\n   */\n  ButtonAction.prototype.hide = function () {\n    if (this.buttonGroup) {\n      this.buttonGroup.hide();\n    }\n  };\n  /**\n   * 销毁\n   */\n  ButtonAction.prototype.destroy = function () {\n    var buttonGroup = this.buttonGroup;\n    if (buttonGroup) {\n      buttonGroup.remove();\n    }\n    _super.prototype.destroy.call(this);\n  };\n  return ButtonAction;\n}(Action);\nexport { ButtonAction };","map":{"version":3,"mappings":"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","names":["Action","Util","get","deepAssign","normalPadding","PADDING_RIGHT","PADDING_TOP","BUTTON_ACTION_CONFIG","padding","text","textStyle","default","x","y","fontSize","fill","cursor","buttonStyle","stroke","active","__extends","_this","name","ButtonAction","context","buttonCfg","view","cfg","config","getButtonCfg","group","foregroundGroup","addGroup","textShape","drawText","drawBackground","getBBox","buttonGroup","addShape","type","attrs","bbox","buttonShape","width","height","toBack","on","attr","coord","getCoordinate","point","convert","matrix","transform","setMatrix","drawButton","resetPosition","show","hide","remove","_super","destroy"],"sources":["/home/iam/Documents/network/node_modules/@antv/g2plot/src/interactions/actions/reset-button.ts"],"sourcesContent":["import { Action, IGroup, Util } from '@antv/g2';\nimport { get } from '@antv/util';\nimport { BBox, ButtonCfg } from '../../types';\nimport { deepAssign, normalPadding } from '../../utils';\n\nconst PADDING_RIGHT = 10;\nconst PADDING_TOP = 5;\n\n/**\n * Action 中的 Button 按钮配置\n *\n * 可能的使用场景：brush filter\n */\nexport const BUTTON_ACTION_CONFIG: ButtonCfg = {\n  padding: [8, 10],\n  text: 'reset',\n  textStyle: {\n    default: {\n      x: 0,\n      y: 0,\n      fontSize: 12,\n      fill: '#333333',\n      cursor: 'pointer',\n    },\n  },\n  buttonStyle: {\n    default: {\n      fill: '#f7f7f7',\n      stroke: '#cccccc',\n      cursor: 'pointer',\n    },\n    active: {\n      fill: '#e6e6e6',\n    },\n  },\n};\n\n/**\n * @override 复写 G2 Button Action, 后续直接使用 GUI\n */\nclass ButtonAction extends Action {\n  private buttonGroup: IGroup = null;\n  private buttonCfg = {\n    name: 'button',\n    ...BUTTON_ACTION_CONFIG,\n  };\n\n  /**\n   * 获取 mix 默认的配置和用户配置\n   */\n  private getButtonCfg(): ButtonCfg & { name: string } {\n    const { view } = this.context;\n    const buttonCfg: ButtonCfg = get(view, ['interactions', 'filter-action', 'cfg', 'buttonConfig']);\n\n    return deepAssign(this.buttonCfg, buttonCfg, this.cfg);\n  }\n\n  /**\n   * 绘制 Button 和 文本\n   */\n  private drawButton() {\n    const config = this.getButtonCfg();\n    const group = this.context.view.foregroundGroup.addGroup({\n      name: config.name,\n    });\n    const textShape = this.drawText(group);\n    this.drawBackground(group, textShape.getBBox());\n\n    this.buttonGroup = group;\n  }\n\n  /**\n   * 绘制文本\n   */\n  private drawText(group: IGroup) {\n    const config = this.getButtonCfg();\n    // 添加文本\n    return group.addShape({\n      type: 'text',\n      name: 'button-text',\n      attrs: {\n        text: config.text,\n        ...config.textStyle?.default,\n      },\n    });\n  }\n\n  private drawBackground(group: IGroup, bbox: BBox) {\n    const config = this.getButtonCfg();\n    const padding = normalPadding(config.padding);\n    // 添加背景按钮\n    const buttonShape = group.addShape({\n      type: 'rect',\n      name: 'button-rect',\n      attrs: {\n        x: bbox.x - padding[3],\n        y: bbox.y - padding[0],\n        width: bbox.width + padding[1] + padding[3],\n        height: bbox.height + padding[0] + padding[2],\n        ...config.buttonStyle?.default,\n      },\n    });\n    buttonShape.toBack(); // 在后面\n\n    // active 效果内置\n    group.on('mouseenter', () => {\n      buttonShape.attr(config.buttonStyle?.active);\n    });\n    group.on('mouseleave', () => {\n      buttonShape.attr(config.buttonStyle?.default);\n    });\n\n    return buttonShape;\n  }\n\n  // 重置位置\n  private resetPosition() {\n    const view = this.context.view;\n    const coord = view.getCoordinate();\n    const point = coord.convert({ x: 1, y: 1 }); // 后面直接改成左上角\n    const buttonGroup = this.buttonGroup;\n    const bbox = buttonGroup.getBBox();\n    const matrix = Util.transform(null, [\n      ['t', point.x - bbox.width - PADDING_RIGHT, point.y + bbox.height + PADDING_TOP],\n    ]);\n    buttonGroup.setMatrix(matrix);\n  }\n\n  /**\n   * 显示\n   */\n  public show() {\n    if (!this.buttonGroup) {\n      this.drawButton();\n    }\n    this.resetPosition();\n    this.buttonGroup.show();\n  }\n\n  /**\n   * 隐藏\n   */\n  public hide() {\n    if (this.buttonGroup) {\n      this.buttonGroup.hide();\n    }\n  }\n\n  /**\n   * 销毁\n   */\n  public destroy() {\n    const buttonGroup = this.buttonGroup;\n    if (buttonGroup) {\n      buttonGroup.remove();\n    }\n    super.destroy();\n  }\n}\n\nexport { ButtonAction };\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}