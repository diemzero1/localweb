{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { get, isArray, map, maxBy, reduce } from '@antv/util';\nimport { geometry as baseGeometry } from '../../../adaptor/geometries/base';\nimport { flow } from '../../../utils';\nimport { getTooltipMapping } from '../../../utils/tooltip';\nimport { FUNNEL_CONVERSATION, FUNNEL_PERCENT, FUNNEL_TOTAL_PERCENT, PLOYGON_X, PLOYGON_Y } from '../constant';\nimport { conversionTagComponent } from './common';\n/**\n * 动态高度漏斗图\n * @param params\n * 需求: 每个漏斗项的高度根据 yfield 等比生成。漏斗上下宽度比为2，即斜率为 2。\n * 实现方式: 使用 g2 多边形，data -> 点坐标 -> 绘制\n * 以漏斗底部中心点为坐标轴原点，漏斗在 -0.5 <= x <= 0.5, 0 <= y <= 1 的正方形中绘制\n * 先计算第一象限的点, 第二象限的点即为镜像 x 轴取反。\n * 第一象限共需计算 data.length + 1 个点，在 y = 4x - 1 上。首尾分别是[0.5, 1], [0.25, 0]。根据 data 计算出 y 值，从而得到 y 值\n */\n/**\n * 处理数据\n * @param params\n */\nfunction field(params) {\n  var chart = params.chart,\n    options = params.options;\n  var _a = options.data,\n    data = _a === void 0 ? [] : _a,\n    yField = options.yField;\n  // 计算各数据项所占高度\n  var sum = reduce(data, function (total, item) {\n    return total + (item[yField] || 0);\n  }, 0);\n  var max = maxBy(data, yField)[yField];\n  var formatData = map(data, function (row, index) {\n    // 储存四个点 x，y 坐标，方向为顺时针，即 [左上, 右上，右下，左下]\n    var x = [];\n    var y = [];\n    row[FUNNEL_TOTAL_PERCENT] = (row[yField] || 0) / sum;\n    // 获取左上角，右上角坐标\n    if (index) {\n      var preItemX = data[index - 1][PLOYGON_X];\n      var preItemY = data[index - 1][PLOYGON_Y];\n      x[0] = preItemX[3];\n      y[0] = preItemY[3];\n      x[1] = preItemX[2];\n      y[1] = preItemY[2];\n    } else {\n      x[0] = -0.5;\n      y[0] = 1;\n      x[1] = 0.5;\n      y[1] = 1;\n    }\n    // 获取右下角坐标\n    y[2] = y[1] - row[FUNNEL_TOTAL_PERCENT];\n    x[2] = (y[2] + 1) / 4;\n    y[3] = y[2];\n    x[3] = -x[2];\n    // 赋值\n    row[PLOYGON_X] = x;\n    row[PLOYGON_Y] = y;\n    row[FUNNEL_PERCENT] = (row[yField] || 0) / max;\n    row[FUNNEL_CONVERSATION] = [get(data, [index - 1, yField]), row[yField]];\n    return row;\n  });\n  chart.data(formatData);\n  return params;\n}\n/**\n * geometry处理\n * @param params\n */\nfunction geometry(params) {\n  var chart = params.chart,\n    options = params.options;\n  var xField = options.xField,\n    yField = options.yField,\n    color = options.color,\n    tooltip = options.tooltip,\n    label = options.label,\n    funnelStyle = options.funnelStyle,\n    state = options.state;\n  var _a = getTooltipMapping(tooltip, [xField, yField]),\n    fields = _a.fields,\n    formatter = _a.formatter;\n  // 绘制漏斗图\n  baseGeometry({\n    chart: chart,\n    options: {\n      type: 'polygon',\n      xField: PLOYGON_X,\n      yField: PLOYGON_Y,\n      colorField: xField,\n      tooltipFields: isArray(fields) && fields.concat([FUNNEL_PERCENT, FUNNEL_CONVERSATION]),\n      label: label,\n      state: state,\n      mapping: {\n        tooltip: formatter,\n        color: color,\n        style: funnelStyle\n      }\n    }\n  });\n  return params;\n}\n/**\n * 转置处理\n * @param params\n */\nfunction transpose(params) {\n  var chart = params.chart,\n    options = params.options;\n  var isTransposed = options.isTransposed;\n  chart.coordinate({\n    type: 'rect',\n    actions: isTransposed ? [['transpose'], ['reflect', 'x']] : []\n  });\n  return params;\n}\n/**\n * 转化率组件\n * @param params\n */\nfunction conversionTag(params) {\n  var getLineCoordinate = function getLineCoordinate(datum, datumIndex, data, initLineOption) {\n    return __assign(__assign({}, initLineOption), {\n      start: [datum[PLOYGON_X][1], datum[PLOYGON_Y][1]],\n      end: [datum[PLOYGON_X][1] + 0.05, datum[PLOYGON_Y][1]]\n    });\n  };\n  conversionTagComponent(getLineCoordinate)(params);\n  return params;\n}\n/**\n * 动态高度漏斗\n * @param chart\n * @param options\n */\nexport function dynamicHeightFunnel(params) {\n  return flow(field, geometry, transpose, conversionTag)(params);\n}","map":{"version":3,"mappings":";AACA,SAASA,GAAG,EAAEC,OAAO,EAAEC,GAAG,EAAEC,KAAK,EAAEC,MAAM,QAAQ,YAAY;AAC7D,SAASC,QAAQ,IAAIC,YAAY,QAAQ,kCAAkC;AAG3E,SAASC,IAAI,QAAQ,gBAAgB;AACrC,SAASC,iBAAiB,QAAQ,wBAAwB;AAC1D,SAASC,mBAAmB,EAAEC,cAAc,EAAEC,oBAAoB,EAAEC,SAAS,EAAEC,SAAS,QAAQ,aAAa;AAE7G,SAASC,sBAAsB,QAAQ,UAAU;AAEjD;;;;;;;;;AAUA;;;;AAIA,SAASC,KAAK,CAACC,MAA6B;EAClC,SAAK,GAAcA,MAAM,MAApB;IAAEC,OAAO,GAAKD,MAAM,QAAX;EACd,SAAsBC,OAAO,KAApB;IAATC,IAAI,mBAAG,EAAE;IAAEC,MAAM,GAAKF,OAAO,OAAZ;EAEzB;EACA,IAAMG,GAAG,GAAGhB,MAAM,CAChBc,IAAI,EACJ,UAACG,KAAK,EAAEC,IAAI;IACV,OAAOD,KAAK,IAAIC,IAAI,CAACH,MAAM,CAAC,IAAI,CAAC,CAAC;EACpC,CAAC,EACD,CAAC,CACF;EAED,IAAMI,GAAG,GAAGpB,KAAK,CAACe,IAAI,EAAEC,MAAM,CAAC,CAACA,MAAM,CAAC;EAEvC,IAAMK,UAAU,GAAGtB,GAAG,CAACgB,IAAI,EAAE,UAACO,GAAG,EAAEC,KAAK;IACtC;IACA,IAAMC,CAAC,GAAG,EAAE;IACZ,IAAMC,CAAC,GAAG,EAAE;IAEZH,GAAG,CAACd,oBAAoB,CAAC,GAAG,CAACc,GAAG,CAACN,MAAM,CAAC,IAAI,CAAC,IAAIC,GAAG;IAEpD;IACA,IAAIM,KAAK,EAAE;MACT,IAAMG,QAAQ,GAAGX,IAAI,CAACQ,KAAK,GAAG,CAAC,CAAC,CAACd,SAAS,CAAC;MAC3C,IAAMkB,QAAQ,GAAGZ,IAAI,CAACQ,KAAK,GAAG,CAAC,CAAC,CAACb,SAAS,CAAC;MAC3Cc,CAAC,CAAC,CAAC,CAAC,GAAGE,QAAQ,CAAC,CAAC,CAAC;MAClBD,CAAC,CAAC,CAAC,CAAC,GAAGE,QAAQ,CAAC,CAAC,CAAC;MAClBH,CAAC,CAAC,CAAC,CAAC,GAAGE,QAAQ,CAAC,CAAC,CAAC;MAClBD,CAAC,CAAC,CAAC,CAAC,GAAGE,QAAQ,CAAC,CAAC,CAAC;KACnB,MAAM;MACLH,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG;MACXC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;MACRD,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG;MACVC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;;IAGV;IACAA,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,GAAGH,GAAG,CAACd,oBAAoB,CAAC;IACvCgB,CAAC,CAAC,CAAC,CAAC,GAAG,CAACC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;IACrBA,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC;IACXD,CAAC,CAAC,CAAC,CAAC,GAAG,CAACA,CAAC,CAAC,CAAC,CAAC;IAEZ;IACAF,GAAG,CAACb,SAAS,CAAC,GAAGe,CAAC;IAClBF,GAAG,CAACZ,SAAS,CAAC,GAAGe,CAAC;IAClBH,GAAG,CAACf,cAAc,CAAC,GAAG,CAACe,GAAG,CAACN,MAAM,CAAC,IAAI,CAAC,IAAII,GAAG;IAC9CE,GAAG,CAAChB,mBAAmB,CAAC,GAAG,CAACT,GAAG,CAACkB,IAAI,EAAE,CAACQ,KAAK,GAAG,CAAC,EAAEP,MAAM,CAAC,CAAC,EAAEM,GAAG,CAACN,MAAM,CAAC,CAAC;IACxE,OAAOM,GAAG;EACZ,CAAC,CAAC;EAEFM,KAAK,CAACb,IAAI,CAACM,UAAU,CAAC;EAEtB,OAAOR,MAAM;AACf;AAEA;;;;AAIA,SAASX,QAAQ,CAACW,MAA6B;EACrC,SAAK,GAAcA,MAAM,MAApB;IAAEC,OAAO,GAAKD,MAAM,QAAX;EACd,UAAM,GAAwDC,OAAO,OAA/D;IAAEE,MAAM,GAAgDF,OAAO,OAAvD;IAAEe,KAAK,GAAyCf,OAAO,MAAhD;IAAEgB,OAAO,GAAgChB,OAAO,QAAvC;IAAEiB,KAAK,GAAyBjB,OAAO,MAAhC;IAAEkB,WAAW,GAAYlB,OAAO,YAAnB;IAAEmB,KAAK,GAAKnB,OAAO,MAAZ;EAE3D,SAAwBT,iBAAiB,CAACyB,OAAO,EAAE,CAACI,MAAM,EAAElB,MAAM,CAAC,CAAC;IAAlEmB,MAAM;IAAEC,SAAS,eAAiD;EAC1E;EACAjC,YAAY,CAAC;IACXyB,KAAK;IACLd,OAAO,EAAE;MACPuB,IAAI,EAAE,SAAS;MACfH,MAAM,EAAEzB,SAAS;MACjBO,MAAM,EAAEN,SAAS;MACjB4B,UAAU,EAAEJ,MAAM;MAClBK,aAAa,EAAEzC,OAAO,CAACqC,MAAM,CAAC,IAAIA,MAAM,CAACK,MAAM,CAAC,CAACjC,cAAc,EAAED,mBAAmB,CAAC,CAAC;MACtFyB,KAAK;MACLE,KAAK;MACLQ,OAAO,EAAE;QACPX,OAAO,EAAEM,SAAS;QAClBP,KAAK;QACLa,KAAK,EAAEV;;;GAGZ,CAAC;EACF,OAAOnB,MAAM;AACf;AAEA;;;;AAIA,SAAS8B,SAAS,CAAC9B,MAA6B;EACtC,SAAK,GAAcA,MAAM,MAApB;IAAEC,OAAO,GAAKD,MAAM,QAAX;EACd,gBAAY,GAAKC,OAAO,aAAZ;EACpBc,KAAK,CAACgB,UAAU,CAAC;IACfP,IAAI,EAAE,MAAM;IACZQ,OAAO,EAAEC,YAAY,GAAG,CAAC,CAAC,WAAW,CAAC,EAAE,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,GAAG;GAC7D,CAAC;EACF,OAAOjC,MAAM;AACf;AAEA;;;;AAIA,SAASkC,aAAa,CAAClC,MAA6B;EAClD,IAAMmC,iBAAiB,GAAG,SAApBA,iBAAiB,CACrBC,KAAY,EACZC,UAAkB,EAClBnC,IAAU,EACVoC,cAAmC;IAEnC,6BACKA,cAAc;MACjBC,KAAK,EAAE,CAACH,KAAK,CAACxC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAEwC,KAAK,CAACvC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MACjD2C,GAAG,EAAE,CAACJ,KAAK,CAACxC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,EAAEwC,KAAK,CAACvC,SAAS,CAAC,CAAC,CAAC,CAAC;IAAC;EAE1D,CAAC;EAEDC,sBAAsB,CAACqC,iBAAiB,CAAC,CAACnC,MAAM,CAAC;EAEjD,OAAOA,MAAM;AACf;AAEA;;;;;AAKA,OAAM,SAAUyC,mBAAmB,CAACzC,MAA6B;EAC/D,OAAOT,IAAI,CAACQ,KAAK,EAAEV,QAAQ,EAAEyC,SAAS,EAAEI,aAAa,CAAC,CAAClC,MAAM,CAAC;AAChE","names":["get","isArray","map","maxBy","reduce","geometry","baseGeometry","flow","getTooltipMapping","FUNNEL_CONVERSATION","FUNNEL_PERCENT","FUNNEL_TOTAL_PERCENT","PLOYGON_X","PLOYGON_Y","conversionTagComponent","field","params","options","data","yField","sum","total","item","max","formatData","row","index","x","y","preItemX","preItemY","chart","color","tooltip","label","funnelStyle","state","xField","fields","formatter","type","colorField","tooltipFields","concat","mapping","style","transpose","coordinate","actions","isTransposed","conversionTag","getLineCoordinate","datum","datumIndex","initLineOption","start","end","dynamicHeightFunnel"],"sources":["/home/iam/Documents/network/node_modules/@antv/g2plot/src/plots/funnel/geometries/dynamic-height.ts"],"sourcesContent":["import { Types } from '@antv/g2';\nimport { get, isArray, map, maxBy, reduce } from '@antv/util';\nimport { geometry as baseGeometry } from '../../../adaptor/geometries/base';\nimport { Params } from '../../../core/adaptor';\nimport { Data, Datum } from '../../../types/common';\nimport { flow } from '../../../utils';\nimport { getTooltipMapping } from '../../../utils/tooltip';\nimport { FUNNEL_CONVERSATION, FUNNEL_PERCENT, FUNNEL_TOTAL_PERCENT, PLOYGON_X, PLOYGON_Y } from '../constant';\nimport { FunnelOptions } from '../types';\nimport { conversionTagComponent } from './common';\n\n/**\n * 动态高度漏斗图\n * @param params\n * 需求: 每个漏斗项的高度根据 yfield 等比生成。漏斗上下宽度比为2，即斜率为 2。\n * 实现方式: 使用 g2 多边形，data -> 点坐标 -> 绘制\n * 以漏斗底部中心点为坐标轴原点，漏斗在 -0.5 <= x <= 0.5, 0 <= y <= 1 的正方形中绘制\n * 先计算第一象限的点, 第二象限的点即为镜像 x 轴取反。\n * 第一象限共需计算 data.length + 1 个点，在 y = 4x - 1 上。首尾分别是[0.5, 1], [0.25, 0]。根据 data 计算出 y 值，从而得到 y 值\n */\n\n/**\n * 处理数据\n * @param params\n */\nfunction field(params: Params<FunnelOptions>): Params<FunnelOptions> {\n  const { chart, options } = params;\n  const { data = [], yField } = options;\n\n  // 计算各数据项所占高度\n  const sum = reduce(\n    data,\n    (total, item) => {\n      return total + (item[yField] || 0);\n    },\n    0\n  );\n\n  const max = maxBy(data, yField)[yField];\n\n  const formatData = map(data, (row, index) => {\n    // 储存四个点 x，y 坐标，方向为顺时针，即 [左上, 右上，右下，左下]\n    const x = [];\n    const y = [];\n\n    row[FUNNEL_TOTAL_PERCENT] = (row[yField] || 0) / sum;\n\n    // 获取左上角，右上角坐标\n    if (index) {\n      const preItemX = data[index - 1][PLOYGON_X];\n      const preItemY = data[index - 1][PLOYGON_Y];\n      x[0] = preItemX[3];\n      y[0] = preItemY[3];\n      x[1] = preItemX[2];\n      y[1] = preItemY[2];\n    } else {\n      x[0] = -0.5;\n      y[0] = 1;\n      x[1] = 0.5;\n      y[1] = 1;\n    }\n\n    // 获取右下角坐标\n    y[2] = y[1] - row[FUNNEL_TOTAL_PERCENT];\n    x[2] = (y[2] + 1) / 4;\n    y[3] = y[2];\n    x[3] = -x[2];\n\n    // 赋值\n    row[PLOYGON_X] = x;\n    row[PLOYGON_Y] = y;\n    row[FUNNEL_PERCENT] = (row[yField] || 0) / max;\n    row[FUNNEL_CONVERSATION] = [get(data, [index - 1, yField]), row[yField]];\n    return row;\n  });\n\n  chart.data(formatData);\n\n  return params;\n}\n\n/**\n * geometry处理\n * @param params\n */\nfunction geometry(params: Params<FunnelOptions>): Params<FunnelOptions> {\n  const { chart, options } = params;\n  const { xField, yField, color, tooltip, label, funnelStyle, state } = options;\n\n  const { fields, formatter } = getTooltipMapping(tooltip, [xField, yField]);\n  // 绘制漏斗图\n  baseGeometry({\n    chart,\n    options: {\n      type: 'polygon',\n      xField: PLOYGON_X,\n      yField: PLOYGON_Y,\n      colorField: xField,\n      tooltipFields: isArray(fields) && fields.concat([FUNNEL_PERCENT, FUNNEL_CONVERSATION]),\n      label,\n      state,\n      mapping: {\n        tooltip: formatter,\n        color,\n        style: funnelStyle,\n      },\n    },\n  });\n  return params;\n}\n\n/**\n * 转置处理\n * @param params\n */\nfunction transpose(params: Params<FunnelOptions>): Params<FunnelOptions> {\n  const { chart, options } = params;\n  const { isTransposed } = options;\n  chart.coordinate({\n    type: 'rect',\n    actions: isTransposed ? [['transpose'], ['reflect', 'x']] : [],\n  });\n  return params;\n}\n\n/**\n * 转化率组件\n * @param params\n */\nfunction conversionTag(params: Params<FunnelOptions>): Params<FunnelOptions> {\n  const getLineCoordinate = (\n    datum: Datum,\n    datumIndex: number,\n    data: Data,\n    initLineOption: Record<string, any>\n  ): Types.LineOption => {\n    return {\n      ...initLineOption,\n      start: [datum[PLOYGON_X][1], datum[PLOYGON_Y][1]],\n      end: [datum[PLOYGON_X][1] + 0.05, datum[PLOYGON_Y][1]],\n    };\n  };\n\n  conversionTagComponent(getLineCoordinate)(params);\n\n  return params;\n}\n\n/**\n * 动态高度漏斗\n * @param chart\n * @param options\n */\nexport function dynamicHeightFunnel(params: Params<FunnelOptions>) {\n  return flow(field, geometry, transpose, conversionTag)(params);\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}