{"ast":null,"code":"/**\n * Format number of seconds into days, hours, minutes\n * @param {*} seconds \n * @returns \n */export function formatTimeSecond(sec){var secsPerDay=86400;var secsPerHour=3600;var secsPerMinute=60;var seconds=Math.abs(sec);var minus=this<0?'-':'';var days=Math.floor(seconds/secsPerDay);seconds=seconds%secsPerDay;var hours=Math.floor(seconds/secsPerHour);seconds=seconds%secsPerHour;var minutes=Math.floor(seconds/secsPerMinute);seconds=seconds%secsPerMinute;var sDays=days>0?new String(days).padStart(1,'0')+'d ':'';var sHours=hours>0?new String(hours).padStart(2,'0')+'h ':'';var sMinutes=new String(minutes).padStart(2,'0')+'m ';return\"\".concat(minus).concat(sDays).concat(sHours).concat(sMinutes).concat(seconds,\"s\");}// https://stackoverflow.com/questions/10420352/converting-file-size-in-bytes-to-human-readable-string\n/**\n * Format bytes as human-readable text.\n *\n * @param bytes Number of bytes.\n * @param si True to use metric (SI) units, aka powers of 1000. False to use\n *           binary (IEC), aka powers of 1024.\n * @param dp Number of decimal places to display.\n *\n * @return Formatted string.\n */export function humanReadableSize(bytes){var si=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var dp=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;var thresh=si?1000:1024;if(Math.abs(bytes)<thresh){return bytes+' B';}var units=si?['kB','MB','GB','TB','PB','EB','ZB','YB']:['KiB','MiB','GiB','TiB','PiB','EiB','ZiB','YiB'];var u=-1;var r=Math.pow(10,dp);do{bytes/=thresh;++u;}while(Math.round(Math.abs(bytes)*r)/r>=thresh&&u<(units===null||units===void 0?void 0:units.length)-1);return bytes.toFixed(dp)+' '+units[u];}","map":{"version":3,"names":["formatTimeSecond","sec","secsPerDay","secsPerHour","secsPerMinute","seconds","Math","abs","minus","days","floor","hours","minutes","sDays","String","padStart","sHours","sMinutes","humanReadableSize","bytes","si","dp","thresh","units","u","r","round","length","toFixed"],"sources":["/home/iam/Documents/network/src/service/utils/data-format.js"],"sourcesContent":["/**\n * Format number of seconds into days, hours, minutes\n * @param {*} seconds \n * @returns \n */\nexport function formatTimeSecond(sec) {\n  const secsPerDay = 86400\n  const secsPerHour = 3600\n  const secsPerMinute = 60\n\n  let seconds = Math.abs(sec)\n  let minus = this < 0 ? '-' : ''\n\n  let days = Math.floor(seconds / secsPerDay)\n  seconds = seconds % secsPerDay\n  let hours = Math.floor(seconds / secsPerHour)\n  seconds = seconds % secsPerHour\n  let minutes = Math.floor(seconds / secsPerMinute)\n  seconds = seconds % secsPerMinute\n\n  let sDays = days > 0 ? new String(days).padStart(1, '0') + 'd ' : ''\n  let sHours = hours > 0 ? new String(hours).padStart(2, '0') + 'h ' : ''\n  let sMinutes = new String(minutes).padStart(2, '0') + 'm '\n\n  return `${minus}${sDays}${sHours}${sMinutes}${seconds}s`\n}\n\n// https://stackoverflow.com/questions/10420352/converting-file-size-in-bytes-to-human-readable-string\n/**\n * Format bytes as human-readable text.\n *\n * @param bytes Number of bytes.\n * @param si True to use metric (SI) units, aka powers of 1000. False to use\n *           binary (IEC), aka powers of 1024.\n * @param dp Number of decimal places to display.\n *\n * @return Formatted string.\n */\nexport function humanReadableSize(bytes, si = false, dp = 1) {\n  const thresh = si ? 1000 : 1024\n\n  if (Math.abs(bytes) < thresh) {\n    return bytes + ' B'\n  }\n\n  const units = si\n    ? ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n    : ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB']\n  let u = -1\n  const r = 10 ** dp\n\n  do {\n    bytes /= thresh\n    ++u\n  } while (\n    Math.round(Math.abs(bytes) * r) / r >= thresh &&\n    u < units?.length - 1\n  )\n\n  return bytes.toFixed(dp) + ' ' + units[u]\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,GACA,MAAO,SAASA,iBAAgB,CAACC,GAAG,CAAE,CACpC,GAAMC,WAAU,CAAG,KAAK,CACxB,GAAMC,YAAW,CAAG,IAAI,CACxB,GAAMC,cAAa,CAAG,EAAE,CAExB,GAAIC,QAAO,CAAGC,IAAI,CAACC,GAAG,CAACN,GAAG,CAAC,CAC3B,GAAIO,MAAK,CAAG,IAAI,CAAG,CAAC,CAAG,GAAG,CAAG,EAAE,CAE/B,GAAIC,KAAI,CAAGH,IAAI,CAACI,KAAK,CAACL,OAAO,CAAGH,UAAU,CAAC,CAC3CG,OAAO,CAAGA,OAAO,CAAGH,UAAU,CAC9B,GAAIS,MAAK,CAAGL,IAAI,CAACI,KAAK,CAACL,OAAO,CAAGF,WAAW,CAAC,CAC7CE,OAAO,CAAGA,OAAO,CAAGF,WAAW,CAC/B,GAAIS,QAAO,CAAGN,IAAI,CAACI,KAAK,CAACL,OAAO,CAAGD,aAAa,CAAC,CACjDC,OAAO,CAAGA,OAAO,CAAGD,aAAa,CAEjC,GAAIS,MAAK,CAAGJ,IAAI,CAAG,CAAC,CAAG,GAAIK,OAAM,CAACL,IAAI,CAAC,CAACM,QAAQ,CAAC,CAAC,CAAE,GAAG,CAAC,CAAG,IAAI,CAAG,EAAE,CACpE,GAAIC,OAAM,CAAGL,KAAK,CAAG,CAAC,CAAG,GAAIG,OAAM,CAACH,KAAK,CAAC,CAACI,QAAQ,CAAC,CAAC,CAAE,GAAG,CAAC,CAAG,IAAI,CAAG,EAAE,CACvE,GAAIE,SAAQ,CAAG,GAAIH,OAAM,CAACF,OAAO,CAAC,CAACG,QAAQ,CAAC,CAAC,CAAE,GAAG,CAAC,CAAG,IAAI,CAE1D,gBAAUP,KAAK,SAAGK,KAAK,SAAGG,MAAM,SAAGC,QAAQ,SAAGZ,OAAO,MACvD,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,SAASa,kBAAiB,CAACC,KAAK,CAAsB,IAApBC,GAAE,2DAAG,KAAK,IAAEC,GAAE,2DAAG,CAAC,CACzD,GAAMC,OAAM,CAAGF,EAAE,CAAG,IAAI,CAAG,IAAI,CAE/B,GAAId,IAAI,CAACC,GAAG,CAACY,KAAK,CAAC,CAAGG,MAAM,CAAE,CAC5B,MAAOH,MAAK,CAAG,IAAI,CACrB,CAEA,GAAMI,MAAK,CAAGH,EAAE,CACZ,CAAC,IAAI,CAAE,IAAI,CAAE,IAAI,CAAE,IAAI,CAAE,IAAI,CAAE,IAAI,CAAE,IAAI,CAAE,IAAI,CAAC,CAChD,CAAC,KAAK,CAAE,KAAK,CAAE,KAAK,CAAE,KAAK,CAAE,KAAK,CAAE,KAAK,CAAE,KAAK,CAAE,KAAK,CAAC,CAC5D,GAAII,EAAC,CAAG,CAAC,CAAC,CACV,GAAMC,EAAC,UAAG,EAAE,CAAIJ,EAAE,EAElB,EAAG,CACDF,KAAK,EAAIG,MAAM,CACf,EAAEE,CAAC,CACL,CAAC,MACClB,IAAI,CAACoB,KAAK,CAACpB,IAAI,CAACC,GAAG,CAACY,KAAK,CAAC,CAAGM,CAAC,CAAC,CAAGA,CAAC,EAAIH,MAAM,EAC7CE,CAAC,CAAG,CAAAD,KAAK,SAALA,KAAK,iBAALA,KAAK,CAAEI,MAAM,EAAG,CAAC,EAGvB,MAAOR,MAAK,CAACS,OAAO,CAACP,EAAE,CAAC,CAAG,GAAG,CAAGE,KAAK,CAACC,CAAC,CAAC,CAC3C"},"metadata":{},"sourceType":"module","externalDependencies":[]}