{"ast":null,"code":"var _jsxFileName = \"/home/iam/Documents/network/src/components/antd/security/URLfilter/URLfilterEdit.tsx\",\n  _s = $RefreshSig$();\nimport { Card, Form, Input, Button, message, AutoComplete } from 'antd';\nimport React from 'react';\nimport ubusApi from 'service/api/ubus-api';\nimport { useTranslation } from \"react-i18next\";\nimport \"../../../../translations/i18n\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const URLfilterEdit = props => {\n  _s();\n  const {\n    item,\n    onDone\n  } = props;\n  let pattern = /^[a-zA-Z0-9_.]+$/;\n  let pattern1 = /[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)?/;\n  const [form] = Form.useForm();\n  const {\n    t\n  } = useTranslation();\n  const abc = t('error_fill');\n  const refreshData = async () => {\n    if (item) {\n      const {\n        name,\n        action,\n        type,\n        url\n      } = item;\n      form.setFieldsValue({\n        name,\n        action,\n        type,\n        url\n      });\n    }\n  };\n  React.useEffect(() => {\n    refreshData();\n  }, []);\n  const refreshPage = () => {\n    window.location.reload();\n  };\n  function randomName(length) {\n    let result = '';\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    const charactersLength = characters.length;\n    for (let i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  }\n  const onFinish = async values => {\n    if (values.name == null) {\n      const param = await ubusApi.config_url_filter(randomName(4), \"add\", \"block\", values.url);\n      const key = 'updatable';\n      message.loading({\n        content: t('loading'),\n        key\n      });\n      setTimeout(() => {\n        message.success({\n          content: t('success'),\n          key,\n          duration: 2\n        });\n      }, 1000);\n      setTimeout(() => {\n        window.location.reload();\n      }, 1500);\n    } else {\n      const param = await ubusApi.config_url_filter(values.name, \"add\", \"block\", values.url);\n      const key = 'updatable';\n      message.loading({\n        content: t('loading'),\n        key\n      });\n      setTimeout(() => {\n        message.success({\n          content: t('success'),\n          key,\n          duration: 2\n        });\n      }, 1000);\n      setTimeout(() => {\n        window.location.reload();\n      }, 1500);\n    }\n  };\n  const [autoCompleteResult, setAutoCompleteResult] = React.useState([]);\n  const onWebsiteChange = value => {\n    if (!value) {\n      setAutoCompleteResult([]);\n    } else {\n      setAutoCompleteResult(['.com', '.org', '.net', '.vn', '.edu.vn', '.net.vn', '.org.vn', '.com.vn', '.info.vn', '.gov.vn', '.tel.vn'].map(domain => `${value}${domain}`));\n    }\n  };\n  const websiteOptions = autoCompleteResult.map(website => ({\n    label: website,\n    value: website\n  }));\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      form: form,\n      labelCol: {\n        span: 4\n      },\n      wrapperCol: {\n        span: 25\n      },\n      onFinish: onFinish,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        label: t('name'),\n        name: \"name\",\n        hidden: true,\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          defaultValue: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"URL\",\n        name: \"url\",\n        rules: [{\n          required: true,\n          message: String(t(\"error_fill\"))\n        }, {\n          validator: (_, value) => pattern1.test(value) ? Promise.resolve() : Promise.reject('fail form url')\n        }],\n        children: /*#__PURE__*/_jsxDEV(AutoComplete, {\n          options: websiteOptions,\n          onChange: onWebsiteChange,\n          placeholder: \"dantri.com.vn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        wrapperCol: {\n          offset: 4,\n          span: 25\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: t('submit')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n_s(URLfilterEdit, \"e7WBqKy9drxirhiYuulpl9FB+qo=\", false, function () {\n  return [Form.useForm, useTranslation];\n});\n_c = URLfilterEdit;\nexport default URLfilterEdit;\nvar _c;\n$RefreshReg$(_c, \"URLfilterEdit\");","map":{"version":3,"names":["Card","Form","Input","Button","message","AutoComplete","React","ubusApi","useTranslation","URLfilterEdit","props","item","onDone","pattern","pattern1","form","useForm","t","abc","refreshData","name","action","type","url","setFieldsValue","useEffect","refreshPage","window","location","reload","randomName","length","result","characters","charactersLength","i","charAt","Math","floor","random","onFinish","values","param","config_url_filter","key","loading","content","setTimeout","success","duration","autoCompleteResult","setAutoCompleteResult","useState","onWebsiteChange","value","map","domain","websiteOptions","website","label","span","required","String","validator","_","test","Promise","resolve","reject","offset"],"sources":["/home/iam/Documents/network/src/components/antd/security/URLfilter/URLfilterEdit.tsx"],"sourcesContent":["import { Action } from '@remix-run/router'\nimport { message as antdMessage, Card, Form, Input, Button, message, AutoComplete, Select } from 'antd'\nimport { type } from 'os'\nimport React from 'react'\nimport ubusApi from 'service/api/ubus-api'\nimport { useTranslation } from \"react-i18next\"\nimport \"../../../../translations/i18n\"\n\nexport const URLfilterEdit = (props: any) => {\n    const { item, onDone, } = props\n    let pattern = /^[a-zA-Z0-9_.]+$/\n    let pattern1 = /[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)?/\n    const [form] = Form.useForm()\n    const {t} = useTranslation()\n    const abc = t('error_fill')\n    const refreshData = async () => {\n        if (item) {\n            const { name, action, type, url, } = item\n            form.setFieldsValue({\n                name, action, type, url ,  \n            })\n        }\n    }\n    React.useEffect(() => {\n        refreshData()\n    }, [])\n    const refreshPage = ()=>{\n        window.location.reload()\n    }\n    function randomName(length: number) {\n        let result = ''\n        const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n        const charactersLength = characters.length\n        for (let i = 0; i < length; i++) {\n          result += characters.charAt(Math.floor(Math.random() * charactersLength))\n        }\n        return result\n    }\n    const onFinish = async (values: any) => {\n        if(values.name == null){\n\n            const param = await ubusApi.config_url_filter( randomName(4), \"add\", \"block\", values.url, )\n            const key = 'updatable';\n            message.loading({ content: t('loading'), key });\n            setTimeout(() => {\n                message.success({ content: t('success'), key, duration: 2 });\n            }, 1000);\n            setTimeout(() => {\n                window.location.reload()\n            }, 1500);\n        }\n        else{\n\n            const param = await ubusApi.config_url_filter(values.name, \"add\", \"block\", values.url,)\n            const key = 'updatable';\n            message.loading({ content: t('loading'), key });\n            setTimeout(() => {\n                message.success({ content: t('success'), key, duration: 2 });\n            }, 1000);\n            setTimeout(() => {\n                window.location.reload()\n            }, 1500);\n        }\n    }\n    const [autoCompleteResult, setAutoCompleteResult] = React.useState<string[]>([]);\n    const onWebsiteChange = (value: string) => {\n        if (!value) {\n          setAutoCompleteResult([]);\n        } else {\n            setAutoCompleteResult(['.com', '.org', '.net', '.vn', '.edu.vn', '.net.vn', '.org.vn', '.com.vn', '.info.vn', '.gov.vn', '.tel.vn'].map((domain) => `${value}${domain}`));\n        }\n    };\n    const websiteOptions = autoCompleteResult.map((website) => ({\n        label: website,\n        value: website,\n    }));\n    return (\n        <Card>\n        <Form\n            form={form}\n            labelCol={{ span: 4 }}\n            wrapperCol={{ span: 25 }}\n            onFinish={onFinish}\n        >\n            <Form.Item label={t('name')} name=\"name\" hidden\n            >\n                <Input defaultValue=\"\"></Input> \n            </Form.Item>\n            \n            <Form.Item label=\"URL\" name=\"url\"\n             rules={[{ required: true, message: String(t(\"error_fill\")) },\n                {\n                  validator: (_, value) =>\n                    pattern1.test(value) ? Promise.resolve() : Promise.reject('fail form url')\n                }  \n                ]}\n            >\n                <AutoComplete options={websiteOptions} onChange={onWebsiteChange} placeholder=\"dantri.com.vn\"></AutoComplete>\n            </Form.Item>            \n            <Form.Item wrapperCol={{ offset: 4, span: 25 }}>\n                <Button\n                    type='primary'\n                    htmlType=\"submit\"\n                >\n                    {t('submit')}\n                </Button>\n            </Form.Item>\n        </Form>\n        </Card>\n    )\n}\nexport default URLfilterEdit\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}